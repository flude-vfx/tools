set cut_paste_input [stack 0]
version 12.0 v8
StickyNote {
inputs 0
name StickyNote15
tile_color 0xa3ffff
label DEPTH
note_font "Bitstream Vera Sans"
note_font_size 150
selected true
xpos 301
ypos -1310
}
StickyNote {
inputs 0
name StickyNote17
tile_color 0xffac00ff
label "LENS FX / GLOWS"
note_font "Bitstream Vera Sans"
note_font_size 150
selected true
xpos -521
ypos -596
}
StickyNote {
inputs 0
name StickyNote19
tile_color 0xff4000ff
label CAMERA
note_font "Bitstream Vera Sans"
note_font_size 150
selected true
xpos 1250
ypos -1299
}
push $cut_paste_input
Group {
name smartClamp_v01
help "A clamp that attempts to make a guess for bad pixels (nan's, inf's, negatives) by sampling the surrounding pixels with a median filter"
tile_color 0x7aa9ffff
note_font "Bitstream Vera Sans"
selected true
xpos 1587
ypos -344
addUserKnob {20 SmartClamp}
addUserKnob {7 loClamp l "lo clamp"}
addUserKnob {7 hiClamp l "hi clamp" R 0 16}
hiClamp 16
addUserKnob {14 filterSize l "filter size" R 0 100}
filterSize 3
addUserKnob {4 outputImg l "gui output" t "Outputs clamped result or a map of Inf and Nan pixels.\n\nThis option only works in the GUI. Farm and CLI renders always output result" M {result "bad pixels" "" "" ""}}
addUserKnob {20 Version}
addUserKnob {26 help_1 l Help: T "Smart clamp detect for Nan's & Inf's and does a quick Median filter\nto remove these pixels specifically on that area"}
addUserKnob {26 ""}
addUserKnob {32 MoreHelp l "More Help" T "start https://confluence.lucasfilm.com/x/Ccyh" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 Release l "Version Release:" T 1.4}
addUserKnob {26 Notes l "Release Notes:" T "Minor fixes."}
addUserKnob {26 Authors l Authors: T "Jason Porter (jasonp)"}
addUserKnob {26 LastEdit l "Last Edit By:" T "Jason Porter (jasonp)"}
addUserKnob {26 Date l "Release Date:" T 12/15/10}
}
Input {
inputs 0
name Input
xpos 366
ypos -494
}
set N1c16d5c0 [stack 0]
Expression {
expr0 "r < 0 || isnan(r) || isinf(r) ? 1 : 0"
expr1 "g < 0 || isnan(g) || isinf(g) ? 1 : 0"
expr2 "b < 0 || isnan(b) || isinf(b) ? 1 : 0"
name Expression2
xpos 223
ypos -126
}
push $N1c16d5c0
Expression {
temp_name0 rc
temp_expr0 "isnan(r) || isinf(r) ? 1 : 0"
temp_name1 gc
temp_expr1 "isnan(g) || isinf(g) ? 1 : 0"
temp_name2 bc
temp_expr2 "isnan(b) || isinf(b) ? 1 : 0"
expr3 "rc || gc || bc ? 1 : 0"
name Expression3
xpos 534
ypos -401
}
Dilate {
size {{Median1.size*2 i} {Median1.size*2 i}}
name Dilate2
xpos 534
ypos -373
}
push $N1c16d5c0
Clamp {
channels rgb
minimum {{parent.loClamp}}
maximum {{parent.hiClamp}}
name Clamp1
xpos 431
ypos -398
}
Median {
inputs 1+1
size {{parent.filterSize i} {parent.filterSize i}}
name Median1
xpos 431
ypos -365
}
push $N1c16d5c0
MergeExpression {
inputs 2
expr0 "isnan(r) || isinf(r) ? Ar : Br"
expr1 "isnan(g) || isinf(g) ? Ag : Bg"
expr2 "isnan(b) || isinf(b) ? Ab : Bb"
channel3 {none none none -rgba.alpha}
expr3 "isnan(a) || isinf(a) ? Aa : Ba"
name MergeExpression2
xpos 366
ypos -288
}
Clamp {
channels rgb
minimum {{parent.loClamp i}}
maximum {{parent.hiClamp i}}
name Clamp3
xpos 366
ypos -262
}
Clamp {
channels alpha
name Clamp_Alpha_Only
note_font "Bitstream Vera Sans"
xpos 366
ypos -201
}
Switch {
inputs 2
which {{"(parent.outputImg & \$gui)" i}}
name output_switch
xpos 366
ypos -126
addUserKnob {20 User}
}
Output {
name Output1
xpos 366
ypos -57
}
end_group
push $cut_paste_input
Group {
name fixBlacks_v04
note_font "Bitstream Vera Sans"
selected true
xpos 1587
ypos -402
addUserKnob {20 User}
addUserKnob {41 channels T Grade2.channels}
addUserKnob {7 pinBlack l "Pin Blacks"}
pinBlack 0.1
addUserKnob {18 FromColor l "Source Color"}
FromColor {0 0 0}
addUserKnob {6 FromColor_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 ToColor l "Target Color"}
ToColor {0 0 0}
addUserKnob {6 ToColor_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 clamp l "clamp to target" t "Clamp the lower end of the range to the Target Color" +STARTLINE}
clamp true
addUserKnob {26 ""}
addUserKnob {41 unpremult l "(un)premult by" T Grade2.unpremult}
addUserKnob {41 invert_unpremult l invert -STARTLINE T Grade2.invert_unpremult}
addUserKnob {7 mix}
mix 1
addUserKnob {6 invertMask -STARTLINE}
addUserKnob {20 Version}
addUserKnob {26 Help l Help: T "Color correct the low color ranges of an image without affecting the rest.\nThis gizmo automates using the red, green and blue curves of curveLookup\nto do color correction. Useful for modifying RGB in an isolated value range."}
addUserKnob {26 ""}
addUserKnob {32 MoreHelp l "More Help" T "start https://confluence.lucasfilm.com/x/7Muh" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 VersionRelease l "Version Release:" T 4.2}
addUserKnob {26 ReleaseNotes l "Release Notes:" T "Changed internal function and adds a button to turn on/off the hard clip\nto the low value."}
addUserKnob {26 Author l Author: T "Jason Billington (jbillington)"}
addUserKnob {26 LastEditBy l "Last Edit By:" T "Ivan Busquets (ibusquets)"}
addUserKnob {26 ReleaseDate l "Release Date:" T 03/04/11}
}
Input {
inputs 0
name Mask
xpos 604
ypos 147
number 1
}
Invert {
name Invert1
xpos 604
ypos 270
}
AddChannels {
channels alpha
name AddChannels1
xpos 604
ypos 312
}
Invert {
name Invert2
xpos 604
ypos 409
}
Input {
inputs 0
name Input
xpos 393
ypos 140
}
set N1c261300 [stack 0]
Clamp {
channels rgb
minimum_enable false
maximum {{pinBlack} {pinBlack} {pinBlack} {curve}}
MaxClampTo {{pinBlack} {pinBlack} {pinBlack} {curve}}
MaxClampTo_enable true
unpremult -rgba.alpha
name Clamp4
xpos 170
ypos 140
}
Grade {
blackpoint {{min(pinBlack,FromColor)} {min(pinBlack,FromColor)} {min(pinBlack,FromColor)} {curve}}
whitepoint {{"max(pinBlack, FromColor)"}}
black {{parent.ToColor} {parent.ToColor} {parent.ToColor} 0}
white {{max(pinBlack,FromColor)}}
black_clamp false
unpremult -rgba.alpha
name Grade2
knobChanged "\n\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"channels\":\n    nuke.toNode('Clamp3')\['channels'].fromScript(k.toScript())\n    nuke.toNode('Clamp4')\['channels'].fromScript(k.toScript())\n    nuke.toNode('Clamp5')\['channels'].fromScript(k.toScript())\n    nuke.toNode('Merge2')\['Achannels'].fromScript(k.toScript())\n    nuke.toNode('Merge2')\['Bchannels'].fromScript(k.toScript())\n    nuke.toNode('Merge2')\['output'].fromScript(k.toScript())\n    nuke.toNode('Keymix1')\['channels'].fromScript(k.toScript())\n\nif k.name() == \"unpremult\":\n    nuke.toNode('Clamp3')\['unpremult'].fromScript(k.toScript())\n    nuke.toNode('Clamp4')\['unpremult'].fromScript(k.toScript())\n    nuke.toNode('Clamp5')\['unpremult'].fromScript(k.toScript())\n\nif k.name() == \"invert_unpremult\":\n    nuke.toNode('Clamp3')\['invert_unpremult'].fromScript(k.toScript())\n    nuke.toNode('Clamp4')\['invert_unpremult'].fromScript(k.toScript())\n    nuke.toNode('Clamp5')\['invert_unpremult'].fromScript(k.toScript())\n"
xpos 170
ypos 229
}
Clamp {
channels rgb
minimum {{min(pinBlack,ToColor)} {min(pinBlack,ToColor)} {min(pinBlack,ToColor)} 0}
minimum_enable {{parent.clamp}}
maximum {{max(pinBlack,ToColor)} {max(pinBlack,ToColor)} {max(pinBlack,ToColor)} {curve}}
maximum_enable {{parent.clamp}}
unpremult -rgba.alpha
name Clamp5
xpos 170
ypos 328
}
push $N1c261300
Clamp {
channels rgb
minimum {{pinBlack} {pinBlack} {pinBlack} {curve}}
maximum_enable false
MinClampTo_enable true
unpremult -rgba.alpha
name Clamp3
xpos 291
ypos 267
}
Merge2 {
inputs 2
operation max
Achannels rgb
Bchannels rgb
output rgb
name Merge2
xpos 170
ypos 416
}
push $N1c261300
Keymix {
inputs 3
channels rgb
invertMask {{"\[exists parent.input1] && parent.invertMask"}}
mix {{parent.mix}}
name Keymix1
xpos 393
ypos 416
}
Output {
name Output1
xpos 393
ypos 516
}
end_group
push $cut_paste_input
Dot {
name Dot222
tile_color 0xff00ff
label "plugin source plate (not DN plate)"
note_font_size 25
selected true
xpos 2253
ypos -382
}
NoOp {
name ANCHOR_Plate_Info1
tile_color 0x1c0f26ff
label "***\ncamera:   \[metadata exr/CameraModel]\nframerate:   \[metadata exr/mpl.framerate] fps\nshutter:   \[metadata exr/mpl.shutter_angle] degrees\n\nresolution:  \[metadata input/width] x  \[metadata input/height] px\nISO:   \[metadata exr/ISO] ei\ncolour temp:   \[metadata exr/mpl.white_balance]K\n\n****\nslate:   \[metadata exr/mpl.scene]\ntake:   \[metadata exr/mpl.take]\ncamera roll:   \[metadata exr/mpl.camera_roll]\n<br/>\n\n"
note_font Arial
note_font_color 0xff
selected true
xpos 2228
ypos -176
addUserKnob {20 User}
addUserKnob {22 forceUpdate l "PUSH TO REFRESH" T "node = nuke.thisNode()\nnode\['note_font'].setValue('Arial')" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 info l "" +STARTLINE T "for more lens data visit 'onset.lucasfilm'"}
addUserKnob {26 ""}
addUserKnob {32 data l onset.lucasfilm T "start http://onset.lucasfilm.com/" +STARTLINE}
}
Group {
inputs 0
name ggx_soften
note_font "Bitstream Vera Sans"
selected true
xpos 447
ypos -231
addUserKnob {20 User}
addUserKnob {7 size R 64 1024}
size 1014
addUserKnob {7 tail_falloff l "tail falloff" R 0.64 0.8}
tail_falloff 0.6665
}
Constant {
inputs 0
name Constant1
note_font "Bitstream Vera Sans"
xpos -314
ypos -334
}
Crop {
box {0 0 {"parent.size//2 * 2"} {"parent.size//2 * 2"}}
reformat true
crop false
name Crop38
xpos -314
ypos -247
}
Shuffle {
name Shuffle5
xpos -314
ypos -205
}
Expression {
temp_name0 xx
temp_expr0 x/format.w
temp_name1 yy
temp_expr1 y/format.h
temp_name2 d
temp_expr2 "max(1 - sqrt((xx-0.5)*(xx-0.5) + (yy-0.5)*(yy-0.5))*2, 0)"
expr3 "(rr*rr) / (pi * pow(d*d*(rr*rr-1)+1, 2))"
name ggx
xpos -314
ypos -162
addUserKnob {20 User}
addUserKnob {7 rr l roughness}
rr {{"pow(parent.tail_falloff, 10)"}}
}
Expression {
expr3 "a - a(0,0)"
name normalize_black
selected true
xpos -314
ypos -114
}
Input {
inputs 0
name Input1
xpos -104
ypos -190
}
Convolve2 {
inputs 2
channels rgba
name Convolve3
note_font "Bitstream Vera Sans"
xpos -104
ypos -114
}
Output {
name Output1
xpos -104
ypos -14
}
end_group
push $cut_paste_input
add_layer {rawFresnel rawFresnel.red rawFresnel.green rawFresnel.blue}
add_layer {specular1 specular1.red specular1.green specular1.blue}
Group {
name fresnelTool_v02
help "Create fake bg reflections in edges using a rawFresnel channel."
note_font "Bitstream Vera Sans"
selected true
xpos 463
ypos -310
addUserKnob {20 User}
addUserKnob {6 enable l INVISIBLE t "Toggle on/off to see before & after" +INVISIBLE +STARTLINE}
enable true
addUserKnob {41 in l " fresnel channel " t "Usually the \"rawFresnel\" channel." T ShuffleFresnel.in}
addUserKnob {26 label_fres l " " t "Use these channels as the fresnel input. If more than one channel is selected, the fresnel will add the corresponding channels." -STARTLINE T ""}
addUserKnob {6 fresnel_r l red t "Use this channel as a fresnel input. If more than one channel is selected, the tool will add the corresponding channels." -STARTLINE}
fresnel_r true
addUserKnob {6 fresnel_g l green t "Use this channel as a fresnel input. If more than one channel is selected, the tool will add the corresponding channels." -STARTLINE}
addUserKnob {6 fresnel_b l blue t "Use this channel as a fresnel input. If more than one channel is selected, the tool will add the corresponding channels." -STARTLINE}
addUserKnob {41 in_1 l "reflection channel" t "For RIS renders, use the \"specular1\" channel." T ShuffleRefl.in}
addUserKnob {26 refl_spacer l "" -STARTLINE T "                                         "}
addUserKnob {7 bg_blur l "fresnel width" t "Amount of blur in pixels to create fresnel edge" R 0 100}
bg_blur 50
addUserKnob {18 hilight_gain l "bg gain" t "Amount of bg that bleeds into the fresnel" R 0 10}
hilight_gain 2
addUserKnob {6 hilight_gain_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 ref_gain l "reflection gain" t "Amount of reflection aov that bleeds into the fresnel" R 0 10}
ref_gain 2
addUserKnob {6 ref_gain_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {7 edges l "mostly edges" t "Setting to 1 restricts the fresnel to non-facing edges"}
edges 0.5
addUserKnob {26 ""}
addUserKnob {18 overall l INVISIBLE +INVISIBLE R 1 10}
overall 1
addUserKnob {6 overall_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 addto l "fresnel only" t "Show the fresnel contribution only" +STARTLINE}
addUserKnob {20 Version}
addUserKnob {26 usage l Usage: T "Add fake fresnel reflections for your renders."}
addUserKnob {26 ""}
addUserKnob {32 MoreHelp l "More Help" T "start https://confluence.lucasfilm.com/x/GJh_/" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 release l "Version Release:" T 1.0}
addUserKnob {26 releaseNotes l "Release Notes:" T "Exposed reflection channel select."}
addUserKnob {26 authors l Author: T "Mark Nettleton (mnettleton)"}
addUserKnob {26 lastEdit l "Last Edit By:" T "Mark Nettleton (mnettleton)"}
addUserKnob {26 releaseDate l "Release Date:" T 11/28/16}
addUserKnob {20 endGroup n -1}
}
Input {
inputs 0
name aovmixer
xpos 412
ypos 133
}
set N1c4af040 [stack 0]
NoOp {
name is_gizmo
label connected?
xpos 550
ypos 126
addUserKnob {20 User}
addUserKnob {3 check}
check {{"\[exists parent.input0]" i}}
}
Input {
inputs 0
name bg
xpos 298
ypos 133
number 1
}
Dot {
name Dot4
label "  bg in"
xpos 326
ypos 185
}
Shuffle {
alpha white
name Shuffle
label "solid alpha"
xpos 298
ypos 229
}
push $N1c4af040
Switch {
which {{"!\[exists parent.input0]" i}}
name Switch3
selected true
xpos 520
ypos 201
}
Dot {
name Dot5
label "  rgba + aovs"
xpos 440
ypos 267
}
set N1b9c65d0 [stack 0]
Merge2 {
inputs 2
operation out
name Merge7
xpos 298
ypos 325
}
Blur {
size {{bg_blur i}}
name Blur3
xpos 298
ypos 351
addUserKnob {20 User}
addUserKnob {14 BG_blur l size R 0 100}
}
set Nca31840 [stack 0]
Grade {
white {{hilight_gain i}}
maskChannelMask -rgba.alpha
name GradeBG
label "bg gain"
xpos 298
ypos 395
}
set N1bc3d030 [stack 0]
push $N1b9c65d0
Dot {
name Dot6
label "  fresnel"
xpos 86
ypos 267
}
Shuffle {
in rawFresnel
name ShuffleFresnel
label "fresnel -> rgb"
xpos 58
ypos 309
}
Grade {
multiply {{parent.fresnel_r i} {parent.fresnel_g i} {parent.fresnel_b i} 1}
name Grade1
label "remove channels"
xpos 58
ypos 351
}
Expression {
expr3 r+g+b
name Expression1
xpos 58
ypos 393
}
Dot {
name Dot2
xpos 86
ypos 444
}
set N1c058e00 [stack 0]
Grade {
inputs 1+1
channels alpha
multiply 0
invert_mask true
name Grade5
label "Fresnel A"
xpos 180
ypos 479
}
push $N1b9c65d0
push $N1c058e00
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy2
xpos 58
ypos 510
}
Unpremult {
name Unpremult1
xpos 58
ypos 550
}
Dot {
name Dot1
xpos 86
ypos 578
}
push $Nca31840
Saturation {
saturation 0.5
name Saturation1
xpos 422
ypos 398
}
push $N1b9c65d0
Shuffle {
in specular1
out rgb
name ShuffleRefl
xpos 532
ypos 315
}
Merge2 {
inputs 2
operation multiply
name Merge4
label "refl x bg"
xpos 532
ypos 392
}
Grade {
white {{parent.ref_gain}}
name Grade4
label "ref gain"
xpos 532
ypos 487
}
push $N1c058e00
push $N1bc3d030
Grade {
inputs 1+1
white 0
invert_mask true
name BGxFR
label "bg x fresnel"
xpos 298
ypos 440
}
Merge2 {
inputs 2
operation plus
name Merge2
xpos 298
ypos 494
}
Grade {
inputs 1+1
white 0
maskChannelMask rgba.red
invert_mask true
mix {{edges i}}
name Grade2
label "Just edges"
xpos 298
ypos 572
}
set N1c5b5a80 [stack 0]
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy3
xpos 463
ypos 572
}
set N1c927450 [stack 0]
push $N1c5b5a80
Remove {
channels alpha
name Remove2
xpos 298
ypos 610
}
set N1c8d2a30 [stack 0]
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy1
xpos 298
ypos 798
}
push $N1b9c65d0
push $N1c8d2a30
push $N1b9c65d0
Merge2 {
inputs 2
operation plus
name Merge1
xpos 566
ypos 662
}
push $N1c927450
push $N1b9c65d0
Merge2 {
inputs 2
name Merge3
xpos 463
ypos 662
}
Switch {
inputs 2
name Switch2
label "Plus or Over\n(not exposed)\n"
xpos 463
ypos 722
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy4
xpos 412
ypos 800
}
Switch {
inputs 2
which {{addto i}}
name Switch1
label "fresnel only?"
xpos 357
ypos 872
}
Crop {
box {{aovmixer.bbox.x i} {aovmixer.bbox.y i} {aovmixer.bbox.r i} {aovmixer.bbox.t i}}
crop false
name Crop1
label "restore BB"
xpos 357
ypos 920
}
Output {
name Output
xpos 357
ypos 973
}
end_group
push $cut_paste_input
Group {
name ExponentialLightWrap
tile_color 0xcc804eff
selected true
xpos 256
ypos -249
addUserKnob {20 User l Lightwrap}
addUserKnob {41 falloff l Falloff T ExponentialGlow.falloff}
addUserKnob {41 intensity l Intensity T ExponentialGlow.intensity}
addUserKnob {41 blur_amount l Size T ExponentialGlow.blur_amount}
addUserKnob {41 add_source l "Add Source" T ExponentialGlow.add_source}
addUserKnob {6 CropToFormat l "Crop To Format" -STARTLINE}
CropToFormat true
addUserKnob {41 AspectRatio T ExponentialGlow.AspectRatio}
addUserKnob {7 Overscan l Pre-Overscan R 0.1 2}
Overscan 1.15
addUserKnob {6 FadeAroundFormat l "Fade Around Format" +STARTLINE}
FadeAroundFormat true
addUserKnob {7 FadeSize R 0 3}
FadeSize 0.5
addUserKnob {41 mix T Merge5588.mix}
}
Input {
inputs 0
name BG
xpos 204
ypos 490
number 1
}
Reformat {
type scale
resize none
name Format1
xpos 204
ypos 516
}
Reformat {
type scale
scale {{parent.Overscan}}
resize none
name Overscan1
xpos 204
ypos 555
}
Dot {
name Dot20
xpos 238
ypos 588
}
set N1ab954d0 [stack 0]
Dot {
name Dot3
xpos 61
ypos 588
}
Input {
inputs 0
name FG
xpos -167
ypos 466
}
Reformat {
type scale
resize none
name Format
xpos -167
ypos 501
}
Reformat {
type scale
scale {{parent.Overscan}}
resize none
name Overscan
xpos -117
ypos 558
}
Dot {
name Dot19
xpos -83
ypos 639
}
set N1abc29e0 [stack 0]
Dot {
name Dot2
xpos -83
ypos 670
}
set N1abc7910 [stack 0]
Merge2 {
inputs 2
operation out
name Merge49988
xpos 27
ypos 666
}
Group {
name ExponentialGlow
help "This gizmo is a port of Stuart Lashley's popular Exponential Glow macro from Shake. Will glow the highs on the input and create a nice falloff. Main dependency with Viewer has been removed so should be ok in stereo/mono views."
tile_color 0xcc804eff
label ForLightwrap
xpos 27
ypos 690
mapsize {0.15 0.15}
addUserKnob {20 User l "Exponential Glow"}
addUserKnob {41 falloff l Falloff T ExpoGlow.falloff}
addUserKnob {7 intensity l Intensity R 0 10}
intensity 0.35
addUserKnob {41 blur_amount l Size T ExpoGlow.blur_amount}
addUserKnob {41 add_source l "Add Source" T ExpoGlow.add_source}
addUserKnob {26 info l INVISIBLE +INVISIBLE T "Ported from Shake by brad-f"}
addUserKnob {7 AspectRatio R 0.1 2}
AspectRatio 0.5
}
Input {
inputs 0
name Input1
xpos -490
ypos -686
}
NoOp {
name ExpoGlow
xpos -490
ypos -581
addUserKnob {20 User}
addUserKnob {7 falloff l Falloff R 0 2}
falloff 1.19
addUserKnob {7 intensity l Intensity R 0 5}
intensity {{parent.intensity*10 i}}
addUserKnob {7 blur_amount l Size R 0 5}
blur_amount 0.56
addUserKnob {6 add_source l "Add Source" +STARTLINE}
add_source true
addUserKnob {6 add_bbox l "Add original bbox" +STARTLINE}
}
set N1abebc20 [stack 0]
Dot {
name Dot11
xpos -282
ypos -577
}
Keyer {
operation "luminance key"
name Keyer1
xpos -316
ypos -468
}
Premult {
name Premult1
xpos -316
ypos -413
}
Rectangle {
invert true
area {{width} {height} 0 0}
softness {{parent.parent.FadeSize*100}}
color 0
name Rectangle1
xpos -316
ypos -387
disable {{1-parent.parent.FadeAroundFormat}}
}
Remove {
operation keep
channels rgb
name Remove1
xpos -316
ypos -343
}
Grade {
white {{ExpoGlow.intensity/100 i}}
name Grade1
xpos -316
ypos -296
}
Dot {
name Dot3
xpos -146
ypos -292
}
set N1ac32550 [stack 0]
Dot {
name Dot2
xpos -36
ypos -292
}
set N1ac40a90 [stack 0]
Dot {
name Dot4
xpos 84
ypos -292
}
set N1ac458a0 [stack 0]
Dot {
name Dot5
xpos 194
ypos -292
}
set N1ac4a6f0 [stack 0]
Dot {
name Dot6
xpos 304
ypos -292
}
set N1ac4f4a0 [stack 0]
Dot {
name Dot7
xpos 414
ypos -292
}
set N1ac54390 [stack 0]
Dot {
name Dot8
xpos 524
ypos -292
}
set N1ac591e0 [stack 0]
Dot {
name Dot9
xpos 631
ypos -292
}
set N1ac5e030 [stack 0]
Dot {
name Dot10
xpos 741
ypos -292
}
Group {
name Blur8
xpos 707
ypos 235
addUserKnob {20 percentBlur l "Percent Blur"}
addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
}
Input {
inputs 0
name Input1
xpos 514
ypos -229
}
Blur {
channels rgb
size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
crop false
name Blur120
xpos 514
ypos -176
addUserKnob {20 User}
addUserKnob {7 xpercent l xPercent R 0 100}
xpercent {{Blur7.xpercent*2}}
addUserKnob {7 ypercent l yPercent R 0 100}
ypercent {{xpercent/format.pixel_aspect/height*width}}
}
Output {
name Output1
xpos 514
ypos -89
}
end_group
Multiply {
channels rgb
value {{Multiply8.value/ExpoGlow.falloff i}}
name Multiply9
xpos -289
ypos 235
}
push $N1ac5e030
Group {
name Blur7
xpos 597
ypos 193
addUserKnob {20 percentBlur l "Percent Blur"}
addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
}
Input {
inputs 0
name Input1
xpos 514
ypos -229
}
Blur {
channels rgb
size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
crop false
name Blur120
xpos 514
ypos -164
addUserKnob {20 User}
addUserKnob {7 xpercent l xPercent R 0 100}
xpercent {{Blur6.xpercent*2}}
addUserKnob {7 ypercent l yPercent R 0 100}
ypercent {{xpercent/format.pixel_aspect/height*width}}
}
Output {
name Output1
xpos 514
ypos -89
}
end_group
Multiply {
channels rgb
value {{Multiply7.value/ExpoGlow.falloff i}}
name Multiply8
xpos -289
ypos 194
}
push $N1ac591e0
Group {
name Blur6
xpos 490
ypos 155
addUserKnob {20 percentBlur l "Percent Blur"}
addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
}
Input {
inputs 0
name Input1
xpos 514
ypos -229
}
Blur {
channels rgb
size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
crop false
name Blur120
xpos 514
ypos -185
addUserKnob {20 User}
addUserKnob {7 xpercent l xPercent R 0 100}
xpercent {{Blur5.xpercent*2}}
addUserKnob {7 ypercent l yPercent R 0 100}
ypercent {{xpercent/format.pixel_aspect/height*width}}
}
Output {
name Output1
xpos 514
ypos -89
}
end_group
Multiply {
channels rgb
value {{Multiply6.value/ExpoGlow.falloff i}}
name Multiply7
xpos -290
ypos 155
}
push $N1ac54390
Group {
name Blur5
xpos 380
ypos 116
addUserKnob {20 percentBlur l "Percent Blur"}
addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
}
Input {
inputs 0
name Input1
xpos 514
ypos -229
}
Blur {
channels rgb
size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
crop false
name Blur120
xpos 514
ypos -172
addUserKnob {20 User}
addUserKnob {7 xpercent l xPercent R 0 100}
xpercent {{Blur4.xpercent*2}}
addUserKnob {7 ypercent l yPercent R 0 100}
ypercent {{xpercent/format.pixel_aspect/height*width}}
}
Output {
name Output1
xpos 514
ypos -89
}
end_group
Multiply {
channels rgb
value {{Multiply5.value/ExpoGlow.falloff i}}
name Multiply6
xpos -290
ypos 116
}
push $N1ac4f4a0
Group {
name Blur4
xpos 270
ypos 77
addUserKnob {20 percentBlur l "Percent Blur"}
addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
}
Input {
inputs 0
name Input1
xpos 514
ypos -229
}
Blur {
channels rgb
size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
crop false
name Blur120
xpos 514
ypos -179
addUserKnob {20 User}
addUserKnob {7 xpercent l xPercent R 0 100}
xpercent {{Blur3.xpercent*2}}
addUserKnob {7 ypercent l yPercent R 0 100}
ypercent {{xpercent/format.pixel_aspect/height*width}}
}
Output {
name Output1
xpos 514
ypos -89
}
end_group
Multiply {
channels rgb
value {{Multiply4.value/ExpoGlow.falloff i}}
name Multiply5
xpos -292
ypos 77
}
push $N1ac4a6f0
Group {
name Blur3
xpos 160
ypos 42
addUserKnob {20 percentBlur l "Percent Blur"}
addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
}
Input {
inputs 0
name Input1
xpos 514
ypos -229
}
Blur {
channels rgb
size {{width/3*(xpercent/100) i x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio) i}}
crop false
name Blur120
xpos 514
ypos -189
addUserKnob {20 User}
addUserKnob {7 xpercent l xPercent R 0 100}
xpercent {{Blur2.xpercent*2 i}}
addUserKnob {7 ypercent l yPercent R 0 100}
ypercent {{xpercent/format.pixel_aspect/height*width i}}
}
Output {
name Output1
xpos 514
ypos -89
}
end_group
Multiply {
channels rgb
value {{Multiply3.value/ExpoGlow.falloff i}}
name Multiply4
xpos -291
ypos 42
}
push $N1ac458a0
Group {
name Blur2
xpos 50
ypos 5
addUserKnob {20 percentBlur l "Percent Blur"}
addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
}
Input {
inputs 0
name Input1
xpos 514
ypos -229
}
Blur {
channels rgb
size {{width/3*(xpercent/100) i x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio) i}}
crop false
name Blur120
xpos 514
ypos -184
addUserKnob {20 User}
addUserKnob {7 xpercent l xPercent R 0 100}
xpercent {{Blur1.xpercent*2 i}}
addUserKnob {7 ypercent l yPercent R 0 100}
ypercent {{xpercent/format.pixel_aspect/height*width i}}
}
Output {
name Output1
xpos 514
ypos -89
}
end_group
Multiply {
channels rgb
value {{Multiply2.value/ExpoGlow.falloff i}}
name Multiply3
xpos -292
ypos 5
}
push $N1ac40a90
Group {
name Blur1
xpos -70
ypos -35
addUserKnob {20 percentBlur l "Percent Blur"}
addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
}
Input {
inputs 0
name Input1
xpos 514
ypos -229
}
Blur {
channels rgb
size {{width/3*(xpercent/100) i x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio) i}}
crop false
name Blur120
xpos 514
ypos -189
addUserKnob {20 User}
addUserKnob {7 xpercent l xPercent R 0 100}
xpercent {{Blur.xpercent*2 i}}
addUserKnob {7 ypercent l yPercent R 0 100}
ypercent {{xpercent/format.pixel_aspect/height*width i}}
}
Output {
name Output1
xpos 514
ypos -89
}
end_group
Multiply {
channels rgb
value {{Multiply1.value/ExpoGlow.falloff i}}
name Multiply2
xpos -293
ypos -36
}
push $N1abebc20
push $N1ac32550
Group {
name Blur
xpos -180
ypos -129
addUserKnob {20 percentBlur l "Percent Blur"}
addUserKnob {41 xpercent l xPercent T Blur120.xpercent}
addUserKnob {41 ypercent l yPercent T Blur120.ypercent}
}
Input {
inputs 0
name Input1
xpos 514
ypos -229
}
Blur {
channels rgb
size {{width/3*(xpercent/100) x1001 6.826666667e+10} {height/3*(ypercent/100)*(1/AspectRatio)}}
crop false
name Blur120
xpos 514
ypos -175
addUserKnob {20 User}
addUserKnob {7 xpercent l xPercent R 0 100}
xpercent {{ExpoGlow.blur_amount}}
addUserKnob {7 ypercent l yPercent R 0 100}
ypercent {{xpercent/format.pixel_aspect/height*width}}
}
Output {
name Output1
xpos 514
ypos -89
}
end_group
Multiply {
channels rgb
name Multiply1
xpos -290
ypos -129
}
Grade {
multiply 0
name Grade2
xpos -290
ypos -76
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos -430
ypos -76
disable {{!ExpoGlow.add_source i}}
}
Merge2 {
inputs 2
operation plus
name Merge2
xpos -430
ypos -36
}
Merge2 {
inputs 2
operation plus
name Merge3
xpos -430
ypos 5
}
Merge2 {
inputs 2
operation plus
name Merge4
xpos -430
ypos 42
}
Merge2 {
inputs 2
operation plus
name Merge5
xpos -430
ypos 78
}
Merge2 {
inputs 2
operation plus
name Merge6
xpos -430
ypos 116
}
Merge2 {
inputs 2
operation plus
name Merge7
xpos -430
ypos 155
}
Merge2 {
inputs 2
operation plus
name Merge8
xpos -430
ypos 194
}
Merge2 {
inputs 2
operation plus
name Merge9
xpos -430
ypos 235
}
Output {
name Output1
xpos -430
ypos 377
}
end_group
Reformat {
type scale
resize none
name Overscan3
xpos 27
ypos 728
}
push $N1abc7910
Dot {
name Dot1
xpos -83
ypos 758
}
set N1aebf580 [stack 0]
Merge2 {
inputs 2
operation in
name Merge51888
xpos 27
ypos 754
}
push $N1ab954d0
push $N1abc29e0
Dot {
name Dot21
xpos 163
ypos 639
}
set N1aed4d40 [stack 0]
Merge2 {
inputs 2
operation out
name Merge52888
xpos 204
ypos 636
}
push $N1aed4d40
Merge2 {
inputs 2
operation in
name Merge53888
xpos 204
ypos 801
}
Merge2 {
inputs 2
operation minus
name Merge54888
xpos 27
ypos 801
}
push $N1aebf580
Merge2 {
inputs 2
operation plus
Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
Bchannels {rgba.red rgba.green rgba.blue -rgba.alpha}
output {rgba.red rgba.green rgba.blue -rgba.alpha}
name Merge5588
xpos -117
ypos 801
}
Reformat {
type "to box"
box_width {{Format.width}}
box_height {{Format.height}}
box_pixel_aspect {{pixel_aspect}}
resize none
pbb {{1-parent.CropToFormat}}
name Format2
xpos -167
ypos 873
}
Output {
name Output1
xpos -167
ypos 989
}
end_group
push $cut_paste_input
NoOp {
name UPDATE_RANGE1
label "Please Press Button"
note_font_size 101
note_font_color 0xf46d00ff
selected true
xpos 813
ypos 579
addUserKnob {20 User}
addUserKnob {22 QT_UPDATE_FRAME_RANGE T "import unity\n\nshow = os.environ\['SHOW']  \nseq = os.environ\['SEQ']  \nshot = os.environ\['SHOT']\n\nushot = unity.get_show(show).get_shot(shot)\nfirst = int(ushot.first_frame)\nlast = int(ushot.last_frame)\ncutIn = int(ushot.cut_in)\ncutOut = int(ushot.cut_out)\n\nnuke.thisNode().knob('First_Frame').setValue(first)\nnuke.thisNode().knob('Last_Frame').setValue(last)\nnuke.thisNode().knob('Cut_In').setValue(cutIn)\nnuke.thisNode().knob('Cut_Out').setValue(cutOut)" +STARTLINE}
addUserKnob {3 First_Frame}
addUserKnob {3 Last_Frame}
addUserKnob {3 Cut_In}
addUserKnob {3 Cut_Out}
}
Group {
inputs 0
name depthHazer_v01
note_font "Bitstream Vera Sans"
selected true
xpos 329
ypos -935
addUserKnob {20 User}
addUserKnob {4 output l Output t "Choice of Output:\n- Result returns FG + Haze\n- HazeCard returns only the Haze Image\n- DepthMatte returns only the resulting depthMatte" M {Result "Haze Card" "Depth Matte" "" ""}}
addUserKnob {68 Combine l "            Combine" t "Choice of how the haze will be combined with your rgba." -STARTLINE M {Over Plus "" "" "" ""}}
addUserKnob {41 DepthChannel T Shuffle3.in}
addUserKnob {7 nearDistance l "Near Distance" t "Output Depth Alpha will be black at this distance" R 0 1000}
nearDistance 25
addUserKnob {7 farDistance l "Far Distance" t "Output Depth Alpha will be white at this distance" R 0 1000}
farDistance 200
addUserKnob {7 Gamma t "For adjusting the middle gray values in the resulting depth matte.\n\nGamma is applied after black/white points are set." R 0 4}
Gamma 1
addUserKnob {6 unPremultZ l "unPremult Depth" t "Un-premultiplies depth values before black/white points are set." +STARTLINE}
unPremultZ true
addUserKnob {6 limitHazetoRgba l "Obey Alpha" t "For those times when you are using a depth channel that contains more depth information than the rgba, this contains the depthHaze to the input rgba alpha." -STARTLINE}
addUserKnob {7 blurBG l "Blur BG" t "Amount to Blur the hazeBG by." R 0 1000}
blurBG 200
addUserKnob {41 HazeColor l "Constant Haze Color" t "Haze color to be added." T Constant2.color}
addUserKnob {7 constantMix l "Constant Mix" t "Dissolve between the Constant Haze color and the Blurred Haze Card\n\n1 is only the Constant Haze Color\n0 is the Bg (with blur)"}
addUserKnob {7 hazeAmount l "Haze Amount" t "Multiplier on the Haze RGBA"}
hazeAmount 1
addUserKnob {20 Version}
addUserKnob {26 ""}
addUserKnob {26 Help l "" -STARTLINE T "Help:\n\tEasily add depthHaze to renders\n \tusing depth channel. Use a\n \tconstant color., bg plate or a\n\tcombination of the two. \n\n\tCombines depthHelper gizmo to\n\tremap depth values.\n\t"}
addUserKnob {26 ""}
addUserKnob {32 MoreHelp l "More Help" T "start https://confluence.lucasfilm.com/x/MhrEAg" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 Version_1 l "" +STARTLINE T "Version Release: .1 Beta\nRelease Notes: Initial release.\nAuthor(s): Jay Cooper (jcooper)\nLast Edit By: Cameron Neilson (cneilson)\nRelease Date: 12/17/2013"}
}
Input {
inputs 0
name rgbaz_in
label "rgbaz\n"
xpos 643
ypos 187
}
Dot {
name Dot2
xpos 671
ypos 247
}
Dot {
name Dot5
xpos 671
ypos 325
}
set N1c57dfc0 [stack 0]
Dot {
name Dot7
xpos 671
ypos 568
}
set Ncb24a90 [stack 0]
Dot {
name Dot6
xpos 671
ypos 810
}
set N9c21240 [stack 0]
Dot {
name Dot10
selected true
xpos 671
ypos 1026
}
push $N1c57dfc0
Shuffle {
in depth
out depth
name Shuffle3
label "\[value in]-->\[value out]"
xpos 976
ypos 365
}
Unpremult {
channels depth
name Unpremult2
xpos 976
ypos 403
disable {{1-parent.unPremultZ}}
}
Grade {
channels depth
blackpoint {{parent.nearDistance}}
whitepoint {{parent.farDistance}}
gamma {{parent.Gamma}}
name Grade1
xpos 976
ypos 441
}
Clamp {
name Clamp1
xpos 976
ypos 479
}
Dot {
name Dot8
xpos 1004
ypos 535
}
set Nbc58880 [stack 0]
Shuffle {
in depth
name Shuffle4
label "\[value in]-->\[value out]"
xpos 976
ypos 854
}
Dot {
name Dot4
xpos 1004
ypos 892
}
Constant {
inputs 0
color {1 1 1 1}
name Constant2
xpos 1332
ypos 189
}
Shuffle {
alpha white
name Shuffle1
label "\[value in]-->\[value out]"
xpos 1332
ypos 261
}
Input {
inputs 0
name hazebg
xpos 1120
ypos 188
number 1
}
Shuffle {
alpha white
name Shuffle2
label "\[value in]-->\[value out]"
xpos 1120
ypos 287
}
Blur {
channels rgb
size {{parent.blurBG}}
name Blur3
xpos 1120
ypos 325
}
Dissolve {
inputs 2
which {{parent.constantMix}}
name Dissolve2
xpos 1332
ypos 420
}
set N1ccd5160 [stack 0]
Dot {
name Dot3
xpos 1519
ypos 424
}
Dot {
name Dot1
xpos 1519
ypos 892
}
push $N9c21240
push $N1c57dfc0
Dot {
name Dot9
xpos 820
ypos 512
}
set N1ccea170 [stack 0]
push $Nbc58880
Premult {
channels depth
name Premult3
xpos 1130
ypos 531
disable {{1-parent.unPremultZ}}
}
push $N1ccd5160
Copy {
inputs 2
from0 depth.Z
to0 rgba.alpha
name Copy2
xpos 1130
ypos 578
}
Premult {
name Premult2
xpos 1130
ypos 616
}
Multiply {
value {{parent.hazeAmount}}
name Multiply2
xpos 1130
ypos 642
}
Merge2 {
inputs 2
operation mask
name In1
xpos 1130
ypos 697
disable {{parent.limitHazetoRgba==0 x1039 1}}
}
push $Ncb24a90
Merge2 {
inputs 2
operation plus
Achannels rgb
name Plus2
xpos 1130
ypos 773
}
push $N1ccea170
push $Nbc58880
push $N1ccd5160
Copy {
inputs 2
from0 depth.Z
to0 rgba.alpha
name Copy3
xpos 1332
ypos 577
}
Premult {
name Premult4
xpos 1332
ypos 615
}
Multiply {
value {{parent.hazeAmount}}
name Multiply1
xpos 1332
ypos 641
}
Merge2 {
inputs 2
operation mask
name In
xpos 1332
ypos 711
disable {{parent.limitHazetoRgba==0}}
}
push $Ncb24a90
Merge2 {
inputs 2
operation atop
name Plus4
xpos 1332
ypos 773
}
Switch {
inputs 2
which {{parent.Combine}}
name Switch3
xpos 1231
ypos 773
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy1
xpos 1231
ypos 806
}
Switch {
inputs 3
which {{parent.output}}
name Switch1
xpos 1231
ypos 902
}
CopyBBox {
inputs 2
name CopyBBox1
xpos 1231
ypos 1022
}
Output {
name Output1
xpos 1231
ypos 1084
}
end_group
push $cut_paste_input
Group {
name depthHelper_v01
help "Places a scalled version of the depth (blue channel) into the alpha channel.\n\nExpects a depth channel  \nImage needs to be RGBAZ "
tile_color 0x5086b7ff
note_font "Bitstream Vera Sans"
selected true
xpos 330
ypos -1003
mapsize {0.15 0.15}
addUserKnob {20 User}
addUserKnob {7 nearDistance l "Near Distance" t "Output Alpha will be black at this distance" R 0 1000}
nearDistance 36
addUserKnob {7 farDistance l "Far Distance" t "Output Alpha will be white at this distance." R 0 1000}
farDistance 105
addUserKnob {7 gammaDepth l Gamma t "For adjusting the middle gray values in the resulting matte.\n\nGamma is applied after black/white points are set." R 0 30}
gammaDepth 1
addUserKnob {6 unPremult l "unPremultiply Depth" t "Un-premultiplies depth values before black/white points are set." +STARTLINE}
addUserKnob {20 Version}
addUserKnob {26 Help l Help: T "Creates an Alpha channel by setting the black and white points\non the input Depth.z. Unmodified depth value will be swapped into\nRGB.\n\nInput expects a RGBAZ image."}
addUserKnob {26 ""}
addUserKnob {32 MoreHelp l "More Help" T "start https://confluence.lucasfilm.com/x/48uh" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 VersionRelease l "Version Release:" T 1.0}
addUserKnob {26 ReleaseNotes l "Release Notes:" T "Made the AOV Version the default version, and graduated from beta."}
addUserKnob {26 "" l Author(s): T "Tim Alexander (tima)"}
addUserKnob {26 LastEditedBy l "Last Edit By:" T "Jason Porter (jasonp)"}
addUserKnob {26 ReleaseDate l "Release Date:" T 08/15/11}
}
Input {
inputs 0
name Image
xpos 386
ypos -166
}
set N1bfd2890 [stack 0]
push $N1bfd2890
Shuffle {
in depth
name Shuffle1
xpos 532
ypos -100
}
ShuffleCopy {
inputs 2
name ShuffleCopy3
xpos 386
ypos -100
}
set N1bba0a80 [stack 0]
Dot {
name Dot1
xpos 337
ypos -73
}
Dot {
name Dot2
xpos 337
ypos 57
}
push $N1bba0a80
Unpremult {
name Unpremult4
xpos 386
ypos -49
disable {{!unPremult x10 0}}
}
Grade {
blackpoint {{nearDistance i}}
whitepoint {{farDistance i}}
gamma {{gammaDepth i}}
name Grade4
xpos 386
ypos -20
}
Clamp {
name Clamp1
xpos 386
ypos 9
}
ShuffleCopy {
inputs 2
red red
green green
blue blue
alpha blue2
name ShuffleCopy1
xpos 386
ypos 80
}
Remove {
operation keep
channels rgba
channels2 depth
name Remove1
xpos 386
ypos 108
}
Output {
name Output1
xpos 386
ypos 151
}
end_group
push $cut_paste_input
Group {
name distanceBetween_v01
note_font "Bitstream Vera Sans"
selected true
xpos 327
ypos -1071
addUserKnob {20 User l Distance}
addUserKnob {41 distance T NoOp1.distance}
addUserKnob {20 ver l Version}
addUserKnob {26 Help l Help: T "This node calculates the distance between any\ntwo 3d points coming from an axis and a camera\nor two axis nodes."}
addUserKnob {26 ""}
addUserKnob {32 helplink l "More Help" T "start https://confluence.lucasfilm.com/x/58uh" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 release l "Version Release:" T 1.0}
addUserKnob {26 Relnotes l "Release Notes:" T "first time gizmo'd"}
addUserKnob {26 authors l Authors: T "Cristin Pescosolido (cpescosolido)"}
addUserKnob {26 edit l "Last Edit By:" T "Cristin Pescosolido (cpescosolido)"}
addUserKnob {26 reldate l "Release Date:" T 02/02/16}
}
NoOp {
inputs 0
name NoOp1
selected true
xpos 418
ypos -171
addUserKnob {20 User}
addUserKnob {7 distance}
distance {{sqrt(pow(Axis1.world_matrix.3-Axis2.world_matrix.3,2)+pow(Axis1.world_matrix.7-Axis2.world_matrix.7,2)+pow(Axis1.world_matrix.11-Axis2.world_matrix.11,2))}}
}
Output {
name Output1
xpos 418
ypos -95
}
Input {
inputs 0
name Input2
xpos 471
ypos -324
number 1
}
Axis2 {
name Axis2
xpos 481
ypos -273
}
Input {
inputs 0
name Input1
xpos 368
ypos -326
}
Axis2 {
name Axis1
xpos 378
ypos -277
}
end_group
push $cut_paste_input
add_layer {Pworld Pworld.x Pworld.y Pworld.z Pworld.red Pworld.green Pworld.blue Pworld.alpha Pworld._w}
Group {
name PositionFinder2
label "\[value value]"
selected true
xpos 1305
ypos -919
addUserKnob {20 User}
addUserKnob {41 in l "in 1" T Shuffle1.in}
addUserKnob {41 value l position T Multiply1.value}
addUserKnob {22 axis l "Create Axis" T "myg = nuke.thisNode() \nnodePositionX= myg.xpos()\nnodePositionY= myg.ypos()\n\n\nmyg.begin() \n\npositionValue=myg.knob('value').getValue()\ndel positionValue\[-1:]\n#positionValueFloat=float('positionValue')\n\nprint positionValue\n#print positionValueFloat\n\nmyg.end() \n\n\nnodePositionX= myg.xpos()\nnodePositionY= myg.ypos()\n\n\nmaxis= nuke.nodes.Axis2()\nmaxis.knob('translate').setValue(positionValue)\nmaxis.setXpos(nodePositionX+70)\nmaxis.setYpos(nodePositionY+70)" +STARTLINE}
addUserKnob {22 card l "Create Card" -STARTLINE T "myg = nuke.thisNode() \nnodePositionX= myg.xpos()\nnodePositionY= myg.ypos()\n\nmyg.begin() \n\npositionValue=myg.knob('value').getValue()\ndel positionValue\[-1:]\n#positionValueFloat=float('positionValue')\n\nprint positionValue\n#print positionValueFloat\n\nmyg.end() \n\n\nnodePositionX= myg.xpos()\nnodePositionY= myg.ypos()\n\n\nmcard= nuke.createNode(\"Card2\")\nmcard.knob('translate').setValue(positionValue)\nmcard.knob('uniform_scale').setValue(100)\nmcard.setXpos(nodePositionX+70)\nmcard.setYpos(nodePositionY+70)\n"}
addUserKnob {6 Position_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
Input {
inputs 0
name Input1
xpos -462
ypos -578
}
Shuffle {
in Pworld
name Shuffle1
label "\[value in]"
xpos -462
ypos -537
}
Multiply {
channels rgb
value {0 0 0 0}
name Multiply1
label "\[value value]"
xpos -462
ypos -496
disable true
}
Output {
name Output1
xpos -462
ypos -438
}
end_group
push $cut_paste_input
Group {
name ZDefocusLens_v03
help "\n A wrapper around ZDefocus that\n attempts to calculate the defocus\n value for all points in a depth\n pass with a given lens geometry.\n \n Assumes a valid depth value for all pixels.\n Pixels without a depth value (Z=0) will be set\n to 'max Z'\n \n \n math:\n \n N = F-stop\n f = focal length\n flm = focal length multiplier\n hap = filmback width\n u = focal distance\n d = depth\n \n m = f / fabs(u - f)\n coc = (f * m / N) * fabs(d - u) / d\n defocus = coc/hap*flm*width/2\n "
knobChanged "\nn = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == 'output':\n        n.knobs()\['show_image'].setEnabled(k.value() == 'focal plane setup')\n        \nif k.name() == 'useCam':\n    if k.value() == True:\n        n.knobs()\['focalLength'].setExpression('\[topnode input1].focal')\n        n.knobs()\['focalLength'].setEnabled(False)\n        n.knobs()\['hap'].setExpression('\[topnode input1].haperture')\n        n.knobs()\['hap'].setEnabled(False)\n    else:\n        n.knobs()\['focalLength'].clearAnimated()\n        n.knobs()\['focalLength'].setEnabled(True)\n        n.knobs()\['hap'].clearAnimated()\n        n.knobs()\['hap'].setEnabled(True)\n        \nif k.name() == 'autoLayerSpacing':\n        n.knobs()\['layers'].setEnabled(not k.value())\n        n.knobs()\['layerCurve'].setEnabled(not k.value())\n        \nif k.name() == 'filter_type':\n    if k.value() == 'disc':\n        n.knobs()\['shape'].setVisible(True)\n        n.knobs()\['aspect'].setVisible(True)\n        n.knobs()\['filter_channel'].setVisible(False)\n        n.knobs()\['use_input_channels'].setVisible(False)\n        n.knobs()\['filter_bounds'].setVisible(False)\n        n.knobs()\['blades'].setVisible(False)\n        n.knobs()\['roundness'].setVisible(False)\n        n.knobs()\['rotation'].setVisible(False)\n        n.knobs()\['inner_size'].setVisible(False)\n        n.knobs()\['inner_feather'].setVisible(False)\n        n.knobs()\['inner_brightness'].setVisible(False)\n        n.knobs()\['catadioptric_size'].setVisible(False)\n        n.knobs()\['catadioptric'].setVisible(False)\n    elif k.value() == 'bladed':\n        n.knobs()\['aspect'].setVisible(True)\n        n.knobs()\['shape'].setVisible(False)\n        n.knobs()\['filter_channel'].setVisible(False)\n        n.knobs()\['use_input_channels'].setVisible(False)\n        n.knobs()\['filter_bounds'].setVisible(False)\n        n.knobs()\['blades'].setVisible(True)\n        n.knobs()\['roundness'].setVisible(True)\n        n.knobs()\['rotation'].setVisible(True)\n        n.knobs()\['inner_size'].setVisible(True)\n        n.knobs()\['inner_feather'].setVisible(True)\n        n.knobs()\['inner_brightness'].setVisible(True)\n        n.knobs()\['catadioptric_size'].setVisible(True)\n        n.knobs()\['catadioptric'].setVisible(True)\n    elif k.value() == 'image':\n        n.knobs()\['aspect'].setVisible(False)\n        n.knobs()\['shape'].setVisible(False)\n        n.knobs()\['filter_channel'].setVisible(True)\n        n.knobs()\['use_input_channels'].setVisible(True)\n        n.knobs()\['filter_bounds'].setVisible(True)\n        n.knobs()\['blades'].setVisible(False)\n        n.knobs()\['roundness'].setVisible(False)\n        n.knobs()\['rotation'].setVisible(False)\n        n.knobs()\['inner_size'].setVisible(False)\n        n.knobs()\['inner_feather'].setVisible(False)\n        n.knobs()\['inner_brightness'].setVisible(False)\n        n.knobs()\['catadioptric_size'].setVisible(False)\n        n.knobs()\['catadioptric'].setVisible(False)\n        \nif k.name() == 'bloom':\n        n.knobs()\['bloom_threshold'].setEnabled(k.value())\n        n.knobs()\['bloom_gain'].setEnabled(k.value())\n\nif k.name() == 'cleanOutput':\n        n.knobs()\['minClamp'].setEnabled(k.value())\n"
tile_color 0x726400ff
note_font "Bitstream Vera Sans"
selected true
xpos 595
ypos -992
addUserKnob {20 User l ZDefocusLens}
addUserKnob {41 channels t "The effect is applied only to\nthese channels." T ZDefocus1.channels}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T ZDefocus1.useGPUIfAvailable}
addUserKnob {26 ""}
addUserKnob {41 in l "depth channel" t "Where to obtain the input\ndepth map.\n\nThis defaults to \"<b>depth.Z</b>\"\nfor legacy compatibility, but\nusing the un-antialiased '<b>z</b>'\npass may give better results\nand produce less artifacts.\n\n<b>If using 'z', dont forget to turn off\nunpremultiply!</b>" T Shuffle2.in}
addUserKnob {6 umultZ l unpremult t "Unpremult the depth channel.\n\nShould usually be on for 'depth.Z'\nand off for 'z'\n\nOnly for calculation - has no effect\non depth output." -STARTLINE}
umultZ true
addUserKnob {4 output t "<br><b>result</b> - show the result of the zblur<br><br><b>focal-plane setup</b> - output depth-of-field (DOF) info<br>to the rgb channels, where:<br>\t<b>red :</b> nearer to the camera than the focus plane,<br>\t<b>green:</b> in-focus area, within +/-<b>dof</b>/2 of the focus plane, and<br>\t<b>blue :</b> further from the camera than the focus plane.<br>\t<b>crosshatch :</b> areas that will have their blur values clamped by 'max blur'.<br><br><b>layer setup</b> - as focal plane setup, but showing the DOF info after the depth has been divided into layers. Pixels assigned to the same layer will have the same amount of blur applied to them.<br><br><b>filter shape setup</b> - display the filter shape in rgb.<br><br><b>Will always revert to 'result' in non-interactive mode (on the farm).</b>" M {result "focal plane setup" "layer setup" "filter shape setup"}}
addUserKnob {41 show_image l "show image" -STARTLINE +DISABLED T ZDefocus1.show_image}
addUserKnob {7 dof l "depth of field" t "Make a range of this depth entirely in focus. True theoretical depth-of-field would set this to 0." R 0 100}
addUserKnob {41 blur_dof l "blur inside" -STARTLINE T ZDefocus1.blur_dof}
addUserKnob {7 maxBlur l "max blur" t "Maximum allowed blur. Has no effect on blur values at distances within the near/far max blur zone.\n\nThis value along with 'scaling' determines the defocus kernal size. To optimize, use the lowest value possible without clipping your subject out of the near/far max blur distances." R 0 100}
maxBlur 40
addUserKnob {7 maxZ l "max Z" t "Areas with no Zdepth value (Z=0) are set to this.\n\nUseful if your bg has no depth pass." R 0 10000}
maxZ 1000
addUserKnob {7 scale l scaling t "Overall multiplier on to blur values." R 0 10}
scale 1
addUserKnob {26 ""}
addUserKnob {6 useCam l "use camera input" t "Use camera input for focal length and horiz aperture." +STARTLINE}
addUserKnob {7 fStop l F-stop t "F-stop value" R 0 32}
fStop 5.6
addUserKnob {7 focalLength l "focal length (mm)" t "Lens focal length.\n\n<b>Ignored if using the cam input.</b>" R 0 500}
focalLength 50
addUserKnob {7 flm l mult t "Focal length multiplier\n\nUseful when using non 35mm \"cropped\" filmbacks with 35mm lenses.\n\nThe horizontal aperture is multiplied by this value" -STARTLINE R 0 2}
flm 1
addUserKnob {7 hap l "horiz aperture (mm)" t "Horizontal aperture.\n\n<b>Ignored if using the cam input.</b>\n\nNOTE: if using values directly from the \"Film Ap Width\" field in Zeno, don't forget to convert from inches.\n\nmm. = in. * 25.4" R 0 100}
hap 24.576
addUserKnob {41 center l "focus plane (C)" T ZDefocusHelper.center}
addUserKnob {41 focal_point l "focal point" T ZDefocusHelper.focal_point}
addUserKnob {26 ""}
addUserKnob {6 autoLayerSpacing l "automatic layer spacing" t "In automatic mode the plug-in will decide the number of depth layers to use and where to put them.\nTurn this off to control the depth layers manually." -STARTLINE}
autoLayerSpacing true
addUserKnob {41 layers l "depth layers" +DISABLED T ZDefocus1.layers}
addUserKnob {41 layerCurve l "layer curve" +DISABLED T ZDefocus1.layerCurve}
addUserKnob {26 ""}
addUserKnob {4 filter_type l "filter type" M {disc bladed image}}
addUserKnob {41 shape l "filter shape" T ZDefocus1.shape}
addUserKnob {41 aspect l "aspect ratio" T ZDefocus1.aspect}
addUserKnob {41 blades +HIDDEN T ZDefocus1.blades}
addUserKnob {41 roundness +HIDDEN T ZDefocus1.roundness}
addUserKnob {41 rotation +HIDDEN T ZDefocus1.rotation}
addUserKnob {41 inner_size l "inner size" +HIDDEN T ZDefocus1.inner_size}
addUserKnob {41 inner_feather l "inner feather" +HIDDEN T ZDefocus1.inner_feather}
addUserKnob {41 inner_brightness l "inner brightness" +HIDDEN T ZDefocus1.inner_brightness}
addUserKnob {41 catadioptric_size l "catadioptric size" +HIDDEN T ZDefocus1.catadioptric_size}
addUserKnob {41 catadioptric -STARTLINE +HIDDEN T ZDefocus1.catadioptric}
addUserKnob {41 filter_channel l "filter channel" +HIDDEN T ZDefocus1.filter_channel}
addUserKnob {41 use_input_channels l "use input channels" -STARTLINE +HIDDEN T ZDefocus1.use_input_channels}
addUserKnob {41 filter_bounds l "filter bounds" +HIDDEN T ZDefocus1.filter_bounds}
addUserKnob {26 ""}
addUserKnob {41 bloom_gamma l "gamma correction" T ZDefocus1.bloom_gamma}
addUserKnob {6 bloom t "Enable blooming gain. Boost the highlights above the bloom threshold to make lens shape effects more visible." -STARTLINE}
addUserKnob {41 bloom_threshold l "bloom threshold" +DISABLED T ZDefocus1.bloom_threshold}
addUserKnob {41 bloom_gain l "bloom gain" +DISABLED T ZDefocus1.bloom_gain}
addUserKnob {26 ""}
addUserKnob {6 cleanOutput l "clean output" t "Zdefocus can produce small noise in the black areas of the image.<br><br>This clamps the RGBA 'min clamp' value to 0." +STARTLINE}
cleanOutput true
addUserKnob {19 minClamp l "min clamp" t "Clamp this RGBA value to 0 when 'clean output. is on."}
addUserKnob {6 minClamp_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {41 mix T ZDefocus1.mix}
addUserKnob {20 Version}
addUserKnob {26 "" l Help: T "A wrapper around ZDefocus that attempts to calculate\nthe defocus value for all points in a depth pass\nwith a given lens geometry."}
addUserKnob {26 ""}
addUserKnob {32 MoreHelp l "More Help" T "start https://confluence.lucasfilm.com/x/HYNT" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 VersionRelease l "Version Release:" T v3.0}
addUserKnob {26 ReleaseNotes l "Release Notes:" T "Added depth channel picker to\nallow alternate depth passes."}
addUserKnob {26 "" l Authors: T "Jason Porter (jasonp)"}
addUserKnob {26 "" l "Last Edit By:" T "Jason Porter (jasonp)"}
addUserKnob {26 ReleaseDate l "Release Date:" T 04/13/15}
}
Input {
inputs 0
name img
xpos -210
ypos -614
}
add_layer {BlurControl BlurControl.Z}
add_layer {blurCalc blurCalc.Z}
AddChannels {
channels BlurControl
channels2 blurCalc
name AddChannels2
xpos -210
ypos -506
}
Shuffle {
in depth
out blurCalc
name Shuffle2
label "\[value in]-->\[value out]"
xpos -210
ypos -466
}
Unpremult {
channels blurCalc
name Unpremult1
xpos -210
ypos -426
disable {{1-parent.umultZ}}
}
Expression {
temp_name0 d
temp_expr0 "(blurCalc.Z > 0 ? blurCalc.Z : parent.maxZ) * 304.8"
temp_name1 coc
temp_expr1 "(plumbing.f * plumbing.m  / plumbing.N) * (d - plumbing.u) / d"
temp_name2 cocPx
temp_expr2 coc/parent.hap*parent.flm*root.width/2
temp_name3 result
temp_expr3 "cocPx * parent.scale / maxBlur"
channel0 BlurControl
expr0 result
channel1 none
channel2 none
channel3 none
name Expression2
label "calculate all"
xpos -210
ypos -380
}
Remove {
channels blurCalc
name Remove1
xpos -210
ypos -340
}
Clamp {
channels BlurControl
minimum -1
name Clamp1
xpos -210
ypos -205
}
set N1ebf19d0 [stack 0]
Expression {
temp_name0 clip
temp_expr0 "fabs(BlurControl.Z) < 1? 0 : 1"
temp_name1 far
temp_expr1 "BlurControl.Z > 0 ? BlurControl.Z : 0"
temp_name2 near
temp_expr2 "BlurControl.Z < 0 ? fabs(BlurControl.Z) : 0"
temp_name3 both
temp_expr3 fabs(BlurControl.Z)
expr0 clip
expr1 near
expr2 far
channel3 none
name Expression1
xpos 179
ypos -191
}
ClipTest {
channels {rgba.red -rgba.green -rgba.blue none}
upper 0.999999
name ClipTest1
xpos 179
ypos -77
}
Multiply {
channels {rgba.red -rgba.green -rgba.blue none}
value 7
name Multiply1
xpos 179
ypos -33
}
Invert {
name Invert1
xpos 179
ypos 11
}
Shuffle {
green red
blue red
alpha red
name Shuffle1
xpos 179
ypos 55
}
Input {
inputs 0
name filter
xpos 72
ypos -322
number 2
}
push $N1ebf19d0
ZDefocus2 {
inputs 2
channels rgba
z_channel BlurControl.Z
math direct
output {{"\$gui ? parent.output : 0"}}
focal_point {{parent.ZDefocusHelper.focal_point.x} {parent.ZDefocusHelper.focal_point.y}}
dof {{parent.dof/parent.maxBlur}}
size {{parent.maxBlur}}
max_size {{parent.maxBlur}}
autoLayerSpacing {{parent.autoLayerSpacing}}
filter_type {{parent.filter_type}}
bloom {{parent.bloom}}
name ZDefocus1
selected true
xpos -210
ypos 89
}
set N1c3cf740 [stack 0]
Merge2 {
inputs 2
operation multiply
name Merge1
xpos -82
ypos 146
}
push $N1c3cf740
Switch {
inputs 2
which {{"ZDefocus1.output != 0 && ZDefocus1.output != 3"}}
name Switch1
xpos -210
ypos 189
}
Remove {
channels BlurControl
name Remove2
xpos -210
ypos 243
}
Clamp {
channels rgba
minimum {{parent.minClamp.r} {parent.minClamp.g} {parent.minClamp.b} {parent.minClamp.a}}
maximum_enable false
MinClampTo_enable true
name Clamp2
xpos -210
ypos 283
disable {{!cleanOutput}}
}
Output {
name Output1
xpos -210
ypos 354
}
Input {
inputs 0
name cam
xpos 189
ypos -321
number 1
}
NoOp {
inputs 0
name plumbing
xpos -537
ypos -206
addUserKnob {20 User}
addUserKnob {7 N}
N {{parent.fStop}}
addUserKnob {7 f}
f {{parent.focalLength}}
addUserKnob {7 u}
u {{"parent.center * 304.8"}}
addUserKnob {7 m}
m {{"f  /  fabs(u - f)"}}
addUserKnob {7 maxBlurCoc}
maxBlurCoc {{"2 * hap * (maxBlur) / (flm * root.width)"}}
}
push $N1ebf19d0
ZDefocus2 {
math depth
center 10
size {{parent.maxBlur}}
max_size {{parent.maxBlur}}
name ZDefocusHelper
label "for focal point pick only"
xpos -556
ypos -73
}
end_group
push $cut_paste_input
Group {
name height_fog1
selected true
xpos 597
ypos -903
addUserKnob {20 heightFog l "height fog"}
addUserKnob {4 output M {result "fog only" ""}}
addUserKnob {41 color l "fog color" t "Diffuse color of fog" T fog_color1.color}
addUserKnob {6 ignore_deep l "ignore deep input (use PWorld)" t "this will bypass the deep input and use the geom passes from the render." +STARTLINE}
ignore_deep true
addUserKnob {20 bg_mix l "BG sky " n 1}
addUserKnob {41 which l "fog color/BG sky mix" t "zero value returns fog color, value of one returns blurred BG sky." T fog_BG_mix.which}
addUserKnob {41 size l "BG sky blur" T Blur1.size}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {20 fog1_1 l fog1 n 1}
addUserKnob {7 fog1_starting_height l "starting height" t "World Y position at which fog starts. This is the point where it would be most dense." R -10 500}
addUserKnob {7 fog1_exp l "height exponent" t "Exponential height control. Lower values yield tighter falloff." R 1 4}
fog1_exp 8
addUserKnob {7 fog1_height_falloff l "height falloff" t "gamma adjustment to falloff from full fog density " R 0.1 4}
fog1_height_falloff 1
addUserKnob {7 fog1_distance_from_camera l "starting distance" t "Distance from camera at which fog starts." R 1 500}
fog1_distance_from_camera 1
addUserKnob {7 fog1_density l density t "controls fog density from camera" R 1 4}
fog1_density 4
addUserKnob {7 fog1_density_falloff l "density falloff" t "controls the falloff of the density from camera" R 0.2 5}
fog1_density_falloff 2
addUserKnob {7 fog1_opacity l opacity}
fog1_opacity 0.13
addUserKnob {20 endGroup_7 l endGroup n -1}
addUserKnob {26 ""}
addUserKnob {20 fog2_1 l fog2 n 1}
addUserKnob {6 use_fog2 l "use fog2" t "tick box to enable a secondary fog layer" +STARTLINE}
use_fog2 true
addUserKnob {6 solo_fog2 l "solo fog2" t "tick to turn off fog1" -STARTLINE}
addUserKnob {7 fog2_starting_height l "starting height" t "World Y position at which fog starts. This is the point where it would be most dense." R -10 500}
addUserKnob {7 fog2_exp l "height exponent" t "Exponential height control. Lower values yield tighter falloff." R 1 4}
fog2_exp 3.11
addUserKnob {7 fog2_falloff l "height falloff" t "controls the falloff from the point of full density," R 0.1 4}
fog2_falloff 0.78
addUserKnob {7 fog2_distance_from_camera l "starting distance" t "Distance from camera at which fog starts." R 1 500}
fog2_distance_from_camera 1
addUserKnob {7 fog2_density l density t "adjusts the density of the fog, as measured from camera. Higher values decrease density," R 1 4}
fog2_density 3
addUserKnob {7 fog2_density_falloff l "density falloff" t "controls the falloff of fog density from camera\t\t\t" R 0.2 5}
fog2_density_falloff 1
addUserKnob {7 fog2_opacity l opacity}
fog2_opacity 0.08
addUserKnob {20 endGroup_4 l endGroup n -1}
addUserKnob {26 ""}
addUserKnob {20 BG_fog l "BG fog" n 1}
addUserKnob {6 use_BG_fog l "use BG fog" t "tick box to use far BG fog" +STARTLINE}
use_BG_fog true
addUserKnob {6 solo_BG_fog l "solo BG fog" t "tick to display BG fog only" -STARTLINE}
addUserKnob {7 BGfog_starting_height l "starting height" t "World Y position at which fog starts. This is the point where it would be most dense." R -10 500}
BGfog_starting_height -10
addUserKnob {7 BGfog_exp l "height exponent" t "Exponential height control. Lower values yield tighter fog." R 1 5}
BGfog_exp 3.4
addUserKnob {7 BGfog_falloff l "height falloff" t "adjusts falloff of fog from point of full density" R 0.2 5}
BGfog_falloff 1
addUserKnob {7 BGfog_opacity l opacity}
BGfog_opacity 0.2
addUserKnob {20 endGroup_5 l endGroup n -1}
addUserKnob {26 ""}
addUserKnob {20 lighting_effects l "lighting effects" n 1}
addUserKnob {6 use_scatter l "use scatter" t "tick to apply a blur to the render through the fog matte to simulate atmospheric scattering. note: this will be bypassed if node output is set to \"fog only\" rather than \"result\"" +STARTLINE}
use_scatter true
addUserKnob {7 scatter_size l amount t "Pixel size of scattering amount through the fog layer" R 0 100}
scatter_size 50
addUserKnob {7 scatter_mix l "scatter mix" t "fade out scatter effect"}
scatter_mix 0.5
addUserKnob {6 use_diffuse l "use diffuse" t "tick box to apply diffuse lighting effect from render into fog. can help to add sense of shadowing." +STARTLINE}
use_diffuse true
addUserKnob {7 diffuse_softness l "diffuse softness" t "Blurs the incoming render to soften the diffuse lighting effect on the fog." R 0 100}
diffuse_softness 50
addUserKnob {7 diffuse_clip l "diffuse clip" t "clips the diffuse effect at a distance from camera. use this to allow distant objects to blend into the BG." R 1 4500}
diffuse_clip 4500
addUserKnob {7 diffuse_mix l "diffuse mix" t "use to mix in the amount of the diffuse lighting effect on the fog layer,"}
diffuse_mix 0.25
addUserKnob {20 endGroup_6 l endGroup n -1}
addUserKnob {26 near_fog l "" +STARTLINE}
addUserKnob {20 near_fog_1 l "near fog color" n 1}
addUserKnob {6 use_nearFog_color l "use near fog color" t "tick to enable. near fog color will tint fog closer to camera a user defined color." +STARTLINE}
use_nearFog_color true
addUserKnob {41 color_1 l color T nearFog_color.color}
addUserKnob {7 near_fog_distance l "near fog distance" t "sets the distance from camera of the near fog color" R 0 100}
near_fog_distance 20
addUserKnob {41 mix_1 l mix T near_fog_mix.mix}
addUserKnob {20 endGroup_3 l endGroup n -1}
addUserKnob {26 ""}
addUserKnob {20 noise_breakup l "noise breakup" n 1}
addUserKnob {6 use_noise l "use noise" +STARTLINE}
use_noise true
addUserKnob {6 show_noise l "show noise" t "tick to visualize the noise pattern" -STARTLINE}
addUserKnob {7 noise_scale l "noise scale" R 1 300}
noise_scale 1000
addUserKnob {13 noise_translate l translate t "use to move noise around in space. Can also be animated for moving fog breakup."}
addUserKnob {41 size_1 l "blur noise" T noise_blur.size}
addUserKnob {7 noise_mix l mix t "zero applied no noise breakup, one applies full noise breakup to fog."}
noise_mix 0.25
addUserKnob {20 endGroup_2 l endGroup n -1}
addUserKnob {26 ""}
addUserKnob {20 plumbing n 1}
plumbing 0
addUserKnob {6 fog_alpha l "output fog alpha" t "tick to output alpha of fog as a separate fog.alpha channel" +STARTLINE}
addUserKnob {6 BG_fog_depth l "use BG fog depth" t "tick to assign a user-defined depth value for the BG fog. Useful if depth-of-field effects are being applied." +STARTLINE}
addUserKnob {7 BG_fog_depth_value l value t "user defined value to assign to BG Fog layer. Make this a high number." -STARTLINE R 5000 10000}
BG_fog_depth_value 5000
addUserKnob {7 fog_clip l "clipping distance" t "far clipping plane for fog effect" R 1000 9999}
fog_clip 99999
addUserKnob {41 color_2 l "show noise color" T noise_test_color.color}
addUserKnob {20 endGroup_1 l endGroup n -1}
}
Input {
inputs 0
name camera
xpos 840
ypos -1017
number 2
}
Dot {
name Dot21
xpos 874
ypos -942
}
set N1c399dd0 [stack 0]
Dot {
name Dot22
xpos 2084
ypos -942
}
set N1fe425c0 [stack 0]
Axis2 {
name axis_for_expressions1
xpos 2060
ypos -1062
}
Switch {
inputs 0
which {{parent.use_BG_fog}}
name use_BG_fog1
xpos 840
ypos 1815
}
Input {
inputs 0
name render
xpos -40
ypos -1017
}
Dot {
name Dot27
xpos -6
ypos -726
}
Dot {
name Dot6
xpos -6
ypos -462
}
set N1fe532c0 [stack 0]
Axis2 {
inputs 0
name Axis2
xpos 1070
ypos -918
}
set N1fe18aa0 [stack 0]
push $N1c399dd0
Dot {
name Dot55
xpos 874
ypos -894
}
set N1c6c8800 [stack 0]
Input {
inputs 0
name deep
xpos 510
ypos -1017
number 1
}
Dot {
name Dot57
xpos 544
ypos -942
}
set N1fe433c0 [stack 0]
Deep_P_matte_v05 {
inputs 3
unpremult true
name Deep_P_matte_v05_2
xpos 510
ypos -897
}
push $N1fe433c0
Dot {
name Dot59
xpos 434
ypos -942
}
DeepToImageILM_v02 {
name DeepToImageILM_v02_3
label "depth=\[value depthoutput]"
note_font "Bitstream Vera Sans"
xpos 400
ypos -903
normalized true
prev_releases 0
}
Dot {
name Dot67
xpos 434
ypos -798
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels Pworld
name Copy2
xpos 510
ypos -810
}
AddChannels {
channels depth
channels2 Pworld
name AddChannels1
xpos 510
ypos -733
}
Dot {
name Dot7
xpos 544
ypos -534
}
Switch {
inputs 2
which {{parent.ignore_deep}}
name ignore_deep
xpos 510
ypos -465
}
set N2001aad0 [stack 0]
Dot {
name Dot68
xpos 544
ypos -366
}
set N20022e70 [stack 0]
push $N1fe532c0
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels Pworld
name Copy1
xpos -40
ypos -378
}
Dot {
name Dot32
xpos -6
ypos 954
}
set N200360c0 [stack 0]
Dot {
name Dot34
xpos 104
ypos 954
}
set N2003ad40 [stack 0]
Dot {
name Dot44
xpos 214
ypos 954
}
set N1f15f8d0 [stack 0]
Dot {
name Dot36
xpos 434
ypos 954
}
set N1f164720 [stack 0]
Dot {
name Dot41
xpos 654
ypos 954
}
Dot {
name Dot42
xpos 654
ypos 2250
}
set N1f16e3c0 [stack 0]
push $N2001aad0
P_Noise3D_v02 {
name P_Noise3D_v02_1
xpos 730
ypos -469
in Pworld
output alpha
overallscale {{parent.noise_scale}}
lacunarity 4
gain 0.8
}
Grade {
channels alpha
gamma 0.5
white_clamp true
name Grade1
xpos 730
ypos -421
}
push $N1fe18aa0
push $N1c6c8800
push $N1fe433c0
Dot {
name Dot58
xpos 984
ypos -918
}
DeepPNoise3D_v04 {
inputs 3
octaves 2
lacunarity 4
uniform_scale {{parent.noise_scale}}
name DeepPNoise3D_v04_2
xpos 950
ypos -873
}
Switch {
inputs 2
which {{parent.ignore_deep}}
name ignore_deep1
xpos 950
ypos -393
}
Invert {
channels alpha
name Invert1
xpos 950
ypos 419
}
Blur {
channels alpha
name noise_blur
xpos 950
ypos 467
}
Dot {
name Dot15
xpos 984
ypos 570
}
push $N20022e70
Dot {
name Dot70
xpos 764
ypos -366
}
set N1f25fac0 [stack 0]
Unpremult {
channels depth
name Unpremult1
xpos 730
ypos -325
}
Shuffle {
in depth
name Shuffle3
label "\[value in]-->\[value out]"
xpos 730
ypos -277
}
set N1f26cfe0 [stack 0]
Dot {
name Dot14
xpos 1094
ypos -270
}
set N1f27d650 [stack 0]
Dot {
name Dot17
xpos 1314
ypos -270
}
Grade {
channels alpha
blackpoint {{parent.fog_clip}}
whitepoint {{blackpoint*1.25}}
white_clamp true
name fog_clip
xpos 1280
ypos 275
}
push $N1f27d650
Grade {
channels alpha
blackpoint {{parent.fog2_distance_from_camera}}
whitepoint {{"pow((10),parent.fog2_density) + (blackpoint- 10)"}}
gamma {{fog2_density_falloff}}
white_clamp true
name fog2_distance_from_camera
xpos 1060
ypos -181
}
Dot {
name Dot8
xpos 1094
ypos -30
}
push $N20022e70
Unpremult {
channels all
name Unpremult2
xpos 510
ypos -301
}
Shuffle {
in Pworld
red green
blue green
alpha green
name Shuffle13
label "\[value in]-->\[value out]"
xpos 510
ypos -253
}
set N1f2b6a50 [stack 0]
Dot {
name Dot2
xpos 874
ypos -246
}
Grade {
channels alpha
blackpoint {{"pow((10),parent.fog2_exp) + (whitepoint - 10) + .01"}}
whitepoint {{"parent.fog2_starting_height + .01"}}
gamma {{parent.fog2_falloff}}
white_clamp true
name fog2_range_exp
xpos 840
ypos -181
addUserKnob {20 User}
}
Multiply {
value {{parent.fog2_opacity}}
name fog2_opacity
xpos 840
ypos -133
}
Clamp {
channels rgba
name Clamp1
xpos 840
ypos -81
}
Merge2 {
inputs 2
operation mask
name Merge2
xpos 840
ypos -33
}
Constant {
inputs 0
name Constant1
xpos 1060
ypos 15
}
Switch {
inputs 2
which {{parent.use_fog2}}
name Switch1
xpos 840
ypos 39
}
NoOp {
name fog2
xpos 840
ypos 63
}
Dot {
name Dot4
xpos 874
ypos 114
}
set N1f31f370 [stack 0]
Dot {
name Dot18
xpos 874
ypos 186
}
push $N1f31f370
push $N1f26cfe0
Grade {
channels alpha
blackpoint {{parent.fog1_distance_from_camera}}
whitepoint {{"pow((10),parent.fog1_density) + (blackpoint- 10)"}}
gamma {{parent.fog1_density_falloff}}
white_clamp true
name fog1_distance_from_camera
xpos 730
ypos -181
}
Dot {
name Dot3
xpos 764
ypos -30
}
push $N1f2b6a50
Grade {
channels alpha
blackpoint {{"pow((10),parent.fog1_exp) + (whitepoint - 10) + .01"}}
whitepoint {{"parent.fog1_starting_height + .01"}}
gamma {{parent.fog1_height_falloff}}
white_clamp true
name fog1_range_exp1
xpos 510
ypos -181
addUserKnob {20 User}
}
Multiply {
value {{parent.fog1_opacity}}
name fog1_opacity
xpos 510
ypos -109
}
Merge2 {
inputs 2
operation mask
name Merge29
xpos 510
ypos -33
}
Clamp {
channels rgba
name Clamp3
xpos 510
ypos -9
}
NoOp {
name fog1
xpos 510
ypos 39
}
Merge2 {
inputs 2
operation max
name Merge1
xpos 510
ypos 111
}
Dot {
name Dot20
xpos 544
ypos 138
}
set N1f390ba0 [stack 0]
Switch {
inputs 2
which {{parent.solo_fog2}}
name solo_fog2
xpos 620
ypos 183
}
push $N1f390ba0
batchOnly_v01 {
inputs 2
name batchOnly_v01_1
xpos 510
ypos 231
}
Merge2 {
inputs 2
operation stencil
name Merge5
xpos 510
ypos 279
}
Dot {
name Dot16
xpos 544
ypos 522
}
set N1f3dde20 [stack 0]
Merge2 {
inputs 2
operation mask
bbox B
mix {{parent.noise_mix}}
name apply_noise
xpos 730
ypos 567
}
set N1f3e29a0 [stack 0]
push $N1fe425c0
Dot {
name Dot24
xpos 2084
ypos -726
}
set N1d279460 [stack 0]
Sphere {
inputs 0
uniform_scale 20000
name Sphere1
xpos 1830
ypos -897
}
TransformGeo {
translate {{parent.axis_for_expressions1.world_matrix.3} {parent.axis_for_expressions1.world_matrix.7} {parent.axis_for_expressions1.world_matrix.11}}
name TransformGeo1
label "locks translation to sphere"
xpos 1830
ypos -853
}
push 0
ScanlineRender {
inputs 3
conservative_shader_sampling false
shutter {{root.scan_shutter}}
shutteroffset centred
motion_vectors_type distance
output_shader_vectors true
P_channel Pworld
name ScanlineRender1
xpos 1830
ypos -729
}
set N1d2a46d0 [stack 0]
P_Noise3D_v02 {
name P_Noise3D_v02_2
xpos 2380
ypos -421
in Pworld
output alpha
overallscale {{parent.noise_scale}}
lacunarity 4
gain 0.8
}
Invert {
channels alpha
name Invert3
xpos 2380
ypos -373
}
Blur {
channels alpha
size {{pow(parent.noise_blur.size,2)}}
name noise_blur1
xpos 2380
ypos -109
}
Dot {
name Dot29
xpos 2414
ypos 282
}
push $N1d2a46d0
Expression {
channel3 {none none none depth.Z}
expr3 "z?1/z * a:0"
name Expression9
label 1/Z
xpos 1830
ypos -637
}
Remove {
operation keep
channels Pworld
channels2 alpha
channels3 depth
name Remove2
xpos 1830
ypos -541
}
Dot {
name Dot23
xpos 1864
ypos -438
}
Unpremult {
channels all
name Unpremult4
xpos 1830
ypos -373
}
Shuffle {
in Pworld
red green
blue green
alpha green
name Shuffle6
label "\[value in]-->\[value out]"
xpos 1830
ypos -325
}
Grade {
channels alpha
blackpoint {{"pow((10),parent.BGfog_exp) + (whitepoint - 10) + .01"}}
whitepoint {{"parent.BGfog_starting_height + .01"}}
gamma {{BGfog_falloff}}
white_clamp true
name BGfog_range_exp
xpos 1830
ypos -253
addUserKnob {20 User}
}
Multiply {
value {{parent.BGfog_opacity}}
name BGfog_opacity
xpos 1830
ypos -181
}
Clamp {
channels rgba
name Clamp2
xpos 1830
ypos -81
}
Dot {
name Dot30
xpos 1864
ypos 162
}
set N1d3e2790 [stack 0]
Merge2 {
inputs 2
operation mask
mix {{parent.noise_mix}}
name apply_noise1
xpos 2160
ypos 279
}
set N1d3e72d0 [stack 0]
Dot {
name Dot39
xpos 2194
ypos 2274
}
Keymix {
inputs 3
name Keymix1
xpos 730
ypos 2243
}
Constant {
inputs 0
color {0 1 0 1}
name noise_test_color
xpos 840
ypos 2295
}
Merge2 {
inputs 2
operation mask
name Merge11
xpos 730
ypos 2319
}
push $N1f16e3c0
Dot {
name Dot43
xpos 654
ypos 2370
}
Merge2 {
inputs 2
name Merge12
xpos 730
ypos 2367
}
NoOp {
name noise_test
xpos 730
ypos 2415
}
Dot {
name Dot40
xpos 764
ypos 2610
}
push $N1f164720
Dot {
name Dot37
xpos 434
ypos 1794
}
push $N1f25fac0
Dot {
name Dot9
xpos 1424
ypos -366
}
Unpremult {
channels depth
name Unpremult5
xpos 1390
ypos 851
}
Shuffle {
in depth
name Shuffle4
label "\[value in]-->\[value out]"
xpos 1390
ypos 923
}
Dot {
name Dot60
xpos 1424
ypos 954
}
set N1d461aa0 [stack 0]
Grade {
channels alpha
blackpoint {{parent.diffuse_clip}}
whitepoint {{"blackpoint<1?1:blackpoint * 1.5"}}
white_clamp true
name clip_diffuse
xpos 1390
ypos 1259
}
set N1d466920 [stack 0]
Invert {
name Invert4
xpos 1390
ypos 1307
disable true
}
push $N1d461aa0
Grade {
channels alpha
blackpoint {{parent.near_fog_distance}}
whitepoint {{blackpoint<1?1:pow(blackpoint,2)}}
white_clamp true
name near_fog_depth
xpos 1170
ypos 947
}
Invert {
name Invert2
xpos 1170
ypos 995
}
Dot {
name Dot10
xpos 1204
ypos 1074
}
push $N1f3e29a0
push $N1f3dde20
Switch {
inputs 2
which {{parent.use_noise}}
name use_noise
xpos 510
ypos 639
}
Dot {
name Dot1
xpos 544
ypos 714
}
set N1d4ad270 [stack 0]
Dot {
name Dot11
xpos 874
ypos 714
}
Dot {
name Dot12
xpos 874
ypos 978
}
Constant {
inputs 0
color 1
name nearFog_color
xpos 950
ypos 783
}
Shuffle {
alpha white
name Shuffle2
label "\[value in]-->\[value out]"
xpos 950
ypos 899
}
Merge2 {
inputs 2
operation mask
name Merge3
xpos 950
ypos 975
}
Dot {
name Dot13
xpos 984
ypos 1050
}
push $N1d4ad270
Input {
inputs 0
name BG_sky
xpos -480
ypos -1017
number 3
}
Dot {
name Dot54
xpos -446
ypos 66
}
set N1d4ef990 [stack 0]
Remove {
operation keep
channels rgba
name Remove1
xpos -370
ypos 63
}
Blur {
size 200
name Blur1
xpos -370
ypos 107
}
Constant {
inputs 0
color {0.6800000072 0.7081599236 1 1}
name fog_color1
xpos 180
ypos -9
}
Shuffle {
alpha white
name Shuffle1
label "\[value in]-->\[value out]"
xpos 180
ypos 59
}
Dissolve {
inputs 2
channels rgb
name fog_BG_mix
xpos 180
ypos 111
}
Dot {
name Dot5
xpos 214
ypos 810
}
Dot {
name Dot46
xpos 324
ypos 810
}
set N1d5347a0 [stack 0]
Merge2 {
inputs 2
operation mask
name Merge25
xpos 510
ypos 807
}
Dot {
name Dot19
xpos 544
ypos 1002
}
set N1d549da0 [stack 0]
Keymix {
inputs 3
channels rgb
name near_fog_mix
xpos 620
ypos 1071
}
push $N1d549da0
Switch {
inputs 2
which {{parent.use_nearFog_color}}
name use_near_fog
xpos 510
ypos 1095
}
Dot {
name Dot53
xpos 544
ypos 1218
}
set N1d560290 [stack 0]
push $N200360c0
Dot {
name Dot49
xpos -226
ypos 954
}
push $N1d4ef990
Dot {
name Dot56
xpos -446
ypos 1026
}
Merge2 {
inputs 2
bbox B
name Merge14
xpos -260
ypos 1023
}
Saturation {
saturation 0
name Saturation1
xpos -260
ypos 1047
}
Clamp {
channels rgba
name Clamp5
xpos -260
ypos 1095
}
Blur {
channels rgba
size {{parent.diffuse_softness}}
name Diffuse_softness
xpos -260
ypos 1119
}
Dot {
name Dot50
xpos -226
ypos 1218
}
push $N1d560290
Dot {
name Dot51
xpos 544
ypos 1218
}
set N1d5ad310 [stack 0]
Merge2 {
inputs 2
operation multiply
name Merge15
xpos 400
ypos 1215
}
Grade {
white 2
name Grade2
xpos 400
ypos 1239
}
push $N1d5ad310
Dissolve {
inputs 2
channels rgb
which {{parent.diffuse_mix}}
name Dissolve1
xpos 400
ypos 1263
}
Keymix {
inputs 3
channels rgb
name Keymix2
xpos 400
ypos 1311
}
push $N1d5ad310
Switch {
inputs 2
which {{parent.use_diffuse}}
name use_diffuse
xpos 510
ypos 1359
}
Dot {
name Dot64
xpos 544
ypos 1386
}
set N1d5eff10 [stack 0]
Merge {
inputs 2
operation mask
also_merge all
name Merge4
xpos 510
ypos 1791
}
push $N2003ad40
Dot {
name Dot35
xpos 104
ypos 1794
}
push $N1d3e72d0
push $N1d3e2790
Switch {
inputs 2
which {{parent.use_noise}}
name use_noise1
xpos 1830
ypos 375
}
Dot {
name Dot31
xpos 1864
ypos 522
}
set N20a41200 [stack 0]
push $N1d279460
Dot {
name Dot25
tile_color 0xbfbfbfff
xpos 2084
ypos 594
}
push $N20a41200
NoOp {
name refFrame
xpos 1940
ypos 567
addUserKnob {20 User}
addUserKnob {3 curFrame l "current frame"}
curFrame {{frame}}
}
cameraPlane_v06 {
inputs 2
reference {{parent.refFrame.curFrame}}
distance 10000
planeRotations 0
overscan 0
crop false
motionblur 1
shutteroffset centred
name cameraPlane_v06_1
label "add blur"
xpos 1940
ypos 587
}
batchOnly_v01 {
inputs 2
name batchOnly_v01_2
xpos 1830
ypos 663
}
push $N1d5347a0
Dot {
name Dot61
xpos 324
ypos 1434
}
Merge2 {
inputs 2
operation mask
name Merge7
xpos 1830
ypos 1431
}
Dot {
name Dot47
xpos 1864
ypos 1482
}
set N20aa4c30 [stack 0]
Constant {
inputs 0
channels depth
color {{parent.BG_fog_depth_value}}
name Constant2
xpos 2050
ypos 1354
}
Merge {
inputs 2
operation mask
also_merge all
name Merge10
xpos 2050
ypos 1455
}
push $N20aa4c30
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels depth
name Copy4
xpos 2050
ypos 1515
}
push $N20aa4c30
Switch {
inputs 2
which {{BG_fog_depth}}
name use_BG_fog_depth
xpos 1830
ypos 1599
}
Dot {
name Dot65
xpos 1864
ypos 1698
}
Dot {
name Dot63
xpos 324
ypos 1698
}
set N20add7b0 [stack 0]
Merge {
inputs 2
operation stencil
also_merge all
name Merge16
xpos 290
ypos 1791
}
Merge2 {
inputs 2
operation plus
also_merge all
name Merge9
xpos 400
ypos 1863
}
Clamp {
channels alpha
name Clamp4
xpos 400
ypos 2291
}
set N20b02850 [stack 0]
NoOp {
name fog_only
xpos 400
ypos 2367
}
Dot {
name Dot38
xpos 434
ypos 2442
}
push $N20b02850
push $N20add7b0
Dot {
name Dot26
xpos 214
ypos 1698
}
set N20b1ad40 [stack 0]
push $N1f15f8d0
Dot {
name Dot45
xpos 214
ypos 2010
}
Merge2 {
inputs 2
operation under
name Merge13
xpos 180
ypos 2031
}
push $N20b1ad40
push $N1d5eff10
Dot {
name Dot33
xpos 214
ypos 1386
}
set N20b35530 [stack 0]
push $N20b35530
push $N200360c0
Merge2 {
inputs 2
operation atop
bbox B
name Merge26
xpos -40
ypos 1383
}
set N20b3a0b0 [stack 0]
Reformat {
name Reformat1
xpos 70
ypos 1407
}
Blur {
inputs 1+1
channels rgba
size {{parent.scatter_size}}
mix {{parent.scatter_mix}}
name Scatter
xpos 70
ypos 1455
}
set N20b59c70 [stack 0]
push $N20b3a0b0
Switch {
inputs 2
which {{parent.use_scatter}}
name use_scatter
xpos -40
ypos 1479
}
Dot {
name Dot28
xpos -6
ypos 1506
}
set N20b6ff90 [stack 0]
Merge2 {
inputs 2
operation under
also_merge depth
name Merge6
xpos 70
ypos 1695
}
push $N20b6ff90
Switch {
inputs 2
which {{parent.use_BG_fog}}
name use_BG_fog
xpos -40
ypos 1743
}
Dot {
name Dot48
xpos -6
ypos 2058
}
set N20b8d970 [stack 0]
Switch {
inputs 2
which {{parent.solo_BG_fog}}
name solo_BGfog
xpos 70
ypos 2103
}
push $N20b8d970
batchOnly_v01 {
inputs 2
name batchOnly_v01_3
xpos -40
ypos 2175
}
add_layer {fog fog.alpha}
Copy {
inputs 2
from0 rgba.alpha
to0 fog.alpha
name Copy3
xpos -40
ypos 2291
disable {{!parent.fog_alpha}}
}
set N20bc5bc0 [stack 0]
NoOp {
name result
xpos -40
ypos 2367
}
Switch {
inputs 2
which {{parent.output}}
name output_switch
xpos -40
ypos 2439
}
Dot {
name Dot52
xpos -6
ypos 2538
}
set N20be56c0 [stack 0]
Switch {
inputs 2
which {{parent.show_noise}}
name show_noise
xpos -40
ypos 2607
}
push $N20be56c0
batchOnly_v01 {
inputs 2
name batchOnly_v01_4
xpos -40
ypos 2631
}
Output {
name Output1
xpos -40
ypos 2727
}
push $N20b59c70
push $N1d466920
push $N20bc5bc0
Viewer {
inputs 3
frame 1109
frame_range 1001-1183
channels {rgba.red rgba.green rgba.blue fog.alpha}
center_fstop 0
colour_sample_bbox {0.8098958135 0.09531249851 0.8104166389 0.09583333135}
name Viewer1
xpos 620
ypos 1095
}
end_group
push $cut_paste_input
Group {
name NAN_Inf_Fix_v01
help "This tool eliminates all nan and inf value pixels and replaces them with averaged values from surrounding pixels."
note_font "Bitstream Vera Sans"
selected true
xpos 1743
ypos -372
addUserKnob {20 NAN_FIX}
addUserKnob {41 size T Blur1.size}
addUserKnob {20 Version}
addUserKnob {26 Help l Help: T "Eliminates NAN pixels and fills them out with neighboring pixels."}
addUserKnob {26 ""}
addUserKnob {32 MoreHelp l "More Help" T "start http://lois4/document/nuke-NAN_FIX-help/" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 VersionRelease l "Version Release" T 1.0}
addUserKnob {26 ReleaseNotes l "Release Notes:" T "Initial gizmo release"}
addUserKnob {26 Authors l Authors: T "Ivan Busquets"}
addUserKnob {26 LastEditBy l "Last Edit By:" T "Jose Fernandez de Castro"}
addUserKnob {26 Release l "Release Date:" T 07/29/14}
}
Input {
inputs 0
name Input1
xpos 225
ypos -471
}
Dot {
name Dot5
xpos 247
ypos -343
}
set Ncb237a0 [stack 0]
Expression {
expr0 "isinf(r) || isnan(r) ?0:r"
expr1 "isinf(g) || isnan(g) ?0:g"
expr2 "isinf(b) || isnan(b) ?0:b"
expr3 a==inf||a==-inf?0:a
name Expression2
xpos 213
ypos -266
}
set N1cc770a0 [stack 0]
Dot {
name Dot4
xpos 522
ypos -262
}
Dot {
name Dot6
xpos 522
ypos 61
}
push $Ncb237a0
Expression {
expr3 "isinf(r) || isnan(r) || isinf(g) || isnan(g) || isinf(b) || isnan(b)"
name Expression3
xpos -55
ypos -335
}
set N1f451fc0 [stack 0]
Dot {
name Dot1
xpos -33
ypos -10
}
push $N1f451fc0
Invert {
channels alpha
name Invert1
xpos 55
ypos -266
}
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle2
xpos 55
ypos -207
}
set N1fdfe5a0 [stack 0]
push $N1cc770a0
Merge2 {
inputs 2
operation multiply
name Merge1
xpos 213
ypos -207
}
Blur {
size {{parent.Blur1.size}}
name Blur2
xpos 213
ypos -160
}
push $N1fdfe5a0
Blur {
size 3
name Blur1
xpos 55
ypos -151
}
Merge2 {
inputs 2
operation divide
name Merge2
xpos 213
ypos -84
}
push $Ncb237a0
Dot {
name Dot3
xpos 327
ypos -273
}
Dot {
name Dot2
xpos 327
ypos -39
}
Keymix {
inputs 3
name Keymix1
selected true
xpos 213
ypos -20
}
Switch {
inputs 2
name Switch1
xpos 213
ypos 57
}
Output {
name Output1
xpos 213
ypos 130
}
end_group
push $cut_paste_input
Switch {
which {{frame==parent.knob.first_frame?1:frame==parent.knob.last_frame?1:0}}
name Render_Ref
selected true
xpos 1588
ypos -281
}
Switch {
inputs 0
which 1
name Use_Pcomp
tile_color 0xff00ff
label "\[if \{\[value this.which]==0 || \[value this.disable]==\"true\"\} \{return \"\[knob this.tile_color 0xff000000]\"\} \{return \"\[knob this.tile_color 0xff00ff]\"\}]"
note_font_size 15
selected true
xpos 1758
ypos -299
}
Group {
inputs 0
name smoothStretch_b01
note_font "Bitstream Vera Sans"
selected true
xpos 1914
ypos -308
addUserKnob {20 SmoothStretch}
addUserKnob {35 SmoothStretchPresets l "" -STARTLINE M {PushPixelsOffBottom "knob PositionStartGrad.x \[input this 0].bbox.w/2;knob PositionStartGrad.y \[input this 0].bbox.h/2;knob PositionEndGrad.x \[input this 0].bbox.w/2;knob PositionEndGrad.y \[input this 0].bbox.h-\[input this 0].bbox.h; knob Direction 0" PushPixelsOffTop "knob PositionStartGrad.x \[input this 0].bbox.w/2;knob PositionStartGrad.y \[input this 0].bbox.h/2;knob PositionEndGrad.x \[input this 0].bbox.w/2;knob PositionEndGrad.y \[input this 0].bbox.h; knob Direction 1" PushPixelsOffRight "knob PositionStartGrad.x \[input this 0].bbox.w/2;knob PositionStartGrad.y \[input this 0].bbox.h/2;knob PositionEndGrad.x \[input this 0].bbox.w;knob PositionEndGrad.y \[input this 0].bbox.h/2; knob Direction 2" PushPixelsOffLeft "knob PositionStartGrad.x \[input this 0].bbox.w/2;knob PositionStartGrad.y \[input this 0].bbox.h/2;knob PositionEndGrad.x \[input this 0].bbox.w-\[input this 0].bbox.w;knob PositionEndGrad.y \[input this 0].bbox.h-\[input this 0].bbox.h/2; knob Direction 3" "" "" "" "" "" "" "" "" "" "" "" "" ""}}
addUserKnob {26 starthere l "" -STARTLINE T "Choose Stretch Direction from preset to start\n"}
addUserKnob {4 Direction l INVISIBLE +INVISIBLE M {PushPixelsOffBottom PushPixelsOffTop PushPixelsOffRight PushPixelsOffLeft "" "" "" ""}}
addUserKnob {7 Amount R 0 300}
Amount 40
addUserKnob {41 GammaGrad T Gamma1.value}
addUserKnob {12 PositionStartGrad}
PositionStartGrad {2120 216}
addUserKnob {12 PositionEndGrad}
PositionEndGrad {2120 -114}
addUserKnob {4 Output M {Result DisplacementGrad}}
addUserKnob {20 Version}
addUserKnob {26 Help l Help: T "This gizmo will displace a number of pixels off the edge of frame. Useful\nfor removing artifacts that are on the edge of the frame.\n"}
addUserKnob {26 ""}
addUserKnob {32 MoreHelp l "More Help" T "start https://confluence.lucasfilm.com/x/C8yh" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 VersionRelease l "Version Release:" T "Beta 1.1"}
addUserKnob {26 ReleaseNotes l "Release Notes:" T "Version Tab Cleanup"}
addUserKnob {26 Author l Author: T "Jay Cooper (jcooper)"}
addUserKnob {26 LastEditBy l "Last Edit By:" T "Patrick Tubach (ptubach)"}
addUserKnob {26 ReleaseDate l "Release Date:" T 2/11/10}
}
Input {
inputs 0
name Input1
xpos 449
ypos -627
}
Dot {
name Dot1
xpos 483
ypos -443
}
set N20f62ec0 [stack 0]
Shuffle {
red black
green black
blue black
alpha black
name Shuffle1
xpos 298
ypos -441
}
set N20ed6fb0 [stack 0]
Ramp {
p0 {{PositionEndGrad.x i} {"\[input this 0].bbox.h/2" i x1 766}}
p1 {{parent.PositionStartGrad.x i} {"\[input this 0].bbox.h/2" i x1 822}}
name horiz_left
xpos 94
ypos -357
}
push $N20ed6fb0
Ramp {
p0 {{parent.PositionEndGrad.x i} {"\[input this 0].bbox.h/2" i x1 758}}
p1 {{parent.PositionStartGrad.x i x1 1175} {"\[input this 0].bbox.h/2" i x1 773}}
name horiz_right
xpos -34
ypos -357
}
push $N20ed6fb0
Ramp {
p0 {{"\[input this 0].bbox.w/2" i x1 1024} {parent.PositionEndGrad.y i x1 11556}}
p1 {{"\[input this 0].bbox.w/2" i x1 1052} {parent.PositionStartGrad.y i x1 1038}}
name vert_top
xpos 347
ypos -360
}
push $N20ed6fb0
Ramp {
p0 {{"\[input this 0].bbox.w/2" i x1 1024} {parent.PositionEndGrad.y i x1 -12}}
p1 {{"\[input this 0].bbox.w/2" i x1 992} {parent.PositionStartGrad.y i}}
name vert_bot
xpos 212
ypos -360
}
Switch {
inputs 4
which {{parent.Direction i}}
name Switch1
xpos 190
ypos -200
}
Gamma {
name Gamma1
xpos 190
ypos -123
}
set N2123a400 [stack 0]
push $N2123a400
push $N20f62ec0
Reformat {
name Reformat1
xpos 354
ypos -145
disable true
}
Copy {
inputs 2
from0 rgba.alpha
to0 forward.v
from1 rgba.alpha
to1 forward.u
name Copy1
xpos 354
ypos -70
}
set N21255730 [stack 0]
IDistort {
uv forward
uv_offset 1
uv_scale {{parent.Amount*-1 i} 0}
name horizontal_left
xpos 583
ypos 88
}
push $N21255730
IDistort {
uv forward
uv_offset 1
uv_scale {{parent.Amount i} 0}
name horizontal_right
xpos 445
ypos 101
}
push $N21255730
IDistort {
uv forward
uv_offset 1
uv_scale {0 {parent.Amount i}}
name verticle1_top
xpos 322
ypos 107
}
push $N21255730
IDistort {
uv forward
uv_offset 1
uv_scale {0 {parent.Amount*-1 i}}
name verticle_bot
xpos 180
ypos 107
}
Switch {
inputs 4
which {{parent.Direction i}}
name Switch2
xpos 381
ypos 235
}
Switch {
inputs 2
which {{parent.Output}}
name Switch3
xpos 381
ypos 323
}
Output {
name Output1
xpos 381
ypos 396
}
end_group
StickyNote {
inputs 0
name StickyNote22
tile_color 0xa385a3ff
label OTHER
note_font "Bitstream Vera Sans"
note_font_size 150
selected true
xpos 1530
ypos -606
}
push $cut_paste_input
push 0
Group {
inputs 2
name HSV_mix11
help "Converts colorspace of inputs and transfers hue and saturation from A to B while ignoring luminance.\n\nUseful for mixing plate color into smoke or dust without altering brightness of element.\n"
tile_color 0x7aa9ff00
note_font "Bitstream Vera Sans"
selected true
xpos -632
ypos -1106
addUserKnob {20 userTab l User}
addUserKnob {41 size l "Blur Source" t "Blurs A input prior to transferring hue and saturation" T Blur_BG.size}
addUserKnob {26 ""}
addUserKnob {7 hueIn l "Hue Shift" t "0 is hue of input, moving towards 1 cycles through colorwheel"}
hueIn 1
addUserKnob {41 value l Saturation t "1 is 100% saturation" T Mult_Sat.value}
addUserKnob {26 ""}
addUserKnob {41 alpha l Mask t "Multiplies output by chosen channel" T Premult1.alpha}
addUserKnob {41 invert -STARTLINE T Premult1.invert}
addUserKnob {7 masterMix l Mix}
masterMix 1
addUserKnob {26 ""}
}
Input {
inputs 0
name B
xpos -500
ypos 1
}
Dot {
name Dot2
xpos -466
ypos 136
}
set N1c35ad10 [stack 0]
Dot {
name Dot1
xpos -466
ypos 485
}
set N1c6cf3a0 [stack 0]
Dot {
name Dot4
xpos -466
ypos 594
}
Input {
inputs 0
name A
xpos -658
number 1
}
AddChannels {
channels rgba
name AddChannels1
xpos -658
ypos 26
}
Blur {
size 20
name Blur_BG
xpos -658
ypos 65
}
Crop {
box {{curve i} {curve i} {width i} {height i}}
crop false
name Crop1
xpos -658
ypos 134
}
Colorspace {
colorspace_out HSV
name Colorspace1
xpos -658
ypos 191
}
set N1c4faa50 [stack 0]
Dot {
name Dot3
xpos -624
ypos 272
}
push $N1c4faa50
push $N1c35ad10
Colorspace {
colorspace_out HSV
name Colorspace3
xpos -395
ypos 131
}
Copy {
inputs 2
from0 rgba.red
to0 rgba.red
name Hue
xpos -395
ypos 185
}
Copy {
inputs 2
from0 rgba.green
to0 rgba.green
name Saturation
xpos -395
ypos 260
}
Add {
channels {rgba.red -rgba.green -rgba.blue none}
value {{parent.hueIn}}
name Add_Hue
xpos -402
ypos 318
}
Multiply {
channels {-rgba.red rgba.green -rgba.blue none}
name Mult_Sat
xpos -395
ypos 359
}
Colorspace {
colorspace_in HSV
name Colorspace2
xpos -395
ypos 415
}
push $N1c6cf3a0
Dissolve {
inputs 2
which {{parent.masterMix}}
name Mix
xpos -395
ypos 475
}
Premult {
channels rgba
alpha none
name Premult1
xpos -395
ypos 542
}
CopyBBox {
inputs 2
name CopyBBox1
xpos -395
ypos 590
}
set N1bc37770 [stack 0]
Output {
name Output1
xpos -395
ypos 669
}
push $N1bc37770
push $N1bc37770
Viewer {
inputs 2
input_number 1
name Viewer1
xpos -670
ypos 542
}
end_group
StickyNote {
inputs 0
name StickyNote1
tile_color 0xa385a3ff
label CC
note_font "Bitstream Vera Sans"
note_font_size 150
selected true
xpos -691
ypos -1359
}
push $cut_paste_input
Group {
name gradeAOV_v14
tile_color 0x7aa9ffff
note_font "Bitstream Vera Sans"
selected true
xpos -499
ypos -1113
addUserKnob {20 GradeAOV}
addUserKnob {41 channels T Grade2.channels}
addUserKnob {18 blackpoint t "This color goes to black" R -1 1}
addUserKnob {6 blackpoint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 whitepoint t "This color goes to white" R 0 4}
whitepoint 1
addUserKnob {6 whitepoint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 lift t "black is turned into this color" R -1 1}
addUserKnob {6 lift_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 gain t "white is turned into this color" R 0 4}
gain 1
addUserKnob {6 gain_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 multiply t "Constant to multiply result by." R 0 4}
multiply 1
addUserKnob {6 multiply_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 offset t "constant to raise the result (raises both black and white, unlike lift)" R -1 1}
addUserKnob {6 offset_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 gamma t "Gamma correction applied to final result." R 0.2 5}
gamma 1
addUserKnob {6 gamma_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {41 reverse T Grade2.reverse}
addUserKnob {41 black_clamp l "black clamp" -STARTLINE T Grade2.black_clamp}
addUserKnob {41 white_clamp l "white clamp" -STARTLINE T Grade2.white_clamp}
addUserKnob {41 maskChannelMask l mask T Grade2.maskChannelMask}
addUserKnob {41 invert_mask l invert -STARTLINE T Grade2.invert_mask}
addUserKnob {41 fringe -STARTLINE T Grade2.fringe}
addUserKnob {41 unpremult l "(un)premult by" T Grade2.unpremult}
addUserKnob {41 invert_unpremult l invert -STARTLINE T Grade2.invert_unpremult}
addUserKnob {41 mix T Grade2.mix}
addUserKnob {26 ""}
addUserKnob {6 modifyChannels l "Modify AOV Channels" t "The values above will affect the output of the AOV channels, as well as the beauty pass.\nTurning this off, will result in only the beauty pass being affected" +STARTLINE}
modifyChannels true
addUserKnob {6 ViewAOVChannels l "View AOV Channels" t "this will output the selected AOV's instead of RGBA\nBe aware that when all channels or none channels are selected, the output will be black!!!" +STARTLINE}
addUserKnob {20 Version}
addUserKnob {26 Help l Help: T "Grade AOV applies a grade to your specified channel."}
addUserKnob {26 ""}
addUserKnob {32 MoreHelp l "More Help" T "start https://confluence.lucasfilm.com/x/8Muh" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {26 VersionRelease l "Version Release:" T 14}
addUserKnob {26 ReleaseNotes l "Release Notes:" T "Fixed panel drop state in a few color knobs"}
addUserKnob {26 Authors l Author: T "Florian Strobl (fstrobl)"}
addUserKnob {26 LastEditBy l "Last Edit By:" T "Christopher Doerhoff (cdoerhoff)"}
addUserKnob {26 ReleaseDate l "Release Date:" T 12/04/2019}
}
Input {
inputs 0
name mask
xpos 458
ypos 30
number 1
}
Invert {
name Invert1
xpos 458
ypos 145
}
AddChannels {
channels {rgba.alpha none none rgba.alpha}
name AddChannels1
xpos 458
ypos 187
}
Invert {
name Invert2
xpos 458
ypos 229
}
Dot {
name Dot6
selected true
xpos 492
ypos 316
}
Input {
inputs 0
name image
xpos 131
ypos -16
}
AddChannels {
channels {rgba.alpha none none rgba.alpha}
color 1
name AddChannels2
xpos 131
ypos 70
}
set N20fcbc40 [stack 0]
Dot {
name Dot7
xpos 360
ypos 77
}
Dot {
name Dot1
xpos 360
ypos 246
}
set N20fd9c90 [stack 0]
Grade {
inputs 1+1
channels none
blackpoint {{parent.blackpoint} {parent.blackpoint} {parent.blackpoint} {parent.blackpoint}}
whitepoint {{parent.whitepoint} {parent.whitepoint} {parent.whitepoint} {parent.whitepoint}}
black {{parent.lift} {parent.lift} {parent.lift} {parent.lift}}
white {{parent.gain} {parent.gain} {parent.gain} {parent.gain}}
multiply {{parent.multiply} {parent.multiply} {parent.multiply} {parent.multiply}}
add {{parent.offset} {parent.offset} {parent.offset} {parent.offset}}
gamma {{parent.gamma} {parent.gamma} {parent.gamma} {parent.gamma}}
maskChannelInput -rgba.alpha
name Grade2
knobChanged "\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == 'channels':\n    nuke.toNode('Merge3')\['Achannels'].fromScript(k.toScript())\n    nuke.toNode('Merge3')\['Achannels'].enableChannel(3, False)\n    nuke.toNode('Shuffle1')\['in'].fromScript(k.toScript())\n    nuke.toNode('Shuffle1')\['in'].fromScript(k.toScript())\n    nuke.toNode('Merge4')\['Achannels'].fromScript(k.toScript())\n    nuke.toNode('Merge4')\['Achannels'].enableChannel(3, False)\n    nuke.toNode('Copy1')\['channels'].fromScript(k.toScript())    \n"
xpos 326
ypos 309
}
set N20fdeb30 [stack 0]
Dot {
name Dot2
xpos 360
ypos 440
}
set N20ff38a0 [stack 0]
Dot {
name Dot3
xpos -18
ypos 440
}
Shuffle {
in none
name Shuffle1
label "\[value in]-->\[value out]"
xpos -52
ypos 518
}
Dot {
name Dot4
xpos -18
ypos 668
}
push $N20ff38a0
Dot {
name Dot5
xpos 360
ypos 532
}
push $N20fdeb30
push $N20fd9c90
push $N20fcbc40
Merge2 {
inputs 2
operation from
Achannels none
Bchannels rgb
output rgb
name Merge3
xpos 131
ypos 242
}
Merge2 {
inputs 2
operation plus
Achannels none
Bchannels rgb
output rgb
name Merge4
xpos 131
ypos 315
}
Copy {
inputs 2
name Copy1
xpos 131
ypos 525
disable {{!parent.modifyChannels}}
}
Switch {
inputs 2
which {{parent.ViewAOVChannels}}
name Switch1
xpos 131
ypos 664
}
Output {
name Output1
xpos 131
ypos 782
}
end_group
push $cut_paste_input
FrameHold {
first_frame {{"\[lindex \[split \[value frames]] \[expr \[value frame]-\[value start_frame]]]"}}
name FrameJumper
note_font "Bitstream Vera Sans"
selected true
xpos 1611
ypos -195
addUserKnob {20 User}
addUserKnob {3 start_frame l "start frame"}
start_frame 1001
addUserKnob {1 frames}
frames "1001 1005 1100"
}
Crop {
inputs 0
box {{-user_overscan} {-user_overscan} {width+user_overscan} {height+user_overscan}}
crop false
name crop_overscan
tile_color 0xe0b200ff
note_font "Bitstream Vera Sans"
selected true
xpos 1473
ypos -916
addUserKnob {20 User}
addUserKnob {7 user_overscan R 0 100}
user_overscan 50
}
NoOp {
inputs 0
name MultToExposure_Converter
selected true
xpos -659
ypos -1003
addUserKnob {20 ExposureToMult}
addUserKnob {26 name1 l "<b><font color=#70EE70>Exposure (Stops) To Mult Value</font><b>"}
addUserKnob {19 exposure l Exposure/stops}
exposure 1
addUserKnob {6 exposure_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {19 Mult l "Mult (read only)"}
Mult {{pow(2,exposure)}}
addUserKnob {6 Mult_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 MultA_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 exposureA_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 _1 l "<b><font color=#70EE70>Mult To Exposure (Stops) Value</font><b>"}
addUserKnob {19 MultB l Mult}
MultB 2
addUserKnob {6 MultB_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {19 Exposurestops l "Exposure/stops (read only)"}
Exposurestops {{log(MultB)/log(2)}}
addUserKnob {6 Exposurestops_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 MultB2_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {26 ""}
addUserKnob {26 createdby l "" +STARTLINE T "created by Julian Koerrenz (ILM Vancouver)"}
}
Group {
inputs 0
name PlanarProjection_animatedGEO
help "<b>Planar Projection</b>\nGenerates 2D coordinates for points in 3D space. Type in 3D point coordinates, or use vertex selection in 3D viewer and click set to pick average of selected points, or set points to set all four points at once. \n\nYou can connect node output to scene together with your pointcloud or geometry and see where your points are located in 3d space. Double click any of them to move it in 3d space like any traditional nuke transform control. \n\nA matrix transform is also generated to be used with RotoPaint, SplineWarp and GridWarp nodes. If you are using matrix in GridWarp, points have to be in clockwise order, pick them one by one! \n\nCommand set points doesn't respect selection order! \n\nCheck out the demo video on my website! Kudos to Ivan Busquets for help with matrix math. \n\n-- developed by Vit Sedlacek 2012 www.vitsedlacek.com \n\n-- Modified by Jed Smith to make calculation time nearly instantaneous, fix some bugs and create a BG input so that the sampled format could be easily specified instead of using nuke.root() format. Also enabled animated 3d input points, and added some functionality in the set knobs to snarf data from axis nodes.\nhttp://gist.github.com/jedypod"
selected true
xpos 1628
ypos -916
addUserKnob {20 PlanarProjection}
addUserKnob {26 ""}
addUserKnob {26 usage_label_header l " " T "<font size=4>\n<b>Input 3D Positions</b>"}
addUserKnob {20 usage_label_grp l "       help" n 1}
usage_label_grp 0
addUserKnob {26 usage_label l " " T "<font size=3>\nSelect any number of points in the 3D view, in vertex selection mode.<br/>\n<b>Set from Selection</b>: 4 points will be set based on the selection bounds.<br/>\n<b>Set from Axes</b>: Gets position from 4 axis nodes with or without animation.<br/>\n<b>Set Animated</b>: Set the target point. For animated geometry.<br/>\n<b>Set Point</b>: Set point from vertex selection. If no vertex selection,<br/>\n set from selected Axis. If no axis, set from selected pixel value (for PWorld).<br/>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
addUserKnob {20 endGroup n -1}
addUserKnob {22 set_from_selection l "Set from Selection" t "Set value of all points If Axis nodes are selected, it grabs translate values from them. If not, the first 4 selected vertexes in the 3D viewport is used instead. " T "## Set points to selected\nfrom __future__ import with_statement\nfrom nukescripts import snap3d as sn\n\n\nnode = nuke.thisNode()\nnode.begin()\nmatch_sel = nuke.toNode('_MATCH_SELECTION_')\n\nsn.translateRotateScaleToPoints(match_sel)\n\naxes = \[nuke.toNode('LL'), nuke.toNode('LR'), nuke.toNode('UR'), nuke.toNode('UL')]\nfor i, axis in enumerate(axes):\n    matrix = axis\['world_matrix']\n    translate = \[matrix.getValue(3), matrix.getValue(7), matrix.getValue(11)]\n    node\['ip\{0\}'.format(i+1)].setValue(translate)" +STARTLINE}
addUserKnob {22 set_from_axes l "Set from Axes" t "Select up to 4 different axes, which can be animated. This button will set the points to each axis in selection order." -STARTLINE T "node = nuke.thisNode()\nnuke.root().begin()\n\naxis_nodes = \[axis for axis in nuke.selectedNodes() if axis.Class() == \"Axis2\"]\nif axis_nodes:\n    if len(axis_nodes) > 4:\n        nuke.message(\"More than 4 axis nodes selected: Will only use the first 4 selected ones.\")\n    axis_nodes = list(reversed(axis_nodes)) # Reverse selected so it goes in selection order\n    for i in xrange(4):\n        point = node\[\"ip\{0\}\".format(i+1)]\n        axis = axis_nodes\[i]\n        if axis\['translate'].isAnimated():\n            point.clearAnimated()\n            point.copyAnimations(axis\['translate'].animations())\n        else:\n            point.clearAnimated()\n            point.setValue(axis\['translate'].getValue())"}
addUserKnob {22 clear_input l Clear t "Remove all animated and non-default knob values." -STARTLINE T "n = nuke.thisNode()\n\nfor i in xrange(4):\n    kip = n\['ip'+str(i+1)]\n    kip.clearAnimated()\n    kip.setValue(kip.defaultValue())"}
addUserKnob {22 set_single_animated l "Set Animated" t "Sets single point to selected vertex position. Set the target knob to put the data on." T "import nuke\nfrom nukescripts import snap3d as sn\n\ndef _get_framerange():\n    first_frame = int(nuke.numvalue('root.first_frame'))\n    last_frame = int(nuke.numvalue('root.last_frame'))\n    step = 1\n    default_frange = str(nuke.FrameRange(first_frame, last_frame, step))\n    frange = nuke.getInput('Enter Frame Range:', default_frange)\n    if not frange:\n        return None\n    else:\n        try:\n            return nuke.FrameRange(frange)\n        except:\n            nuke.message('Invalid frame range')\n            return None\n\ndef get_vertex_position(frame):\n    # return last selected vertex position on specified frame\n    vertices = sn.getSelection()\n    if not vertices:\n        nuke.message(\"A vertex must be selected.\")\n        return\n    center = sn.calcAveragePosition(vertices)\n    vertices.translate(-center)\n    return center\n\ndef calc_vertex_positions():\n    framerange = _get_framerange()\n    if not framerange:\n        return\n    curvetool = nuke.nodes.CurveTool()\n    positions_animcurve = \[\[], \[], \[]]\n    for frame in framerange:\n        nuke.execute(curvetool, frame, frame)\n        curpos = get_vertex_position(frame)\n        if curpos:\n            for i in xrange(3):\n                positions_animcurve\[i].append(nuke.AnimationKey(frame, curpos\[i]))\n    if curvetool:\n        nuke.delete(curvetool)\n    return positions_animcurve\n\nnode = nuke.thisNode()\nnuke.root().begin()\niptarget = node\['iptarget'].getValue()\nipknob = node\['ip\{0\}'.format(int(iptarget)+1)]\nipknob.clearAnimated()\nipknob.setAnimated()\n\npositions = calc_vertex_positions()\nfor index, curve in enumerate(ipknob.animations()):\n    curve.addKey(positions\[index])" +STARTLINE}
addUserKnob {22 set_point l "Set Point" -STARTLINE T "import nuke\nfrom nukescripts import snap3d as sn\n\ndef get_vertex_position():\n    points = sn.getSelection()\n    if not points:\n        return None\n    pos = sn.calcAveragePosition(points)\n    return pos\n\nif __name__==\"__main__\":\n    node = nuke.thisNode()\n    nuke.root().begin()\n    axis_nodes = \[axis for axis in nuke.selectedNodes() if axis.Class() == \"Axis2\"]\n    iptarget = node\['iptarget'].getValue()\n    ipknob = node\['ip\{0\}'.format(int(iptarget)+1)]\n    pos = get_vertex_position()\n    if pos:\n        ipknob.setValue(pos)\n    elif axis_nodes:\n        axis = axis_nodes\[-1]\n        if axis\['translate'].isAnimated():\n            ipknob.clearAnimated()\n            ipknob.copyAnimations(axis\['translate'].animations())\n        else:\n            ipknob.clearAnimated()\n            ipknob.setValue(axis\['translate'].getValue())\n    else:\n        viewer = nuke.activeViewer().node()\n        if viewer.input(0):\n            viewed_node = viewer.input(0)\n            if not nuke.selectedNodes():\n                viewed_node.setSelected(1)\n        else:\n            viewed_node = nuke.activeViewer().node()\n        bboxinfo = nuke.activeViewer().node()\['colour_sample_bbox'].value()\n        aspect = float(viewed_node.width() * viewed_node.pixelAspect()) / float(viewed_node.height())\n        cornerA = \[(bboxinfo\[0]*0.5+0.5) * viewed_node.width(), (((bboxinfo\[1] * 0.5) + (0.5/aspect)) * aspect) * viewed_node.height()]\n        cornerB = \[(bboxinfo\[2]*0.5+0.5) * viewed_node.width(), (((bboxinfo\[3] * 0.5) + (0.5/aspect)) * aspect) * viewed_node.height()]\n        area = \[cornerB\[0] - cornerA\[0], cornerB\[1] - cornerA\[1]]\n        center = \[cornerA\[0] + (area\[0]/2), cornerA\[1] + (area\[1] / 2)]\n        color_sample = \[viewed_node.sample('rgba.red', center\[0], center\[1], area\[0], area\[1]), viewed_node.sample('rgba.green', center\[0], center\[1], area\[0], area\[1]), viewed_node.sample('rgba.blue', center\[0], center\[1], area\[0], area\[1])]\n        ipknob.setValue(color_sample)"}
addUserKnob {4 iptarget l "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;target" -STARTLINE M {"point 1" "point 2" "point 3" "point 4" "" ""}}
iptarget "point 2"
addUserKnob {41 ip1 l "point 1" T point_1.translate}
addUserKnob {22 set_ip1 l "Set 1" t "Set point 1 to current selection." -STARTLINE T "node = nuke.thisNode()\nnode\['iptarget'].setValue(0)\nnode\['set_point'].execute()"}
addUserKnob {41 ip2 l "point 2" T point_2.translate}
addUserKnob {22 set_ip2 l "Set 2" t "Set point 2 to current selection." -STARTLINE T "node = nuke.thisNode()\nnode\['iptarget'].setValue(1)\nnode\['set_point'].execute()"}
addUserKnob {41 ip3 l "point 3" T point_3.translate}
addUserKnob {22 set_ip3 l "Set 3" t "Set point 3 to current selection." -STARTLINE T "node = nuke.thisNode()\nnode\['iptarget'].setValue(2)\nnode\['set_point'].execute()"}
addUserKnob {41 ip4 l "point 4" T point_4.translate}
addUserKnob {22 set_ip4 l "Set 4" t "Set point 4 to current selection." -STARTLINE T "node = nuke.thisNode()\nnode\['iptarget'].setValue(3)\nnode\['set_point'].execute()"}
addUserKnob {26 ""}
addUserKnob {26 reconcile_explanation l " " T "<font size=4><b>Reconcile Points into Screen Space</b>"}
addUserKnob {20 reconcile_points_grp l "       help" n 1}
reconcile_points_grp 0
addUserKnob {26 reconcile_points_help l " " T "<font size=3>Press Calculate and the 3D points will be reconciled into 2d tracking data. <br/>\nA perspective transform matrix is also calculated. <br/>This enables tracking in \ntranslation, rotation, scale and perspective.\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"}
addUserKnob {20 endGroup_1 l endGroup n -1}
addUserKnob {22 Calculate t "Calculate the reconciled 2D points for each 3D point.\n\nAlso calculate a matrix transform for the planar surface, if there are 4 total points. This can then be used for Rotos and CornerPins." T "import nuke\nfrom nukescripts import snap3d as sn\nimport math\n\n\ndef cameraProjectionMatrix(cameraNode, frame, imageformat):\n    ## modified code from nukescripts/Snap3D\n\n    # Matrix to transform points into camera-relative coords.\n    wm = nuke.math.Matrix4()\n    for i in xrange(16):\n        wm\[i] = cameraNode\['matrix'].getValueAt(frame,i)\n    wm.transpose()\n    camTransform = wm.inverse()\n\n    # Matrix to take the camera projection knobs into account\n    roll = float(cameraNode\['winroll'].getValueAt(frame,0))\n    scale_x = float(cameraNode\['win_scale'].getValueAt(frame,0))\n    scale_y = float(cameraNode\['win_scale'].getValueAt(frame,1))\n    translate_x = float(cameraNode\['win_translate'].getValueAt(frame,0))\n    translate_y = float(cameraNode\['win_translate'].getValueAt(frame,1))\n    m = nuke.math.Matrix4()\n    m.makeIdentity()\n    m.rotateZ(math.radians(roll))\n    m.scale(1.0 / scale_x, 1.0 / scale_y, 1.0)\n    m.translate(-translate_x, -translate_y, 0.0)\n\n    # Projection matrix based on the focal length, aperture and clipping planes of the camera\n    focal_length = float(cameraNode\['focal'].getValueAt(frame))\n    h_aperture = float(cameraNode\['haperture'].getValueAt(frame))\n    near = float(cameraNode\['near'].getValueAt(frame))\n    far = float(cameraNode\['far'].getValueAt(frame))\n    projection_mode = int(cameraNode\['projection_mode'].getValueAt(frame))\n    p = nuke.math.Matrix4()\n    p.projection(focal_length / h_aperture, near, far, projection_mode == 0)\n\n    # Matrix to translate the projected points into normalised pixel coords\n    imageAspect = float(imageformat.height()) / float(imageformat.width())\n\n    t = nuke.math.Matrix4()\n    t.makeIdentity()\n    t.translate( 1.0, 1.0 - (1.0 - imageAspect / float(imageformat.pixelAspect())), 0.0 )\n\n    # Matrix to scale normalised pixel coords into actual pixel coords.\n    x_scale = float(imageformat.width()) / 2.0\n    y_scale = x_scale * imageformat.pixelAspect()\n    s = nuke.math.Matrix4()\n    s.makeIdentity()\n    s.scale(x_scale, y_scale, 1.0)\n\n    # The projection matrix transforms points into camera coords, modifies based\n    # on the camera knob values, projects points into clip coords, translates the\n    # clip coords so that they lie in the range 0,0 - 2,2 instead of -1,-1 - 1,1,\n    # then scales the clip coords to proper pixel coords.\n    return s * t * p * m * camTransform\n\n\n\ndef pointsToMatrix(frame, node, reference_frame=None):\n    cpToMtx = nuke.math.Matrix4()\n    cpFromMtx = nuke.math.Matrix4()\n\n    # Get a list of Vector2 objects for each of the 'to' knobs and each of the 'from' knobs.\n    ToVectors = \[nuke.math.Vector2(node\[f].getValueAt(frame, 0), node\[f].getValueAt(frame, 1)) for f in sorted(node.knobs().keys()) if f.startswith('op')]\n\n    # Feed all 4 coordinates into the mapUnitSquareToQuad() function\n    cpToMtx.mapUnitSquareToQuad(ToVectors\[0].x, ToVectors\[0].y, ToVectors\[1].x, ToVectors\[1].y, ToVectors\[2].x, ToVectors\[2].y, ToVectors\[3].x, ToVectors\[3].y)\n\n    # If we have a reference frame, use the to vectors on that frame as our from matrix, otherwise use the image width and height\n    if reference_frame:\n        FromVectors = \[nuke.math.Vector2(node\[f].getValueAt(reference_frame, 0), node\[f].getValueAt(reference_frame, 1)) for f in sorted(node.knobs().keys()) if f.startswith('op')]\n        cpFromMtx.mapUnitSquareToQuad(FromVectors\[0].x, FromVectors\[0].y, FromVectors\[1].x, FromVectors\[1].y, FromVectors\[2].x, FromVectors\[2].y, FromVectors\[3].x, FromVectors\[3].y)\n    else:\n        cpFromMtx.mapUnitSquareToQuad(0, 0, node.width(), 0, node.width(), node.height(), 0, node.height())\n\n    transform_matrix = cpToMtx * cpFromMtx.inverse()\n\n    # This is not needed to apply the transformation. The matrix is already correct.\n    # However, the matrix knob in rotopaint is indexed differently (row major), so I just transpose the matrix here to make it easier to copy its values to the knob\n    transform_matrix.transpose()\n\n    # Fill in the transform_matrix knob of the target node\n    return transform_matrix\n\n\n\ndef projectPoints(frame, camera=None, point=None, imageformat=None):\n    # Modify projectpoint function in nukescripts.snap3d to add frame argument\n    if not imageformat:\n        imageformat = nuke.root()\['format'].value()\n    camMatrix = cameraProjectionMatrix(camera, frame, imageformat)\n    if camMatrix == None:\n        raise RuntimeError, \"snap3d.cameraProjectionMatrix() returned None for camera.\"\n\n    if not ( isinstance(point, list) or isinstance(point, tuple) ):\n        raise ValueError, \"Argument point must be a list or tuple.\"\n\n    for point in point:\n        # Would be nice to not do this for every item but since lists/tuples can\n        # containg anything...\n        if isinstance(point, nuke.math.Vector3):\n            pt = point\n        elif isinstance(point, list) or isinstance(point, tuple):\n            pt = nuke.math.Vector3(point\[0], point\[1], point\[2])\n        else:\n            raise ValueError, \"All items in point must be nuke.math.Vector3 or list/tuple of 3 floats.\"\n\n        tPos = camMatrix * nuke.math.Vector4(pt.x, pt.y, pt.z, 1.0)\n        #print tPos\n        try:\n            yield nuke.math.Vector2(tPos.x / tPos.w, tPos.y / tPos.w)\n        except ZeroDivisionError:\n            print \"Zero Division Error on frame \{0\} with point data \{1\}\".format(frame, point)\n            yield nuke.math.Vector2()\n\n\ndef calculate(node):\n    # Get the input Camera and verify it is right. (Assume camera is topnode of input to handle dots)\n    cam_input = node.input(1)\n    # Sanity check\n    if not (cam_input and isinstance(cam_input, nuke.Node)):\n        nuke.message(\"A Camera node must be connected.\")\n        return\n    if 'Camera' in cam_input.Class():\n        cam = cam_input\n    else:\n        cam = nuke.toNode(nuke.tcl(\"full_name \[topnode %s]\" % cam_input.name()))\n    bg = node.input(0)\n    if not bg:\n        nuke.message(\"BG not connected, so the root format will be used to reconcile the 3D points into screen space.\")\n\n    # Get framerange to operate on from camera animation curves\n    first = None\n    last = None\n    try:\n        if cam\['translate'].isAnimated():\n            for curve in cam\['translate'].animations():\n                if first == None:\n                    first = int(curve.keys()\[0].x)\n                else:\n                    first = min(first, int(curve.keys()\[0].x))\n            for curve in cam\['translate'].animations():\n                if last == None:\n                    last = int(curve.keys()\[-1].x)\n                else:\n                    last = max(last, int(curve.keys()\[-1].x))\n        elif cam\['rotate'].isAnimated():\n            for curve in cam\['rotate'].animations():\n                if first == None:\n                    first = int(curve.keys()\[0].x)\n                else:\n                    first = min(first, int(curve.keys()\[0].x))\n            for curve in cam\['rotate'].animations():\n                if last == None:\n                    last = int(curve.keys()\[-1].x)\n                else:\n                    last = max(last, int(curve.keys()\[-1].x))\n        else:\n            nuke.message(\"Input Camera is not animated.\")\n            return\n    except:\n        nuke.message(\"Something went wrong getting the camera animation. Using Root framerange...\")\n        first = nuke.root().firstFrame()\n        last = nuke.root().lastFrame()\n\n\n    framerange = nuke.FrameRange('\{0\}-\{1\}'.format(first, last))\n\n    # Loop through the 3D points, reconcile the coordinates through the camera into screen space\n    for opnum in xrange(4):\n        # Only run if the ip knob is not default\n        ipknob = node\[\"ip\{0\}\".format(opnum+1)]\n        if not ipknob.notDefault():\n            print \"Skipping \{0\} because it is still default!\".format('ip'+str(opnum+1))\n            continue\n\n        opknob = node\[\"op\{0\}\".format(opnum+1)]\n        opknob.clearAnimated()\n        opknob.setAnimated()\n\n        # Building the data into a list of AnimationKey objects,\n        # and then applying that list to the knob using addKey is significantly faster than other methods.\n        # This makes the Calculate button instantaneous instead of taking forever.\n        point_animcurve = \[\[], \[]]\n        for frame in framerange:\n\n            #print \"values are \", ipknob.getValueAt(frame)\n            # Sample input point knob on every frame if it's animated or expression-linked\n            if ipknob.isAnimated() or ipknob.hasExpression():\n                point = projectPoints(frame, cam, \[ipknob.getValueAt(frame)], node.format()).next()\n            else:\n                point = projectPoints(frame, cam, \[ipknob.value()], node.format()).next()\n            for index in xrange(2):\n                point_animcurve\[index].append(nuke.AnimationKey(frame, point\[index]))\n\n        for index, curve in enumerate(opknob.animations()):\n            curve.addKey(point_animcurve\[index])\n\n    # Calculate the transformation Matrix, if we have 4 output points\n    for i in xrange(4):\n        ipknob = node\[\"op\{0\}\".format(i+1)]\n        #print 'op'+str(i+1)+' IS NOT DEFAULT'\n        if not ipknob.notDefault():\n            return\n    mknob = node\['matrix']\n    mknob.clearAnimated()\n    mknob.setAnimated()\n\n    use_reference_frame = True\n    reference_frame = node\['identity_frame'].getValue()\n\n    matrix_animcurve = \[\[] for i in xrange(16)]\n    for frame in framerange:\n        if use_reference_frame:\n            matrix_data = pointsToMatrix(frame, node, reference_frame)\n        else:\n            matrix_data = pointsToMatrix(frame, node)\n        for index in xrange(16):\n            matrix_animcurve\[index].append(nuke.AnimationKey(frame, matrix_data\[index]))\n    matrix_animcurve = \[\[] for i in xrange(16)]\n    for frame in framerange:\n        if use_reference_frame:\n            matrix_data = pointsToMatrix(frame, node, reference_frame)\n        else:\n            matrix_data = pointsToMatrix(frame, node)\n        for index in xrange(16):\n            matrix_animcurve\[index].append(nuke.AnimationKey(frame, matrix_data\[index]))\n\n    for index, item in enumerate(mknob.animations()):\n        item.addKey(matrix_animcurve\[index])\n    for index, item in enumerate(mknob.animations()):\n        item.addKey(matrix_animcurve\[index])\n\nif __name__==\"__main__\":\n    calculate(nuke.thisNode())" +STARTLINE}
addUserKnob {22 clear_out l Clear t "Clear output knobs." -STARTLINE T "n = nuke.thisNode()\n\nfor i in xrange(4):\n    kop = n\['op'+str(i+1)]\n    kop.clearAnimated()\n    kop.setValue(kop.defaultValue())\n    n\['matrix'].clearAnimated()\n    n\['matrix'].setValue(\[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])"}
addUserKnob {12 op1 l "point 1"}
addUserKnob {12 op2 l "point 2"}
addUserKnob {12 op3 l "point 3"}
addUserKnob {12 op4 l "point 4"}
addUserKnob {41 matrix t "Calculated matrix." T Matrix_original.matrix}
addUserKnob {26 identity_frame_label l " " T "\nIdentity Frame"}
addUserKnob {3 identity_frame l " " t "If a frame is specified here, the matrix calculated will be relative to this frame. On the reference frame the matrix will be a null transformation."}
identity_frame 1001
addUserKnob {22 set_current l Current -STARTLINE T nuke.thisNode().knob('identity_frame').setValue(nuke.frame())}
addUserKnob {26 ""}
addUserKnob {26 link_tracking_label l " " T "<font size=4><b>Link Tracking Data to Nodes</b>"}
addUserKnob {20 link_tracking_help_grp l "       help" n 1}
link_tracking_help_grp 0
addUserKnob {26 link_tracking_help l " " T "<font size=3>\n<b>Expression link</b> will keep a live expression to the data on this node, in case it is updated.\n<br/><b>Independent identity frame</b> will add extra knobs to the created node to allow you to \n<br/>specify an independent identity frame on the node. It's heavier!\n<br/>&nbsp;&nbsp;&nbsp;&nbsp;"}
addUserKnob {20 endGroup_2 l endGroup n -1}
addUserKnob {22 create_tracker3 l Tracker3 t "Create a Tracker3 class Tracker node, in case this is what you prefer to link roto shapes to." T "# Create tracker3 node\nfrom __future__ import with_statement\ngrid_x = int(nuke.toNode('preferences').knob('GridWidth').value())\ngrid_y = int(nuke.toNode('preferences').knob('GridHeight').value())\npproj = nuke.thisNode()\nwith nuke.root():\n    track_node = nuke.nodes.Tracker3()\n    track_node.setXYpos(pproj.xpos()-grid_x*0, pproj.ypos()+grid_y*2)\n    _ = \[n.setSelected(False) for n in nuke.allNodes()]\n    track_node.setSelected(True)\n    enable_knobs = \['enable1', 'enable2', 'enable3', 'enable4']\n    trs_knobs = \['use_for1', 'use_for2', 'use_for3', 'use_for4']\n    track_knobs = \['track1', 'track2', 'track3', 'track4']\n\n    for i, k in enumerate(enable_knobs):\n        if pproj\['op\{0\}'.format(i+1)].isAnimated():\n            track_node\[k].setValue(True)\n    for i, k in enumerate(trs_knobs):\n        if pproj\['op\{0\}'.format(i+1)].isAnimated():\n            track_node\[k].setValue(7)\n    for i, track in enumerate(track_knobs):\n        if pproj\['op\{0\}'.format(i+1)].isAnimated():\n            tknob = track_node\[track]\n            tknob.clearAnimated()\n            tknob.setAnimated()\n            for x, c in enumerate(tknob.animations()):\n                opknob = pproj\['op\{0\}'.format(track.split('track')\[-1])]\n                if opknob.isAnimated():\n                    c.addKey(opknob.animation(x).keys())\n                else:\n                    tknob.clearAnimated()\n    # This hackiness is necessary so knob values work correctly\n    track_node.setTab(2)\n    track_node.showControlPanel()\n    track_node\[trs_knobs\[0]].setValue(1)\n    track_node\[trs_knobs\[0]].setValue(7)\n    track_node.hideControlPanel()" +STARTLINE}
addUserKnob {22 create_tracker4 l Tracker4 t "Create Tracker4 class tracker node." -STARTLINE T "from __future__ import with_statement\n\n# http://community.foundry.com/discuss/topic/99665\n# https://www.mail-archive.com/nuke-python@support.thefoundry.co.uk/msg04697.html\n\ngrid_x = int(nuke.toNode('preferences').knob('GridWidth').value())\ngrid_y = int(nuke.toNode('preferences').knob('GridHeight').value())\nnode = nuke.thisNode()\nexpression_link = node\['expression_link'].getValue()\n# pros not worth the cons ... disabling expression linking Tracker4 nodes for now\nexpression_link = False\n\nif expression_link:\n    nuke.message(\"Warning: If expression linking a Tracker4 node, it must be placed in the \\nimage stream in order to evaluate correctly.\")\n\nwith nuke.root():\n    _ = \[n.setSelected(False) for n in nuke.allNodes()]\n    track_node = nuke.createNode('Tracker4')\n    track_node.setXYpos(node.xpos()-grid_x*0, node.ypos()+grid_y*2)\n    _ = \[n.setSelected(False) for n in nuke.allNodes()]\n    track_node.setSelected(True)\n\n    # First line 3rd number is length of tracks: explicitly setting it to 4 here.\n    tracks_fromscript = \"\{ 1 31 4 \} \\n\{ \{ 5 1 20 enable e 1 \} \\n\{ 3 1 75 name name 1 \} \\n\{ 2 1 58 track_x track_x 1 \} \\n\{ 2 1 58 track_y track_y 1 \} \\n\{ 2 1 63 offset_x offset_x 1 \} \\n\{ 2 1 63 offset_y offset_y 1 \} \\n\{ 4 1 27 T T 1 \} \\n\{ 4 1 27 R R 1 \} \\n\{ 4 1 27 S S 1 \} \\n\{ 2 0 45 error error 1 \} \\n\{ 1 1 0 error_min error_min 1 \} \\n\{ 1 1 0 error_max error_max 1 \} \\n\{ 1 1 0 pattern_x pattern_x 1 \} \\n\{ 1 1 0 pattern_y pattern_y 1 \} \\n\{ 1 1 0 pattern_r pattern_r 1 \} \\n\{ 1 1 0 pattern_t pattern_t 1 \} \\n\{ 1 1 0 search_x search_x 1 \} \\n\{ 1 1 0 search_y search_y 1 \} \\n\{ 1 1 0 search_r search_r 1 \} \\n\{ 1 1 0 search_t search_t 1 \} \\n\{ 2 1 0 key_track key_track 1 \} \\n\{ 2 1 0 key_search_x key_search_x 1 \} \\n\{ 2 1 0 key_search_y key_search_y 1 \} \\n\{ 2 1 0 key_search_r key_search_r 1 \} \\n\{ 2 1 0 key_search_t key_search_t 1 \} \\n\{ 2 1 0 key_track_x key_track_x 1 \} \\n\{ 2 1 0 key_track_y key_track_y 1 \} \\n\{ 2 1 0 key_track_r key_track_r 1 \} \\n\{ 2 1 0 key_track_t key_track_t 1 \} \\n\{ 2 1 0 key_centre_offset_x key_centre_offset_x 1 \} \\n\{ 2 1 0 key_centre_offset_y key_centre_offset_y 1 \} \\n\} \"\n    default_track_end_script = \" \{0\} \{0\} 1 1 1 \{0\} 1 0 -32 -32 32 32 -22 -22 22 22 \{0\} \{0\} \{0\} \{0\} \{0\} \{0\} \{0\} \{0\} \{0\} \{0\} \{0\} \}\\n\"\n\n    # Loop through each 2d track knob and add it's animation to the Tracker4 node.\n    track_knobs = \['op1', 'op2', 'op3', 'op4']\n    all_trackdata = \[]\n    for i, knobname in enumerate(track_knobs):\n        opknob = node\[knobname]\n        if opknob.isAnimated():\n            trackdata = \[]\n            # Gather animation data from opknobs\n            for i, curve in enumerate(opknob.animations()):\n                if expression_link:\n                    if i == 0:\n                        dimension = 'x'\n                    elif i == 1:\n                        dimension = 'y'\n                    trackdata_string = \" \{\{\{0\}\}\}\".format(\"parent.\{0\}.\{1\}.\{2\}\".format(node.fullName(), knobname, dimension))\n                    trackdata.append(trackdata_string)\n                    # livelink_transform must be true in order for expression links to work correctly on a tracker node\n                    track_node\['livelink_transform'].setValue(True)\n                else:\n                    trackdata_string = \" \{ curve\"\n                    for key in curve.keys():\n                        trackdata_string += \" x\{0\} \{1\}\".format(int(key.x), key.y)\n                    trackdata_string += \"\}\"\n                    trackdata.append(trackdata_string)\n            all_trackdata.append(trackdata)\n\n        else:\n            i -= 1\n            continue\n    # Append data to fromscript\n    tracks_fromscript += \"\\n\{\\n\"\n    for i, curve in enumerate(all_trackdata):\n        tracks_fromscript += \"  \{ \{1\} \"\n        tracks_fromscript += \"\\\"track_\{0\}\\\"\".format(i)\n        for dim in curve:\n            tracks_fromscript += \"\{0\}\".format(dim)\n        tracks_fromscript += default_track_end_script\n    tracks_fromscript += \"\\n\}\"\n    tracks_knob = track_node\['tracks']\n    tracks_knob.fromScript(tracks_fromscript)\n    # Force update of Translate / Rotate / Scale\n    track_node.showControlPanel()\n    track_node.setTab(0)\n    tracks_knob.setValue(0, 6)\n    tracks_knob.setValue(1, 6)\n    track_node.hideControlPanel()\n    track_node\['keyframe_display'].setValue(3)"}
addUserKnob {6 expression_link l "expression link" t "If enabled, expression links will be created instead of copying the animation curves" +STARTLINE}
expression_link true
addUserKnob {6 independent_identity_frame l "independent identity frame" t "Add an independent identity frame to the output node. (More expressions! Use with caution.)" -STARTLINE}
addUserKnob {22 create_rotopaint l "Roto / Add Layer" t "Create a roto node with a layer that has the matrix transform in it to use for tracking. \n\nWorks with any number of Existing Roto / RotoPaint / SplineWarp nodes as well if they are selected." T "## Create Rotopaint\nimport nuke\nimport nuke.rotopaint as rp\nimport _curvelib as cl\n\ngrid_x = int(nuke.toNode('preferences').knob('GridWidth').value())\ngrid_y = int(nuke.toNode('preferences').knob('GridHeight').value())\nnode = nuke.thisNode()\nmatrix = node\['matrix']\nnuke.root().begin()\nidentity_frame = int(node\['identity_frame'].getValue())\nexpression_link = node\['expression_link'].getValue()\nindependent_identity_frame = node\['independent_identity_frame'].getValue()\n\nfirst = None\nfor every in matrix.animations():\n    if first == None:\n        first = int(every.keys()\[0].x)\n    else:\n        first = min(first, int(every.keys()\[0].x))\n\nlast = None\nfor every in matrix.animations():\n    if last == None:\n        last = int(every.keys()\[0].x)\n    else:\n        last = max(last, int(every.keys()\[-1].x))\n\n\nif first != None and last != None:\n    if matrix.isAnimated():\n        # Get all selected roto nodes\n        selected_roto_nodes = \[n for n in nuke.selectedNodes() if n.Class() in \[\"Roto\", \"RotoPaint\", \"SplineWarp3\"]]\n        if not selected_roto_nodes:\n            _ = \[n.setSelected(False) for n in nuke.allNodes()]\n            roto_node = nuke.createNode(\"Roto\", inpanel=False)\n            roto_node.setXYpos(node.xpos()-grid_x*0, node.ypos()+grid_y*2)\n            roto_node.setSelected(True)\n            selected_roto_nodes = \[roto_node]\n\n        for roto_node in selected_roto_nodes:\n\n            curve_knob = roto_node\['curves']\n            roto_layer = rp.Layer(curve_knob)\n            roto_layer.name = node.name()\n\n            curve = \[cl.AnimCurve() for i in range(16)]\n\n            # Add independent identity frame calculation onto the target node.\n            if expression_link and independent_identity_frame:\n                # Add identity frame knob\n                roto_node.addKnob(nuke.Tab_Knob('Identity Frame'))\n                roto_node.addKnob(nuke.Int_Knob('identity_frame', 'identity frame'))\n                roto_node\['identity_frame'].setValue(int(node\['identity_frame'].getValue()))\n                roto_node.addKnob(nuke.PyScript_Knob('identity_to_curframe', 'Current'))\n                roto_node.knob('identity_to_curframe').setTooltip(\"Set identity frame to current frame.\")\n                roto_node.knob('identity_to_curframe').setCommand(\"nuke.thisNode().knob('identity_frame').setValue(nuke.frame())\")\n                roto_node.setTab(1)\n\n                roto_node.addKnob(nuke.Double_Knob('determinant', 'determinant'))\n                determinant = \"parent.\{0\}.matrix.3(identity_frame) * parent.\{0\}.matrix.6(identity_frame) * parent.\{0\}.matrix.9(identity_frame) * parent.\{0\}.matrix.12(identity_frame)-  parent.\{0\}.matrix.2(identity_frame) * parent.\{0\}.matrix.7(identity_frame) * parent.\{0\}.matrix.9(identity_frame) * parent.\{0\}.matrix.12(identity_frame)-  parent.\{0\}.matrix.3(identity_frame) * parent.\{0\}.matrix.5(identity_frame) * parent.\{0\}.matrix.10(identity_frame) * parent.\{0\}.matrix.12(identity_frame)+  parent.\{0\}.matrix.1(identity_frame) * parent.\{0\}.matrix.7(identity_frame) * parent.\{0\}.matrix.10(identity_frame) * parent.\{0\}.matrix.12(identity_frame)+  parent.\{0\}.matrix.2(identity_frame) * parent.\{0\}.matrix.5(identity_frame) * parent.\{0\}.matrix.11(identity_frame) * parent.\{0\}.matrix.12(identity_frame)-  parent.\{0\}.matrix.1(identity_frame) * parent.\{0\}.matrix.6(identity_frame) * parent.\{0\}.matrix.11(identity_frame) * parent.\{0\}.matrix.12(identity_frame)-  parent.\{0\}.matrix.3(identity_frame) * parent.\{0\}.matrix.6(identity_frame) * parent.\{0\}.matrix.8(identity_frame) * parent.\{0\}.matrix.13(identity_frame)+  parent.\{0\}.matrix.2(identity_frame) * parent.\{0\}.matrix.7(identity_frame) * parent.\{0\}.matrix.8(identity_frame) * parent.\{0\}.matrix.13(identity_frame)+  parent.\{0\}.matrix.3(identity_frame) * parent.\{0\}.matrix.4(identity_frame) * parent.\{0\}.matrix.10(identity_frame) * parent.\{0\}.matrix.13(identity_frame)-  parent.\{0\}.matrix.0(identity_frame) * parent.\{0\}.matrix.7(identity_frame) * parent.\{0\}.matrix.10(identity_frame) * parent.\{0\}.matrix.13(identity_frame)-  parent.\{0\}.matrix.2(identity_frame) * parent.\{0\}.matrix.4(identity_frame) * parent.\{0\}.matrix.11(identity_frame) * parent.\{0\}.matrix.13(identity_frame)+  parent.\{0\}.matrix.0(identity_frame) * parent.\{0\}.matrix.6(identity_frame) * parent.\{0\}.matrix.11(identity_frame) * parent.\{0\}.matrix.13(identity_frame)+  parent.\{0\}.matrix.3(identity_frame) * parent.\{0\}.matrix.5(identity_frame) * parent.\{0\}.matrix.8(identity_frame) * parent.\{0\}.matrix.14(identity_frame)-  parent.\{0\}.matrix.1(identity_frame) * parent.\{0\}.matrix.7(identity_frame) * parent.\{0\}.matrix.8(identity_frame) * parent.\{0\}.matrix.14(identity_frame)-  parent.\{0\}.matrix.3(identity_frame) * parent.\{0\}.matrix.4(identity_frame) * parent.\{0\}.matrix.9(identity_frame) * parent.\{0\}.matrix.14(identity_frame)+  parent.\{0\}.matrix.0(identity_frame) * parent.\{0\}.matrix.7(identity_frame) * parent.\{0\}.matrix.9(identity_frame) * parent.\{0\}.matrix.14(identity_frame)+  parent.\{0\}.matrix.1(identity_frame) * parent.\{0\}.matrix.4(identity_frame) * parent.\{0\}.matrix.11(identity_frame) * parent.\{0\}.matrix.14(identity_frame)-  parent.\{0\}.matrix.0(identity_frame) * parent.\{0\}.matrix.5(identity_frame) * parent.\{0\}.matrix.11(identity_frame) * parent.\{0\}.matrix.14(identity_frame)-  parent.\{0\}.matrix.2(identity_frame) * parent.\{0\}.matrix.5(identity_frame) * parent.\{0\}.matrix.8(identity_frame) * parent.\{0\}.matrix.15(identity_frame)+  parent.\{0\}.matrix.1(identity_frame) * parent.\{0\}.matrix.6(identity_frame) * parent.\{0\}.matrix.8(identity_frame) * parent.\{0\}.matrix.15(identity_frame)+  parent.\{0\}.matrix.2(identity_frame) * parent.\{0\}.matrix.4(identity_frame) * parent.\{0\}.matrix.9(identity_frame) * parent.\{0\}.matrix.15(identity_frame)-  parent.\{0\}.matrix.0(identity_frame) * parent.\{0\}.matrix.6(identity_frame) * parent.\{0\}.matrix.9(identity_frame) * parent.\{0\}.matrix.15(identity_frame)-  parent.\{0\}.matrix.1(identity_frame) * parent.\{0\}.matrix.4(identity_frame) * parent.\{0\}.matrix.10(identity_frame) * parent.\{0\}.matrix.15(identity_frame)+  parent.\{0\}.matrix.0(identity_frame) * parent.\{0\}.matrix.5(identity_frame) * parent.\{0\}.matrix.10(identity_frame) * parent.\{0\}.matrix.15(identity_frame)\".format(node.fullName())\n                roto_node\['determinant'].setExpression(determinant)\n                for i in xrange(4):\n                    roto_node.addKnob(nuke.BBox_Knob(\"invmatrix\{0\}\".format(i)))\n                # view-source:https://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n                roto_node\['invmatrix0'].setExpression(\"(parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.13(identity_frame) - parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.13(identity_frame) + parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.14(identity_frame) - parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.14(identity_frame) - parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.15(identity_frame) + parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.15(identity_frame))/determinant\".format(node.fullName()), 0)\n                roto_node\['invmatrix0'].setExpression(\"(parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.13(identity_frame) - parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.13(identity_frame) - parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.14(identity_frame) + parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.14(identity_frame) + parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.15(identity_frame) - parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.15(identity_frame))/determinant\".format(node.fullName()), 1)\n                roto_node\['invmatrix0'].setExpression(\"(parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.13(identity_frame) - parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.13(identity_frame) + parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.14(identity_frame) - parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.14(identity_frame) - parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.15(identity_frame) + parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.15(identity_frame))/determinant\".format(node.fullName()), 2)\n                roto_node\['invmatrix0'].setExpression(\"(parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.9(identity_frame) - parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.9(identity_frame) - parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.10(identity_frame) + parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.10(identity_frame) + parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.11(identity_frame) - parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.11(identity_frame))/determinant\".format(node.fullName()), 3)\n                roto_node\['invmatrix1'].setExpression(\"(parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.14(identity_frame) + parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.14(identity_frame) + parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.15(identity_frame) - parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.15(identity_frame))/determinant\".format(node.fullName()), 0)\n                roto_node\['invmatrix1'].setExpression(\"(parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.12(identity_frame) + parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.14(identity_frame) - parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.14(identity_frame) - parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.15(identity_frame) + parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.15(identity_frame))/determinant\".format(node.fullName()), 1)\n                roto_node\['invmatrix1'].setExpression(\"(parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.14(identity_frame) + parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.14(identity_frame) + parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.15(identity_frame) - parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.15(identity_frame))/determinant\".format(node.fullName()), 2)\n                roto_node\['invmatrix1'].setExpression(\"(parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.8(identity_frame) - parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.8(identity_frame) + parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.10(identity_frame) - parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.10(identity_frame) - parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.11(identity_frame) + parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.11(identity_frame))/determinant\".format(node.fullName()), 3)\n                roto_node\['invmatrix2'].setExpression(\"(parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.12(identity_frame) + parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.13(identity_frame) - parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.13(identity_frame) - parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.15(identity_frame) + parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.15(identity_frame))/determinant\".format(node.fullName()), 0)\n                roto_node\['invmatrix2'].setExpression(\"(parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.13(identity_frame) + parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.13(identity_frame) + parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.15(identity_frame) - parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.15(identity_frame))/determinant\".format(node.fullName()), 1)\n                roto_node\['invmatrix2'].setExpression(\"(parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.12(identity_frame) + parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.13(identity_frame) - parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.13(identity_frame) - parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.15(identity_frame) + parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.15(identity_frame))/determinant\".format(node.fullName()), 2)\n                roto_node\['invmatrix2'].setExpression(\"(parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.8(identity_frame) - parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.8(identity_frame) - parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.9(identity_frame) + parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.9(identity_frame) + parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.11(identity_frame) - parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.11(identity_frame))/determinant\".format(node.fullName()), 3)\n                roto_node\['invmatrix3'].setExpression(\"(parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.13(identity_frame) + parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.13(identity_frame) + parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.14(identity_frame) - parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.14(identity_frame))/determinant\".format(node.fullName()), 0)\n                roto_node\['invmatrix3'].setExpression(\"(parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.12(identity_frame) + parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.13(identity_frame) - parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.13(identity_frame) - parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.14(identity_frame) + parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.14(identity_frame))/determinant\".format(node.fullName()), 1)\n                roto_node\['invmatrix3'].setExpression(\"(parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.13(identity_frame) + parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.13(identity_frame) + parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.14(identity_frame) - parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.14(identity_frame))/determinant\".format(node.fullName()), 2)\n                roto_node\['invmatrix3'].setExpression(\"(parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.8(identity_frame) - parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.8(identity_frame) + parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.9(identity_frame) - parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.9(identity_frame) - parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.10(identity_frame) + parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.10(identity_frame))/determinant\".format(node.fullName()), 3)\n\n                # view-source:https://www.euclideanspace.com/maths/algebra/matrix/arithmetic/fourD/index.htm\n                curve\[0].expressionString = \"parent.\{0\}.matrix.0*invmatrix0.0 + parent.\{0\}.matrix.1*invmatrix1.0 + parent.\{0\}.matrix.2*invmatrix2.0 + parent.\{0\}.matrix.3*invmatrix3.0\".format(node.fullName())\n                curve\[1].expressionString = \"parent.\{0\}.matrix.0*invmatrix0.1 + parent.\{0\}.matrix.1*invmatrix1.1 + parent.\{0\}.matrix.2*invmatrix2.1 + parent.\{0\}.matrix.3*invmatrix3.1\".format(node.fullName())\n                curve\[2].expressionString = \"parent.\{0\}.matrix.0*invmatrix0.2 + parent.\{0\}.matrix.1*invmatrix1.2 + parent.\{0\}.matrix.2*invmatrix2.2 + parent.\{0\}.matrix.3*invmatrix3.2\".format(node.fullName())\n                curve\[3].expressionString = \"parent.\{0\}.matrix.0*invmatrix0.3 + parent.\{0\}.matrix.1*invmatrix1.3 + parent.\{0\}.matrix.2*invmatrix2.3 + parent.\{0\}.matrix.3*invmatrix3.3\".format(node.fullName())\n\n                curve\[4].expressionString = \"parent.\{0\}.matrix.4*invmatrix0.0 + parent.\{0\}.matrix.5*invmatrix1.0 + parent.\{0\}.matrix.6*invmatrix2.0 + parent.\{0\}.matrix.7*invmatrix3.0\".format(node.fullName())\n                curve\[5].expressionString = \"parent.\{0\}.matrix.4*invmatrix0.1 + parent.\{0\}.matrix.5*invmatrix1.1 + parent.\{0\}.matrix.6*invmatrix2.1 + parent.\{0\}.matrix.7*invmatrix3.1\".format(node.fullName())\n                curve\[6].expressionString = \"parent.\{0\}.matrix.4*invmatrix0.2 + parent.\{0\}.matrix.5*invmatrix1.2 + parent.\{0\}.matrix.6*invmatrix2.2 + parent.\{0\}.matrix.7*invmatrix3.2\".format(node.fullName())\n                curve\[7].expressionString = \"parent.\{0\}.matrix.4*invmatrix0.3 + parent.\{0\}.matrix.5*invmatrix1.3 + parent.\{0\}.matrix.6*invmatrix2.3 + parent.\{0\}.matrix.7*invmatrix3.3\".format(node.fullName())\n\n                curve\[8].expressionString = \"parent.\{0\}.matrix.8*invmatrix0.0 + parent.\{0\}.matrix.9*invmatrix1.0 + parent.\{0\}.matrix.10*invmatrix2.0 + parent.\{0\}.matrix.11*invmatrix3.0\".format(node.fullName())\n                curve\[9].expressionString = \"parent.\{0\}.matrix.8*invmatrix0.1 + parent.\{0\}.matrix.9*invmatrix1.1 + parent.\{0\}.matrix.10*invmatrix2.1 + parent.\{0\}.matrix.11*invmatrix3.1\".format(node.fullName())\n                curve\[10].expressionString = \"parent.\{0\}.matrix.8*invmatrix0.2 + parent.\{0\}.matrix.9*invmatrix1.2 + parent.\{0\}.matrix.10*invmatrix2.2 + parent.\{0\}.matrix.11*invmatrix3.2\".format(node.fullName())\n                curve\[11].expressionString = \"parent.\{0\}.matrix.8*invmatrix0.3 + parent.\{0\}.matrix.9*invmatrix1.3 + parent.\{0\}.matrix.10*invmatrix2.3 + parent.\{0\}.matrix.11*invmatrix3.3\".format(node.fullName())\n\n                curve\[12].expressionString = \"parent.\{0\}.matrix.12*invmatrix0.0 + parent.\{0\}.matrix.13*invmatrix1.0 + parent.\{0\}.matrix.14*invmatrix2.0 + parent.\{0\}.matrix.15*invmatrix3.0\".format(node.fullName())\n                curve\[13].expressionString = \"parent.\{0\}.matrix.12*invmatrix0.1 + parent.\{0\}.matrix.13*invmatrix1.1 + parent.\{0\}.matrix.14*invmatrix2.1 + parent.\{0\}.matrix.15*invmatrix3.1\".format(node.fullName())\n                curve\[14].expressionString = \"parent.\{0\}.matrix.12*invmatrix0.2 + parent.\{0\}.matrix.13*invmatrix1.2 + parent.\{0\}.matrix.14*invmatrix2.2 + parent.\{0\}.matrix.15*invmatrix3.2\".format(node.fullName())\n                curve\[15].expressionString = \"parent.\{0\}.matrix.12*invmatrix0.3 + parent.\{0\}.matrix.13*invmatrix1.3 + parent.\{0\}.matrix.14*invmatrix2.3 + parent.\{0\}.matrix.15*invmatrix3.3\".format(node.fullName())\n\n                for i in range(16):\n                    curve\[i].useExpression = True\n                roto_node\['label'].setValue('\{0\}: x\[value identity_frame]'.format(node.name()))\n\n            elif expression_link and not independent_identity_frame:\n                # Just expression link\n                for f in range(first,last+1):\n                    for i in range(16):\n                        if node\['expression_link'].getValue():\n                            curve\[i].expressionString = \"parent.\{0\}.matrix.\{1\}\".format(node.fullName(), i)\n                            curve\[i].useExpression = True\n                        else:\n                            curve\[i].addKey(int(f), matrix.valueAt(f)\[i])\n                roto_node\['label'].setValue('\{0\}: x\{1\}'.format(node.name(), identity_frame))\n            else:\n                # Copy the animation curves as is\n                for f in range(first, last+1):\n                    for i in range(16):\n                        curve\[i].addKey(int(f), node\['matrix'].getValueAt(f, i))\n                roto_node\['label'].setValue('\{0\}: x\{1\}'.format(node.name(), identity_frame))\n\n            for y in range(1,5):\n                for x in range(1,5):\n                    cell = ((y-1)*4)+x-1\n                    roto_layer.getTransform().setExtraMatrixAnimCurve(y-1,x-1, curve\[cell])\n            curve_knob.rootLayer.append(roto_layer)\n            roto_node.setTab(1)" +STARTLINE}
addUserKnob {22 create_cornerpin l CornerPin t "Create a cornerpin node, using the specified identity frame, if enabled. \n\nIf you need a CornerPin stabilizing, click the invert checkbox." -STARTLINE T "## Create Cornerpin\ngrid_x = int(nuke.toNode('preferences').knob('GridWidth').value())\ngrid_y = int(nuke.toNode('preferences').knob('GridHeight').value())\n\nnode = nuke.thisNode()\nnuke.root().begin()\n\n_ = \[n.setSelected(False) for n in nuke.allNodes()]\ncornerpin = nuke.createNode(\"CornerPin2D\", inpanel=False)\ncornerpin.setXYpos(node.xpos()-grid_x*0, node.ypos()+grid_y*2)\ncornerpin.setSelected(True)\ncornerpin.addKnob(nuke.Tab_Knob('Identity Frame'))\ncornerpin.addKnob(nuke.Int_Knob('identity_frame', 'identity frame'))\nreference_frame = int(node\['identity_frame'].getValue())\ncornerpin\['identity_frame'].setValue(int(node\['identity_frame'].getValue()))\ncornerpin\['label'].setValue(\"PlanarProjection : ref x\{0\}\".format('\[value identity_frame]'))\n\nfor i in xrange(1, 5):\n    if node\['expression_link'].getValue():\n        cornerpin\['to\{0\}'.format(i)].setExpression(\"parent.\{0\}.op\{1\}\".format(node.fullName(), i))\n    else:\n        cornerpin\['to\{0\}'.format(i)].copyAnimations(node\['op\{0\}'.format(i)].animations())\n    cornerpin\['from\{0\}'.format(i)].setExpression('to\{0\}(identity_frame)'.format(i))\ncornerpin.setTab(1)"}
addUserKnob {22 create_cornerpin_matrix l "CornerPin Matrix" t "Create a Cornerpin with the animation in the extra matrix knob instead of the to/from knobs." -STARTLINE T "## Create Cornerpin with tracking data in matrix\ngrid_x = int(nuke.toNode('preferences').knob('GridWidth').value())\ngrid_y = int(nuke.toNode('preferences').knob('GridHeight').value())\n\nnode = nuke.thisNode()\nnuke.root().begin()\n\n_ = \[n.setSelected(False) for n in nuke.allNodes()]\ncornerpin = nuke.createNode(\"CornerPin2D\", inpanel=False)\ncornerpin.setXYpos(node.xpos()-grid_x*0, node.ypos()+grid_y*2)\ncornerpin.setSelected(True)\n\n\nreference_frame = int(node\['identity_frame'].getValue())\nexpression_link = node\['expression_link'].getValue()\nindependent_identity_frame = node\['independent_identity_frame'].getValue()\ncpmatrix = cornerpin\['transform_matrix']\n\nif expression_link and independent_identity_frame:\n    # Add identity frame knob\n    cornerpin.addKnob(nuke.Tab_Knob('Identity Frame'))\n    cornerpin.addKnob(nuke.Int_Knob('identity_frame', 'identity frame'))\n    cornerpin\['identity_frame'].setValue(int(node\['identity_frame'].getValue()))\n    cornerpin.addKnob(nuke.PyScript_Knob('identity_to_curframe', 'Current'))\n    cornerpin.knob('identity_to_curframe').setTooltip(\"Set identity frame to current frame.\")\n    cornerpin.knob('identity_to_curframe').setCommand(\"nuke.thisNode().knob('identity_frame').setValue(nuke.frame())\")\n    cornerpin.setTab(1)\n\n    cornerpin.addKnob(nuke.Double_Knob('determinant', 'determinant'))\n    determinant = \"parent.\{0\}.matrix.3(identity_frame) * parent.\{0\}.matrix.6(identity_frame) * parent.\{0\}.matrix.9(identity_frame) * parent.\{0\}.matrix.12(identity_frame)-  parent.\{0\}.matrix.2(identity_frame) * parent.\{0\}.matrix.7(identity_frame) * parent.\{0\}.matrix.9(identity_frame) * parent.\{0\}.matrix.12(identity_frame)-  parent.\{0\}.matrix.3(identity_frame) * parent.\{0\}.matrix.5(identity_frame) * parent.\{0\}.matrix.10(identity_frame) * parent.\{0\}.matrix.12(identity_frame)+  parent.\{0\}.matrix.1(identity_frame) * parent.\{0\}.matrix.7(identity_frame) * parent.\{0\}.matrix.10(identity_frame) * parent.\{0\}.matrix.12(identity_frame)+  parent.\{0\}.matrix.2(identity_frame) * parent.\{0\}.matrix.5(identity_frame) * parent.\{0\}.matrix.11(identity_frame) * parent.\{0\}.matrix.12(identity_frame)-  parent.\{0\}.matrix.1(identity_frame) * parent.\{0\}.matrix.6(identity_frame) * parent.\{0\}.matrix.11(identity_frame) * parent.\{0\}.matrix.12(identity_frame)-  parent.\{0\}.matrix.3(identity_frame) * parent.\{0\}.matrix.6(identity_frame) * parent.\{0\}.matrix.8(identity_frame) * parent.\{0\}.matrix.13(identity_frame)+  parent.\{0\}.matrix.2(identity_frame) * parent.\{0\}.matrix.7(identity_frame) * parent.\{0\}.matrix.8(identity_frame) * parent.\{0\}.matrix.13(identity_frame)+  parent.\{0\}.matrix.3(identity_frame) * parent.\{0\}.matrix.4(identity_frame) * parent.\{0\}.matrix.10(identity_frame) * parent.\{0\}.matrix.13(identity_frame)-  parent.\{0\}.matrix.0(identity_frame) * parent.\{0\}.matrix.7(identity_frame) * parent.\{0\}.matrix.10(identity_frame) * parent.\{0\}.matrix.13(identity_frame)-  parent.\{0\}.matrix.2(identity_frame) * parent.\{0\}.matrix.4(identity_frame) * parent.\{0\}.matrix.11(identity_frame) * parent.\{0\}.matrix.13(identity_frame)+  parent.\{0\}.matrix.0(identity_frame) * parent.\{0\}.matrix.6(identity_frame) * parent.\{0\}.matrix.11(identity_frame) * parent.\{0\}.matrix.13(identity_frame)+  parent.\{0\}.matrix.3(identity_frame) * parent.\{0\}.matrix.5(identity_frame) * parent.\{0\}.matrix.8(identity_frame) * parent.\{0\}.matrix.14(identity_frame)-  parent.\{0\}.matrix.1(identity_frame) * parent.\{0\}.matrix.7(identity_frame) * parent.\{0\}.matrix.8(identity_frame) * parent.\{0\}.matrix.14(identity_frame)-  parent.\{0\}.matrix.3(identity_frame) * parent.\{0\}.matrix.4(identity_frame) * parent.\{0\}.matrix.9(identity_frame) * parent.\{0\}.matrix.14(identity_frame)+  parent.\{0\}.matrix.0(identity_frame) * parent.\{0\}.matrix.7(identity_frame) * parent.\{0\}.matrix.9(identity_frame) * parent.\{0\}.matrix.14(identity_frame)+  parent.\{0\}.matrix.1(identity_frame) * parent.\{0\}.matrix.4(identity_frame) * parent.\{0\}.matrix.11(identity_frame) * parent.\{0\}.matrix.14(identity_frame)-  parent.\{0\}.matrix.0(identity_frame) * parent.\{0\}.matrix.5(identity_frame) * parent.\{0\}.matrix.11(identity_frame) * parent.\{0\}.matrix.14(identity_frame)-  parent.\{0\}.matrix.2(identity_frame) * parent.\{0\}.matrix.5(identity_frame) * parent.\{0\}.matrix.8(identity_frame) * parent.\{0\}.matrix.15(identity_frame)+  parent.\{0\}.matrix.1(identity_frame) * parent.\{0\}.matrix.6(identity_frame) * parent.\{0\}.matrix.8(identity_frame) * parent.\{0\}.matrix.15(identity_frame)+  parent.\{0\}.matrix.2(identity_frame) * parent.\{0\}.matrix.4(identity_frame) * parent.\{0\}.matrix.9(identity_frame) * parent.\{0\}.matrix.15(identity_frame)-  parent.\{0\}.matrix.0(identity_frame) * parent.\{0\}.matrix.6(identity_frame) * parent.\{0\}.matrix.9(identity_frame) * parent.\{0\}.matrix.15(identity_frame)-  parent.\{0\}.matrix.1(identity_frame) * parent.\{0\}.matrix.4(identity_frame) * parent.\{0\}.matrix.10(identity_frame) * parent.\{0\}.matrix.15(identity_frame)+  parent.\{0\}.matrix.0(identity_frame) * parent.\{0\}.matrix.5(identity_frame) * parent.\{0\}.matrix.10(identity_frame) * parent.\{0\}.matrix.15(identity_frame)\".format(node.fullName())\n    cornerpin\['determinant'].setExpression(determinant)\n    for i in xrange(4):\n        cornerpin.addKnob(nuke.BBox_Knob(\"invmatrix\{0\}\".format(i)))\n    # view-source:https://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n    cornerpin\['invmatrix0'].setExpression(\"(parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.13(identity_frame) - parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.13(identity_frame) + parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.14(identity_frame) - parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.14(identity_frame) - parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.15(identity_frame) + parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.15(identity_frame))/determinant\".format(node.fullName()), 0)\n    cornerpin\['invmatrix0'].setExpression(\"(parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.13(identity_frame) - parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.13(identity_frame) - parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.14(identity_frame) + parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.14(identity_frame) + parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.15(identity_frame) - parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.15(identity_frame))/determinant\".format(node.fullName()), 1)\n    cornerpin\['invmatrix0'].setExpression(\"(parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.13(identity_frame) - parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.13(identity_frame) + parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.14(identity_frame) - parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.14(identity_frame) - parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.15(identity_frame) + parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.15(identity_frame))/determinant\".format(node.fullName()), 2)\n    cornerpin\['invmatrix0'].setExpression(\"(parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.9(identity_frame) - parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.9(identity_frame) - parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.10(identity_frame) + parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.10(identity_frame) + parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.11(identity_frame) - parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.11(identity_frame))/determinant\".format(node.fullName()), 3)\n    cornerpin\['invmatrix1'].setExpression(\"(parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.14(identity_frame) + parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.14(identity_frame) + parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.15(identity_frame) - parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.15(identity_frame))/determinant\".format(node.fullName()), 0)\n    cornerpin\['invmatrix1'].setExpression(\"(parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.12(identity_frame) + parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.14(identity_frame) - parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.14(identity_frame) - parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.15(identity_frame) + parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.15(identity_frame))/determinant\".format(node.fullName()), 1)\n    cornerpin\['invmatrix1'].setExpression(\"(parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.14(identity_frame) + parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.14(identity_frame) + parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.15(identity_frame) - parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.15(identity_frame))/determinant\".format(node.fullName()), 2)\n    cornerpin\['invmatrix1'].setExpression(\"(parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.8(identity_frame) - parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.8(identity_frame) + parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.10(identity_frame) - parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.10(identity_frame) - parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.11(identity_frame) + parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.11(identity_frame))/determinant\".format(node.fullName()), 3)\n    cornerpin\['invmatrix2'].setExpression(\"(parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.12(identity_frame) + parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.13(identity_frame) - parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.13(identity_frame) - parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.15(identity_frame) + parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.15(identity_frame))/determinant\".format(node.fullName()), 0)\n    cornerpin\['invmatrix2'].setExpression(\"(parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.13(identity_frame) + parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.11(identity_frame)*parent.\{0\}.matrix.13(identity_frame) + parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.15(identity_frame) - parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.15(identity_frame))/determinant\".format(node.fullName()), 1)\n    cornerpin\['invmatrix2'].setExpression(\"(parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.12(identity_frame) + parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.13(identity_frame) - parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.13(identity_frame) - parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.15(identity_frame) + parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.15(identity_frame))/determinant\".format(node.fullName()), 2)\n    cornerpin\['invmatrix2'].setExpression(\"(parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.8(identity_frame) - parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.8(identity_frame) - parent.\{0\}.matrix.3(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.9(identity_frame) + parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.7(identity_frame)*parent.\{0\}.matrix.9(identity_frame) + parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.11(identity_frame) - parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.11(identity_frame))/determinant\".format(node.fullName()), 3)\n    cornerpin\['invmatrix3'].setExpression(\"(parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.13(identity_frame) + parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.13(identity_frame) + parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.14(identity_frame) - parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.14(identity_frame))/determinant\".format(node.fullName()), 0)\n    cornerpin\['invmatrix3'].setExpression(\"(parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.12(identity_frame) + parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.13(identity_frame) - parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.10(identity_frame)*parent.\{0\}.matrix.13(identity_frame) - parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.8(identity_frame)*parent.\{0\}.matrix.14(identity_frame) + parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.9(identity_frame)*parent.\{0\}.matrix.14(identity_frame))/determinant\".format(node.fullName()), 1)\n    cornerpin\['invmatrix3'].setExpression(\"(parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.12(identity_frame) - parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.13(identity_frame) + parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.13(identity_frame) + parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.14(identity_frame) - parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.14(identity_frame))/determinant\".format(node.fullName()), 2)\n    cornerpin\['invmatrix3'].setExpression(\"(parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.8(identity_frame) - parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.8(identity_frame) + parent.\{0\}.matrix.2(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.9(identity_frame) - parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.6(identity_frame)*parent.\{0\}.matrix.9(identity_frame) - parent.\{0\}.matrix.1(identity_frame)*parent.\{0\}.matrix.4(identity_frame)*parent.\{0\}.matrix.10(identity_frame) + parent.\{0\}.matrix.0(identity_frame)*parent.\{0\}.matrix.5(identity_frame)*parent.\{0\}.matrix.10(identity_frame))/determinant\".format(node.fullName()), 3)\n\n    # view-source:https://www.euclideanspace.com/maths/algebra/matrix/arithmetic/fourD/index.htm\n    cpmatrix.setExpression(\"parent.\{0\}.matrix.0*invmatrix0.0 + parent.\{0\}.matrix.1*invmatrix1.0 + parent.\{0\}.matrix.2*invmatrix2.0 + parent.\{0\}.matrix.3*invmatrix3.0\".format(node.fullName()), 0)\n    cpmatrix.setExpression(\"parent.\{0\}.matrix.0*invmatrix0.1 + parent.\{0\}.matrix.1*invmatrix1.1 + parent.\{0\}.matrix.2*invmatrix2.1 + parent.\{0\}.matrix.3*invmatrix3.1\".format(node.fullName()), 1)\n    cpmatrix.setExpression(\"parent.\{0\}.matrix.0*invmatrix0.2 + parent.\{0\}.matrix.1*invmatrix1.2 + parent.\{0\}.matrix.2*invmatrix2.2 + parent.\{0\}.matrix.3*invmatrix3.2\".format(node.fullName()), 2)\n    cpmatrix.setExpression(\"parent.\{0\}.matrix.0*invmatrix0.3 + parent.\{0\}.matrix.1*invmatrix1.3 + parent.\{0\}.matrix.2*invmatrix2.3 + parent.\{0\}.matrix.3*invmatrix3.3\".format(node.fullName()), 3)\n    cpmatrix.setExpression(\"parent.\{0\}.matrix.4*invmatrix0.0 + parent.\{0\}.matrix.5*invmatrix1.0 + parent.\{0\}.matrix.6*invmatrix2.0 + parent.\{0\}.matrix.7*invmatrix3.0\".format(node.fullName()), 4)\n    cpmatrix.setExpression(\"parent.\{0\}.matrix.4*invmatrix0.1 + parent.\{0\}.matrix.5*invmatrix1.1 + parent.\{0\}.matrix.6*invmatrix2.1 + parent.\{0\}.matrix.7*invmatrix3.1\".format(node.fullName()), 5)\n    cpmatrix.setExpression(\"parent.\{0\}.matrix.4*invmatrix0.2 + parent.\{0\}.matrix.5*invmatrix1.2 + parent.\{0\}.matrix.6*invmatrix2.2 + parent.\{0\}.matrix.7*invmatrix3.2\".format(node.fullName()), 6)\n    cpmatrix.setExpression(\"parent.\{0\}.matrix.4*invmatrix0.3 + parent.\{0\}.matrix.5*invmatrix1.3 + parent.\{0\}.matrix.6*invmatrix2.3 + parent.\{0\}.matrix.7*invmatrix3.3\".format(node.fullName()), 7)\n    cpmatrix.setExpression(\"parent.\{0\}.matrix.8*invmatrix0.0 + parent.\{0\}.matrix.9*invmatrix1.0 + parent.\{0\}.matrix.10*invmatrix2.0 + parent.\{0\}.matrix.11*invmatrix3.0\".format(node.fullName()), 8)\n    cpmatrix.setExpression(\"parent.\{0\}.matrix.8*invmatrix0.1 + parent.\{0\}.matrix.9*invmatrix1.1 + parent.\{0\}.matrix.10*invmatrix2.1 + parent.\{0\}.matrix.11*invmatrix3.1\".format(node.fullName()), 9)\n    cpmatrix.setExpression(\"parent.\{0\}.matrix.8*invmatrix0.2 + parent.\{0\}.matrix.9*invmatrix1.2 + parent.\{0\}.matrix.10*invmatrix2.2 + parent.\{0\}.matrix.11*invmatrix3.2\".format(node.fullName()), 10)\n    cpmatrix.setExpression(\"parent.\{0\}.matrix.8*invmatrix0.3 + parent.\{0\}.matrix.9*invmatrix1.3 + parent.\{0\}.matrix.10*invmatrix2.3 + parent.\{0\}.matrix.11*invmatrix3.3\".format(node.fullName()), 11)\n    cpmatrix.setExpression(\"parent.\{0\}.matrix.12*invmatrix0.0 + parent.\{0\}.matrix.13*invmatrix1.0 + parent.\{0\}.matrix.14*invmatrix2.0 + parent.\{0\}.matrix.15*invmatrix3.0\".format(node.fullName()), 12)\n    cpmatrix.setExpression(\"parent.\{0\}.matrix.12*invmatrix0.1 + parent.\{0\}.matrix.13*invmatrix1.1 + parent.\{0\}.matrix.14*invmatrix2.1 + parent.\{0\}.matrix.15*invmatrix3.1\".format(node.fullName()), 13)\n    cpmatrix.setExpression(\"parent.\{0\}.matrix.12*invmatrix0.2 + parent.\{0\}.matrix.13*invmatrix1.2 + parent.\{0\}.matrix.14*invmatrix2.2 + parent.\{0\}.matrix.15*invmatrix3.2\".format(node.fullName()), 14)\n    cpmatrix.setExpression(\"parent.\{0\}.matrix.12*invmatrix0.3 + parent.\{0\}.matrix.13*invmatrix1.3 + parent.\{0\}.matrix.14*invmatrix2.3 + parent.\{0\}.matrix.15*invmatrix3.3\".format(node.fullName()), 15)\n\n    cornerpin\['label'].setValue(\"PlanarProjection : ref x\{0\}\".format('\[value identity_frame]'))\nelif expression_link and not independent_identity_frame:\n    cornerpin\['label'].setValue('\{0\}: x\{1\}'.format(node.name(), reference_frame))\n    for i in range(16):\n        cpmatrix.setExpression(\"parent.\{0\}.matrix.\{1\}\".format(node.fullName(), i), i)\nelse:\n    cornerpin\['label'].setValue('\{0\}: x\{1\}'.format(node.name(), reference_frame))\n    cpmatrix.copyAnimations(matrix.animations())"}
addUserKnob {22 create_gridwarp l GridWarp -STARTLINE T "node = nuke.thisNode()\nmatrix = node\['matrix']\nnuke.root().begin()\ngrid_x = int(nuke.toNode('preferences').knob('GridWidth').value())\ngrid_y = int(nuke.toNode('preferences').knob('GridHeight').value())\nexpression_link = node\['expression_link'].getValue()\n\nif matrix.isAnimated():\n    _ = \[n.setSelected(False) for n in nuke.allNodes()]\n    gridwarp = nuke.createNode(\"GridWarp3\")\n    gridwarp.setXYpos(node.xpos()-grid_x*0, node.ypos()+grid_y*2)\n    gridwarp.setSelected(True)\n\n    # Add Label\n    reference_frame = int(node\['identity_frame'].getValue())\n    if expression_link:\n        gridwarp\['label'].setValue('\{0\}: x\[value identity_frame]'.format(node.name()))\n    else:\n        gridwarp\['label'].setValue('\{0\}: x\{1\}'.format(node.name(), reference_frame))\n\n    gridwarp_matrices = \[gridwarp\['source_grid_transform_matrix'], gridwarp\['destination_grid_transform_matrix']]\n\n    if expression_link:\n        for i in range(16):\n            for gridwarp_matrix in gridwarp_matrices:\n                gridwarp_matrix.setExpression(\"parent.\{0\}.matrix.\{1\}\".format(node.fullName(), i), i)\n    else:\n        gridwarp_matrices\[0].copyAnimations(matrix.animations())"}
addUserKnob {26 ""}
addUserKnob {26 desc l " " T "developed by Vit Sedlacek www.vitsedlacek.com\noptimized and improved by Jed Smith - http://gist.github.com/jedypod"}
}
Axis2 {
inputs 0
useMatrix true
name Matrix_original
xpos -276
ypos -260
disable true
}
Input {
inputs 0
name InputBG
label "\[value number]"
xpos 620
ypos -304
addUserKnob {20 User}
addUserKnob {18 ip1 R -100 100}
ip1 {0 0 0}
addUserKnob {6 ip1_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 ip1_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 ip1_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 ip1_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 ip2 l "" +STARTLINE R -100 100}
ip2 {0 0 0}
addUserKnob {6 ip2_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 ip2_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 ip2_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 ip2_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 ip3 l "" +STARTLINE R -100 100}
ip3 {0 0 0}
addUserKnob {6 ip3_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 ip3_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 ip3_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 ip3_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 ip4 l "" +STARTLINE R -100 100}
ip4 {0 0 0}
addUserKnob {6 ip4_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 ip4_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 ip4_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 ip4_panelDropped_1_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
}
Output {
name Output1
xpos 600
ypos 531
}
Axis2 {
inputs 0
translate {0.5 0.5 0}
useMatrix true
matrix {
    {{parent._MATCH_SELECTION_.matrix} {parent._MATCH_SELECTION_.matrix} {parent._MATCH_SELECTION_.matrix} {parent._MATCH_SELECTION_.matrix}}
    {{parent._MATCH_SELECTION_.matrix} {parent._MATCH_SELECTION_.matrix} {parent._MATCH_SELECTION_.matrix} {parent._MATCH_SELECTION_.matrix}}
    {{parent._MATCH_SELECTION_.matrix} {parent._MATCH_SELECTION_.matrix} {parent._MATCH_SELECTION_.matrix} {parent._MATCH_SELECTION_.matrix}}
    {{parent._MATCH_SELECTION_.matrix} {parent._MATCH_SELECTION_.matrix} {parent._MATCH_SELECTION_.matrix} {parent._MATCH_SELECTION_.matrix}}
  }
name CENTER
xpos -190
ypos 78
addUserKnob {20 User}
addUserKnob {7 plane_size l "" +STARTLINE R 0.1 100}
plane_size 1
}
set N21ea6d40 [stack 0]
Axis2 {
translate {{parent.CENTER.plane_size/2} {parent.CENTER.plane_size/2} 0}
name UR
xpos -131
ypos 222
}
push $N21ea6d40
Axis2 {
translate {{-parent.CENTER.plane_size/2} {parent.CENTER.plane_size/2} 0}
name UL
xpos -23
ypos 222
}
push $N21ea6d40
Axis2 {
translate {{parent.CENTER.plane_size/2} {-parent.CENTER.plane_size/2} 0}
name LR
xpos -241
ypos 222
}
push $N21ea6d40
Axis2 {
translate {{-parent.CENTER.plane_size/2} {-parent.CENTER.plane_size/2} 0}
name LL
xpos -367
ypos 222
}
TransformGeo {
inputs 0
translate {-53.84128952 26.45331383 -89.45389557}
rotate {-36.82652664 86.55776215 93.70707703}
scaling {3.87788868 4.277028561 1.28276515}
name _MATCH_SELECTION_
xpos -40
ypos 99
}
Input {
inputs 0
name InputCam
label "\[value number]"
xpos 440
ypos -303
number 1
}
push 0
Axis2 {
inputs 0
name point_4
xpos 300
ypos -270
}
Axis2 {
inputs 0
name point_3
xpos 190
ypos -270
}
Axis2 {
inputs 0
name point_2
xpos 80
ypos -270
}
Axis2 {
inputs 0
name point_1
xpos -30
ypos -271
}
Scene {
inputs 6
name Scene1
xpos 450
ypos -95
}
end_group
push $cut_paste_input
Group {
name VanishingPoint
selected true
xpos 1770
ypos -916
addUserKnob {20 User l Tool}
addUserKnob {12 VanishingPoint l "Vanishing Point"}
VanishingPoint {1048 354}
addUserKnob {26 ""}
addUserKnob {6 HorizonOn l "Horizon On/OFF" +STARTLINE}
HorizonOn true
addUserKnob {7 RotationHorizon l "Rotation Horizon" R -360 360}
addUserKnob {7 horizonsize l "Horizon Size" R -10 10}
addUserKnob {4 LineColor l "Line Color" M {White Black Red Green Blue ""}}
addUserKnob {7 linesize l "Line Size" R -5 5}
addUserKnob {26 ""}
addUserKnob {41 which l Mix T DissolveMix.which}
addUserKnob {20 About}
addUserKnob {26 text l "" +STARTLINE T "Created on Nuke 9.0 v8\non April 15, 2016\nAuthor: Vincent Papaix"}
}
Input {
inputs 0
name Image
xpos 244
ypos 2174
}
Dot {
name VanishingPointFormat
xpos 275
ypos 2273
}
set N2254f660 [stack 0]
Dot {
name Dot2
xpos 611
ypos 2273
}
set N225d5c40 [stack 0]
Dot {
name Dot1
xpos 985
ypos 2273
}
Roto {
cliptype none
replace true
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 512}
    {t x44800000 x44400000}
    {a}
    {curvegroup Ellipse1 576 bezier
     {{cc
       {f 8192}
       {px 1
        {xc113a540 0}
        {xbd7f0000 xc1872d60}
        {x4113a3c0 0}
        {0 xc113a480}
        {x418529a0 xbe418000}
        {0 x4113a440}
        {x4113a3c0 0}
        {xbd7f0000 x418427c0}
        {xc113a540 0}
        {0 x4113a440}
        {xc1862a60 xbe418000}
        {0 xc113a480}}}     idem}
     {t
   {{1 x44448ccd}}
   {{1 x441dcccd}}
   {{1 0}}
   {=VanishingPoint.x x4471a000}
   {=VanishingPoint.y x4438a000}
   {{1 0}}
   {{1 0}}
   {{1 0}}
   {{1 0}}
   {{1 1 -}}
   {{1 1 -}}
   {{1 1}}
   {{1 0}}
   {{1 0}}
   {{1 0}}
   {{1 0}}
   {{1 0}}
   {{1 0}}
   {{1 0}}
   {{1 1}}
   {{1 0}}
   {{1 0}}
   {{1 0}}
   {{1 0}}
   {{1 1}}
   {{1 0}}
   {{1 0}}
   {{1 0}}
   {{1 0}}
   {{1 1}}
   {{1 0}}
   {{1 0}}
   {{1 0}}
   {{1 0}}
   {{1 1}}}
     {a r x3e3b4bd8 b x3e0d5f4c str 1 spx x44800000 spy x44400000 sb 1 tt x40e00000}}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {1024 768}
color {0.1829065084 1 0.1380588412 1}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
motionblur_shutter_offset_type centred
source_black_outside true
name CircleVanihing
xpos 951
ypos 2692
}
push $N225d5c40
Crop {
box {-4048 -12 4049 11.5}
name Crop1
xpos 580
ypos 2314
}
Rectangle {
cliptype bbox
replace true
area {{-width-2000} -6 {width+2000} 6}
color {1.100000024 0.1143380776 0.0977428928 1}
name Rectangle1
xpos 580
ypos 2349
}
Transform {
translate {{VanishingPoint.x x1028 1464} {VanishingPoint.y x1028 500}}
rotate {{parent.RotationHorizon}}
name TransformHorizon
xpos 580
ypos 2389
}
FilterErode {
channels rgba
size {{-parent.horizonsize}}
name HorizonSize
xpos 580
ypos 2643
}
push $N2254f660
RotoPaint {
cliptype none
replace true
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 512}
    {t x44800000 x44400000}
    {a}
    {layer right
     {f 512}
     {t x44800000 x44400000}
     {a}
     {cubiccurve Brush22 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=height*90/100
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush21 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=height*80/100
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush20 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=height*70/100
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush19 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=height*60/100
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush18 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=height*50/100
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush17 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=height*40/100
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush16 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=height*30/100
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush15 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=height*20/100
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush14 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=height*10/100
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush4 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=0
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush2 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=height
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}}
    {layer left
     {f 512}
     {t x44800000 x44400000}
     {a}
     {cubiccurve Brush13 512 catmullrom
      {cc
       {f 2080}
       {px x4481e000
        {{=0 xbcc10200}
     {=height*90/100 xbb745000}    1}
        {{=TrackerVanishingPoint.tracks.1.track_x x43d5a969}
     {=TrackerVanishingPoint.tracks.1.track_y x4440fb4b}    1}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush12 512 catmullrom
      {cc
       {f 2080}
       {px x4481e000
        {{=0 xbcc10200}
     {=height*80/100 xbb745000}    1}
        {{=TrackerVanishingPoint.tracks.1.track_x x43d5a969}
     {=TrackerVanishingPoint.tracks.1.track_y x4440fb4b}    1}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush11 512 catmullrom
      {cc
       {f 2080}
       {px x4481e000
        {{=0 xbcc10200}
     {=height*70/100 xbb745000}    1}
        {{=TrackerVanishingPoint.tracks.1.track_x x43d5a969}
     {=TrackerVanishingPoint.tracks.1.track_y x4440fb4b}    1}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush10 512 catmullrom
      {cc
       {f 2080}
       {px x4481e000
        {{=0 xbcc10200}
     {=height*60/100 xbb745000}    1}
        {{=TrackerVanishingPoint.tracks.1.track_x x43d5a969}
     {=TrackerVanishingPoint.tracks.1.track_y x4440fb4b}    1}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush9 512 catmullrom
      {cc
       {f 2080}
       {px x4481e000
        {{=0 xbcc10200}
     {=height*50/100 xbb745000}    1}
        {{=TrackerVanishingPoint.tracks.1.track_x x43d5a969}
     {=TrackerVanishingPoint.tracks.1.track_y x4440fb4b}    1}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush8 512 catmullrom
      {cc
       {f 2080}
       {px x4481e000
        {{=0 xbcc10200}
     {=height*40/100 xbb745000}    1}
        {{=TrackerVanishingPoint.tracks.1.track_x x43d5a969}
     {=TrackerVanishingPoint.tracks.1.track_y x4440fb4b}    1}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush7 512 catmullrom
      {cc
       {f 2080}
       {px x4481e000
        {{=0 xbcc10200}
     {=height*30/100 xbb745000}    1}
        {{=TrackerVanishingPoint.tracks.1.track_x x43d5a969}
     {=TrackerVanishingPoint.tracks.1.track_y x4440fb4b}    1}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush6 512 catmullrom
      {cc
       {f 2080}
       {px x4481e000
        {{=0 xbcc10200}
     {=height*20/100 xbb745000}    1}
        {{=TrackerVanishingPoint.tracks.1.track_x x43d5a969}
     {=TrackerVanishingPoint.tracks.1.track_y x4440fb4b}    1}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush5 512 catmullrom
      {cc
       {f 2080}
       {px x4481e000
        {{=0 xbcc10200}
     {=height*10/100 xbb745000}    1}
        {{=TrackerVanishingPoint.tracks.1.track_x x43d5a969}
     {=TrackerVanishingPoint.tracks.1.track_y x4440fb4b}    1}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush1 512 catmullrom
      {cc
       {f 2080}
       {px x4481e000
        {{=0 xbcc10200}
     {=0 xbb745000}    1}
        {{=TrackerVanishingPoint.tracks.1.track_x x43d5a969}
     {=TrackerVanishingPoint.tracks.1.track_y x4440fb4b}    1}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush3 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=0
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=height
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}}
    {layer top
     {f 512}
     {t x44800000 x44400000}
     {a}
     {cubiccurve Brush31 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width*90/100
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=height
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush30 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width*80/100
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=height
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush29 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width*70/100
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=height
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush28 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width*60/100
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=height
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush27 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width*50/100
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=height
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush26 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width*40/100
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=height
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush25 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width*30/100
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=height
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush24 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width*20/100
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=height
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush23 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width*10/100
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=height
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}}
    {layer Bottom
     {f 512}
     {t x44800000 x44400000}
     {a}
     {cubiccurve Brush40 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width*90/100
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=0
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush39 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width*80/100
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=0
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush38 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width*70/100
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=0
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush37 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width*60/100
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=0
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush36 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width*50/100
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=0
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush35 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width*40/100
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=0
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush34 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width*30/100
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=0
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush33 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width*20/100
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=0
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}
     {cubiccurve Brush32 512 catmullrom
      {cc
       {f 2080}
       {px
        {1 x4481e000}
        {{=width*10/100
      {{x426e4e10 0 1 xbd6b2f0c 1}
       {xbcc10200 xbd6b2f0c 1 0 1}}}
     {=0
      {{x44800648 0 1 xbf7c98b7 1}
       {xbb745000 xbf7c98b7 1 0 1}}}
     {{1 -}}}
        {{=TrackerVanishingPoint.tracks.1.track_x
      {x44840000 x43d5a969}}
     {=TrackerVanishingPoint.tracks.1.track_y
      {x44378000 x4440fb4b}}
     {{1 -}}}}}
      {tx x4481e000 x42fdb6db x44320000}
      {a ro 0 go 0 bo 0 ao 0 bs x40a00000 bu 1 str 1 spx x44800000 spy x44400000 sb 1 tt x41800000}}}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 tt 16 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_show_paint_selection true
toolbar_brush_hardness 0.200000003
toolbar_lifetime_type single
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {1024 768}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
view {}
motionblur_on true
brush_size 5
brush_spacing 0.05000000075
brush_hardness 0.200000003
source_black_outside true
name lines
xpos 241
ypos 2308
}
FilterErode {
channels rgba
size {{-parent.linesize}}
name FilterErode1
xpos 241
ypos 2334
}
Grade {
channels rgba
multiply 0.5
black_clamp false
name Grade1
xpos 241
ypos 2381
}
Unpremult {
name Unpremult1
xpos 241
ypos 2407
}
set N22940b50 [stack 0]
Grade {
multiply {0.04818040133 0.1158332229 1 1}
black_clamp false
name Blue
xpos 413
ypos 2512
}
push $N22940b50
Grade {
multiply {0.095087111 1 0.1130718589 1}
black_clamp false
name Green
xpos 412
ypos 2476
}
push $N22940b50
Grade {
multiply {1 0.04959082603 0.1012617946 1}
black_clamp false
name Red
xpos 413
ypos 2443
}
push $N22940b50
Invert {
channels rgb
name Black
xpos 412
ypos 2407
}
push $N22940b50
Switch {
inputs 5
which {{LineColor}}
name SwitchColor
xpos 241
ypos 2512
}
Premult {
name Premult1
xpos 241
ypos 2565
}
push $N2254f660
Dot {
name Dot3
xpos -30
ypos 2273
}
set N22e48ad0 [stack 0]
Merge2 {
inputs 2
name Merge3
xpos -64
ypos 2565
}
Merge2 {
inputs 2
name Merge2
xpos -64
ypos 2643
disable {{1-parent.HorizonOn}}
}
Merge2 {
inputs 2
name Merge1
xpos -64
ypos 2692
}
Crop {
box {0 0 {VanishingPointFormat.width} {VanishingPointFormat.height}}
name CropVanishing
xpos -64
ypos 2748
}
push $N22e48ad0
Dot {
name Dot5
xpos -348
ypos 2821
}
Dissolve {
inputs 2
channels rgba
which 1
name DissolveMix
xpos -64
ypos 2820
}
Output {
name Output1
xpos -64
ypos 2901
}
push $N22e48ad0
Tracker4 {
tracks { { 1 31 1 } 
{ { 5 1 20 enable e 1 } 
{ 3 1 75 name name 1 } 
{ 2 1 58 track_x track_x 1 } 
{ 2 1 58 track_y track_y 1 } 
{ 2 1 63 offset_x offset_x 1 } 
{ 2 1 63 offset_y offset_y 1 } 
{ 4 1 27 T T 1 } 
{ 4 1 27 R R 1 } 
{ 4 1 27 S S 1 } 
{ 2 0 45 error error 1 } 
{ 1 1 0 error_min error_min 1 } 
{ 1 1 0 error_max error_max 1 } 
{ 1 1 0 pattern_x pattern_x 1 } 
{ 1 1 0 pattern_y pattern_y 1 } 
{ 1 1 0 pattern_r pattern_r 1 } 
{ 1 1 0 pattern_t pattern_t 1 } 
{ 1 1 0 search_x search_x 1 } 
{ 1 1 0 search_y search_y 1 } 
{ 1 1 0 search_r search_r 1 } 
{ 1 1 0 search_t search_t 1 } 
{ 2 1 0 key_track key_track 1 } 
{ 2 1 0 key_search_x key_search_x 1 } 
{ 2 1 0 key_search_y key_search_y 1 } 
{ 2 1 0 key_search_r key_search_r 1 } 
{ 2 1 0 key_search_t key_search_t 1 } 
{ 2 1 0 key_track_x key_track_x 1 } 
{ 2 1 0 key_track_y key_track_y 1 } 
{ 2 1 0 key_track_r key_track_r 1 } 
{ 2 1 0 key_track_t key_track_t 1 } 
{ 2 1 0 key_centre_offset_x key_centre_offset_x 1 } 
{ 2 1 0 key_centre_offset_y key_centre_offset_y 1 } 
} 
{ 
 { {curve} "Master" {VanishingPoint.x} {VanishingPoint.y} {curve} {curve} 1 0 0 {curve} 1 0 -32 -32 32 32 -22 -22 22 22 {curve} {curve} {curve} {curve} {curve} {curve} {curve} {curve} {curve} {curve} {curve}  } 
} 
}

translate {{curve x1039 0} {curve x1039 0}}
center {{curve x1039 1106} {curve x1039 936}}
selected_tracks 0
name TrackerVanishingPoint
xpos 36
ypos 2312
}
end_group
push $cut_paste_input
add_layer {VRayVelocity VRayVelocity.X VRayVelocity.Y VRayVelocity.Z VRayVelocity.red VRayVelocity.green VRayVelocity.blue VRayVelocity.alpha}
Group {
name VectorDenoise1
help "IMPORTANT: Make sure your img input have correct alpha"
tile_color 0x4c5d99ff
selected true
xpos 1770
ypos -196
addUserKnob {20 VectorDenoise}
addUserKnob {26 dividerVectors l "<b><font color=#6592c3>Vectors Setup</font><b>"}
addUserKnob {41 in l vectors T ShuffleMain.in}
addUserKnob {4 vectors l "vectors type" t "IMPORTANT: Make sure your img input have correct alpha\n\nRenderMan - Velocity vectors normalized to format.\n                   VectorDenoise internally will multiply\n                   those vectors by the width/height.\n\nArnold - Velocity Motion Vectors\n\nNuke Distance - Distance between Samples\nNuke Velocity - Velocity Motion Vectors\nFor both nuke vectors use:\nsamples: 1, shutter: 0.5 center\n\nVectorGenerator - Use Motion pass (both forward/backward) from VectorGenerator.\nMake sure to shuffle all 4 motion channels uvuv into rgba and plug into vectors input.\nBetter result with Nuke10 SmartVectors converted back to Motion with VectorToMotion." M {RenderMan Arnold Vray Clarisse "Nuke Velocity" "Nuke Distance" VectorGenerator}}
vectors Vray
addUserKnob {6 unpremultiplied -STARTLINE}
addUserKnob {22 Get_VG l "Get VectorGenerator3D" -STARTLINE T "tg = nuke.thisGroup()\n\ntg.begin()\na = nuke.toNode('VectorGenerator3D')\na.knob('selected').setValue(True)\nnuke.nodeCopy(a.name())\ntg.end()\n\nnuke.nodePaste(a.name())"}
addUserKnob {14 overscan l "overscan %" R 0 100}
addUserKnob {7 anamorphic R 1 3}
anamorphic 1
addUserKnob {7 ExpandVectors l "Expand Vectors" R 0 100}
ExpandVectors 20
addUserKnob {26 dividerDenoise l "<b><font color=#6592c3>Denoise</font><b>"}
addUserKnob {41 also_merge l "apply to" T Average3Frames.also_merge}
addUserKnob {4 type l "math type" M {"3 Avarege" "5 Avarege" "3 Temporal Median" "5 Temporal Median" "" ""}}
addUserKnob {6 PerformUnpremultiplied l "Perform Unpremultiplied" -STARTLINE}
PerformUnpremultiplied true
addUserKnob {6 AffectAlpha l "Affect Alpha" +STARTLINE}
addUserKnob {26 dividerLimit l "<b><font color=#6592c3>Limit</font><b>"}
addUserKnob {6 limitOn l On +STARTLINE}
addUserKnob {6 showLimit -STARTLINE}
addUserKnob {14 maxSpeed R 0 100}
addUserKnob {14 falloff R 0 100}
falloff 1
addUserKnob {26 dividerMask l "<b><font color=#6592c3>Mask</font><b>"}
addUserKnob {41 maskChannel l "mask channel" T Keymix1.maskChannel}
addUserKnob {6 invertMask l invert -STARTLINE}
addUserKnob {7 mix}
mix 1
addUserKnob {26 ""}
addUserKnob {26 info l "" +STARTLINE T "ILM Vector Denoise v1.1.1   |   lmignardi@ilm.com              "}
addUserKnob {32 Help -STARTLINE T "start https://confluence.lucasfilm.com/display/COMP/VectorDenoise"}
}
StickyNote {
inputs 0
name StickyNote1
label "Previous frame distorted\nto match the actual frame"
xpos -1349
ypos 1521
}
StickyNote {
inputs 0
name StickyNote2
label "Next frame distorted back\nto match the actual frame"
xpos -712
ypos 1520
}
StickyNote {
inputs 0
name StickyNote4
label "2nd Next frame distorted back\nto match the actual frame"
xpos -444
ypos 1531
}
StickyNote {
inputs 0
name StickyNote3
label "2nd Previous frames distorted\nto match the actual frame"
xpos -1678
ypos 1523
}
Group {
inputs 0
name VectorGenerator3D
tile_color 0x4c5d99ff
xpos -2327
ypos 1480
}
Input {
inputs 0
name cam
xpos 784
ypos -656
number 2
}
Dot {
name Dot1
xpos 818
ypos -570
}
set N22b7e980 [stack 0]
Input {
inputs 0
name obj
xpos 908
ypos -654
number 1
}
Dot {
name Dot2
xpos 942
ypos -579
}
set N22b885d0 [stack 0]
Input {
inputs 0
name bg
xpos 1034
ypos -656
}
Dot {
name Dot3
xpos 1068
ypos -564
}
set N22b92470 [stack 0]
ScanlineRender {
inputs 3
conservative_shader_sampling false
shutter -2
shutteroffset centred
motion_vectors_type distance
MB_channel backward
name ScanlineRender4
label Backward1
xpos 784
ypos -409
}
push $N22b7e980
push $N22b885d0
push $N22b92470
ScanlineRender {
inputs 3
conservative_shader_sampling false
shutter 2
shutteroffset centred
motion_vectors_type distance
MB_channel forward
name ScanlineRender3
label Forward1
xpos 908
ypos -408
}
Copy {
inputs 2
channels backward
name Copy1
xpos 908
ypos -323
}
Output {
name Output1
xpos 908
ypos -188
}
end_group
Input {
inputs 0
name mask
xpos -722
ypos 4293
number 2
}
Input {
inputs 0
name img
xpos -3330
ypos -951
}
Dot {
name Dot59
xpos -3296
ypos -767
}
set N22a5afe0 [stack 0]
Dot {
name Dot51
xpos -3296
ypos -79
}
set N22b65150 [stack 0]
Dot {
name Dot16
xpos -3296
ypos 625
}
set N22b69f70 [stack 0]
Dot {
name Dot20
xpos -3296
ypos 3620
}
set N22b6ed00 [stack 0]
Dot {
name Dot7
xpos -3296
ypos 3830
}
set N22b73b50 [stack 0]
Dot {
name Dot4
xpos -3296
ypos 4204
}
set N22b789a0 [stack 0]
Dot {
name Dot14
xpos -470
ypos 4204
}
set N22996360 [stack 0]
push $N22b73b50
Dot {
name Dot50
xpos -603
ypos 3830
}
set N2299af90 [stack 0]
Input {
inputs 0
name geom
xpos -63
ypos 4052
number 1
}
push $N2299af90
push $N2299af90
push $N2299af90
Unpremult {
channels all
name Unpremult2
xpos -511
ypos 3752
}
push $N22b65150
push $N22a5afe0
Dot {
name Dot60
xpos -2983
ypos -767
}
set N229ad250 [stack 0]
Shuffle {
in {{{ShuffleMain.in}}}
out motion
name Shuffle12
label "\[value in]-->\[value out]"
xpos -2370
ypos -617
}
Remove {
operation keep
channels motion
name Remove1
xpos -2370
ypos -581
}
Dot {
name Dot57
label VectorGenerator
xpos -2336
ypos -340
}
push $N229ad250
Shuffle {
in VRayVelocity
blue black
alpha black
name ShuffleMain
xpos -3017
ypos -642
}
Remove {
operation keep
channels rgb
name Remove2
xpos -3017
ypos -586
}
Dot {
name Dot17
xpos -2983
ypos -527
}
set N22bd9f60 [stack 0]
Multiply {
channels rgb
value 2
name Multiply5
label "Nuke Distance"
xpos -2482
ypos -395
}
push $N22bd9f60
Multiply {
channels rgb
value 0.5
name Multiply6
label "Nuke Velocity"
xpos -2616
ypos -394
}
push $N22bd9f60
Multiply {
channels rgb
value {{width*(1+overscan.w/100)} {height*(1+overscan.h/100)} {curve} {curve}}
name Multiply9
label Clarisse
xpos -2740
ypos -397
}
push $N22bd9f60
Dot {
name Dot58
label Vray
xpos -2798
ypos -387
}
push $N22bd9f60
Dot {
name Dot56
label Arnold
xpos -2865
ypos -385
}
push $N22bd9f60
Multiply {
channels rgb
value {{width*(1+overscan.w/100)} {-height*(1+overscan.h/100)} 1 1}
name Multiply7
label RenderMan
xpos -3017
ypos -396
}
Switch {
inputs 7
which {{parent.vectors}}
name Switch3
xpos -3017
ypos -247
}
Multiply {
channels rgb
value {{anamorphic} 1 1 1}
name Multiply8
label Anamorphic
xpos -3017
ypos -182
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy1
xpos -3017
ypos -86
disable {{"!\[exists parent.input0]"}}
}
Premult {
channels all
name Premult3
xpos -3017
ypos 4
disable {{1-parent.unpremultiplied}}
}
Dot {
name Dot52
xpos -2983
ypos 91
}
set N22bb82d0 [stack 0]
Blur {
size {{parent.ExpandVectors}}
name Blur1
xpos -2882
ypos 84
}
Unpremult {
channels all
name Unpremult5
xpos -2882
ypos 122
}
set N22bcae90 [stack 0]
push $N22bcae90
Merge2 {
inputs 2
operation divide
output {-rgba.red -rgba.green -rgba.blue rgba.alpha}
name Merge15
xpos -2882
ypos 160
}
push $N22bb82d0
Merge2 {
inputs 2
operation under
also_merge all
name MergeExp
xpos -3017
ypos 231
disable {{parent.ExpandVectors==0}}
}
Unpremult {
channels all
name Unpremult6
xpos -3017
ypos 289
}
Dot {
name Dot19
xpos -2983
ypos 417
}
set N22a8cf70 [stack 0]
Dot {
name Dot55
xpos -2983
ypos 878
}
Dot {
name Dot54
xpos -2434
ypos 878
}
set N22a969f0 [stack 0]
push $N22a8cf70
Dot {
name Dot9
xpos -2654
ypos 417
}
set N229b5ac0 [stack 0]
Expression {
channel0 none
channel1 none
channel2 none
channel3 alpha
expr3 abs(g)
name AbsG
xpos -2620
ypos 474
}
Grade {
channels alpha
blackpoint {{maxSpeed.h}}
whitepoint {{blackpoint*(1/gamma)*2}}
gamma {{falloff.h}}
name Grade4
xpos -2620
ypos 498
}
push $N229b5ac0
Expression {
channel0 none
channel1 none
channel2 none
channel3 alpha
expr3 abs(r)
name AbsR
xpos -2760
ypos 477
}
Grade {
channels alpha
blackpoint {{maxSpeed.w}}
whitepoint {{blackpoint*(1/gamma)*2}}
gamma {{falloff.w}}
name Grade1
xpos -2760
ypos 501
}
Merge2 {
inputs 2
name Merge13
xpos -2688
ypos 574
}
push $N22b69f70
Copy {
inputs 2
from0 rgba.alpha
to0 mask.a
name Copy7
xpos -2688
ypos 618
}
Dot {
name Dot53
xpos -2305
ypos 625
}
set N22a18620 [stack 0]
Copy {
inputs 2
channels motion
name Copy11
xpos -2339
ypos 979
}
Dot {
name Dot8
xpos -2305
ypos 1271
}
set N22a2b6a0 [stack 0]
TimeOffset {
time_offset 1
time ""
name TimeOffset11
xpos -2479
ypos 1415
}
set N22a30310 [stack 0]
push $N22a2b6a0
TimeOffset {
time_offset 2
time ""
name TimeOffset14
xpos -2722
ypos 1418
}
IDistort {
channels motion
uv forward
uv_scale -1
name IDistort5
xpos -2722
ypos 1444
}
Merge2 {
inputs 2
operation plus
Achannels none
Bchannels none
output none
also_merge motion
name Merge16
xpos -2722
ypos 1482
}
IDistort {
uv forward
uv_scale -1
name IDistort7
xpos -2722
ypos 1520
}
push $N22a969f0
Dot {
name Dot12
xpos -1723
ypos 878
}
set N22c210f0 [stack 0]
TimeOffset {
time_offset -2
time ""
name TimeOffset13
label fn2
xpos -1519
ypos 956
}
push 0
push $N22c210f0
TimeOffset {
time_offset -1
time ""
name TimeOffset12
label fn1
xpos -1661
ypos 949
}
Multiply {
channels rgb
value 2
name Multiply2
xpos -1661
ypos 987
}
push $N22c210f0
Merge2 {
inputs 3+1
operation plus
also_merge mask
name Plus3
xpos -1757
ypos 1079
}
Multiply {
channels rgb
value -1
name Multiply10
xpos -1757
ypos 1124
}
Shuffle {
blue black
alpha black
out motion
name Shuffle5
label "\[value in]-->\[value out]"
xpos -1757
ypos 1202
}
push $N22a18620
Dot {
name Dot2
xpos -975
ypos 625
}
set N22c9ffd0 [stack 0]
Dot {
name Dot3
xpos -975
ypos 1294
}
set N22ca4c40 [stack 0]
Dot {
name Dot6
xpos -1188
ypos 1294
}
set N22ca9a90 [stack 0]
Dot {
name Dot11
xpos -1508
ypos 1294
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels motion
name Copy6
xpos -1542
ypos 1401
}
IDistort {
channels {{{Average3Frames.also_merge}}}
uv motion
name IDistort4
xpos -1542
ypos 1451
}
TimeOffset {
time_offset 2
time ""
name TimeOffset7
xpos -1542
ypos 1560
}
Switch {
inputs 2
which {{parent.vectors==6}}
name Switch5
xpos -1542
ypos 1802
}
push $N22ca4c40
Dot {
name Dot21
xpos -975
ypos 1810
}
set N22cdf0f0 [stack 0]
Switch {
inputs 2
which {{parent.Switch9.which}}
name Switch10
xpos -1542
ypos 1926
}
Dot {
name Dot39
xpos -1508
ypos 2134
}
set N22aa1a00 [stack 0]
Dot {
name Dot44
xpos 554
ypos 2134
}
Dot {
name Dot28
xpos 554
ypos 2457
}
set N22aab6a0 [stack 0]
push $N22a30310
IDistort {
uv forward
uv_scale -1
name IDistort8
xpos -2479
ypos 1529
}
push $N22c210f0
Dot {
name Dot42
xpos -1336
ypos 878
}
set N22abc120 [stack 0]
TimeOffset {
time_offset -1
time ""
name TimeOffset8
label fn1
xpos -1260
ypos 971
}
push $N22abc120
Merge2 {
inputs 2
operation plus
name Merge3
xpos -1370
ypos 1074
}
Multiply {
channels rgb
value -1
name Multiply3
xpos -1370
ypos 1119
}
Shuffle {
blue black
alpha black
out motion
name Shuffle2
label "\[value in]-->\[value out]"
xpos -1370
ypos 1199
}
push $N22ca9a90
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels motion
name Copy2
xpos -1222
ypos 1411
}
IDistort {
channels {{{Average3Frames.also_merge}}}
uv motion
name IDistort2
xpos -1222
ypos 1463
}
TimeOffset {
time_offset 1
time ""
name TimeOffset1
xpos -1222
ypos 1553
}
Switch {
inputs 2
which {{parent.vectors==6}}
name Switch6
xpos -1222
ypos 1803
}
push $N22cdf0f0
Switch {
inputs 2
which {{frame>parent.first_frame}}
name Switch9
xpos -1222
ypos 1921
}
Dot {
name Dot26
xpos -1188
ypos 2203
}
set N22d06a10 [stack 0]
Dot {
name Dot36
xpos -125
ypos 2203
}
set N22d0b870 [stack 0]
Dot {
name Dot45
xpos 753
ypos 2203
}
Dot {
name Dot29
xpos 753
ypos 2457
}
set N22d15510 [stack 0]
Merge2 {
inputs 2
operation max
also_merge all
name Max
xpos 520
ypos 2588
}
push $N22aab6a0
push $N22c9ffd0
Dot {
name Dot38
xpos 74
ypos 625
}
set N22d2aae0 [stack 0]
Dot {
name Dot13
xpos 950
ypos 625
}
Dot {
name Dot30
xpos 950
ypos 2460
}
set N22d347b0 [stack 0]
Merge2 {
inputs 2
operation max
also_merge all
name Max1
xpos 706
ypos 2582
}
set N22d39600 [stack 0]
Merge2 {
inputs 2
operation min
also_merge all
name Merge5
xpos 592
ypos 2665
}
push $N22d39600
push $N22d15510
push $N22a2b6a0
TimeOffset {
time_offset -1
time ""
name TimeOffset3
xpos -2179
ypos 1416
}
set N22d5ae10 [stack 0]
IDistort {
uv backward
uv_scale -1
name IDistort6
xpos -2179
ypos 1528
}
push $N22abc120
Dot {
name Dot40
xpos -640
ypos 878
}
set N22d70210 [stack 0]
TimeOffset {
time_offset 1
time ""
name TimeOffset2
label fp1
xpos -797
ypos 961
}
push $N22d70210
Merge2 {
inputs 2
operation plus
name Merge2
xpos -674
ypos 1072
}
Shuffle {
blue black
alpha black
out motion
name Shuffle3
label "\[value in]-->\[value out]"
xpos -674
ypos 1164
}
push $N22ca4c40
Dot {
name Dot5
xpos -759
ypos 1294
}
set N22d9f860 [stack 0]
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels motion
name Copy3
xpos -793
ypos 1402
}
IDistort {
channels {{{Average3Frames.also_merge}}}
uv motion
name IDistort3
xpos -793
ypos 1454
}
TimeOffset {
time_offset -1
time ""
name TimeOffset4
xpos -793
ypos 1558
}
Switch {
inputs 2
which {{parent.vectors==6}}
name Switch7
xpos -793
ypos 1816
}
push $N22cdf0f0
Switch {
inputs 2
which {{frame<parent.last_frame}}
name Switch11
xpos -793
ypos 1919
}
Dot {
name Dot27
xpos -759
ypos 2272
}
set N233d8070 [stack 0]
Dot {
name Dot37
xpos 271
ypos 2272
}
set N233dcef0 [stack 0]
Dot {
name Dot46
xpos 1137
ypos 2272
}
Dot {
name Dot31
xpos 1137
ypos 2461
}
set N233e6b90 [stack 0]
Merge2 {
inputs 2
operation max
also_merge all
name Max2
xpos 901
ypos 2579
}
set N233eb9e0 [stack 0]
Merge2 {
inputs 2
operation min
also_merge all
name Merge4
xpos 798
ypos 2665
}
set N233fc340 [stack 0]
Merge2 {
inputs 2
operation max
also_merge all
name Max5
xpos 724
ypos 2745
}
push $N233fc340
push $N233eb9e0
push $N22d347b0
push $N22d5ae10
push $N22a2b6a0
TimeOffset {
time_offset -2
time ""
name TimeOffset10
xpos -1979
ypos 1414
}
IDistort {
channels motion
uv backward
uv_scale -1
name IDistort11
xpos -1979
ypos 1440
}
Merge2 {
inputs 2
operation plus
Achannels none
Bchannels none
output none
also_merge motion
name Merge14
xpos -1979
ypos 1478
}
IDistort {
uv backward
uv_scale -1
name IDistort12
xpos -1979
ypos 1516
}
push $N22d70210
Dot {
name Dot41
xpos -286
ypos 878
}
set N2344e8d0 [stack 0]
TimeOffset {
time_offset 2
time ""
name TimeOffset5
label fp2
xpos -553
ypos 969
}
push 0
push $N2344e8d0
TimeOffset {
time_offset 1
time ""
name TimeOffset6
label fp1
xpos -418
ypos 954
}
Multiply {
channels rgb
value 2
name Multiply1
xpos -418
ypos 992
}
push $N2344e8d0
Merge2 {
inputs 3+1
operation plus
also_merge mask
name Plus1
xpos -320
ypos 1068
}
Shuffle {
blue black
alpha black
out motion
name Shuffle4
label "\[value in]-->\[value out]"
xpos -320
ypos 1160
}
push $N22d9f860
Dot {
name Dot10
xpos -493
ypos 1294
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels motion
name Copy5
xpos -527
ypos 1409
}
IDistort {
channels {{{Average3Frames.also_merge}}}
uv motion
name IDistort1
xpos -527
ypos 1459
}
TimeOffset {
time_offset -2
time ""
name TimeOffset9
xpos -527
ypos 1558
}
Switch {
inputs 2
which {{parent.vectors==6}}
name Switch8
xpos -527
ypos 1832
}
push $N22cdf0f0
Switch {
inputs 2
which {{parent.Switch11.which}}
name Switch12
xpos -527
ypos 1920
}
Dot {
name Dot43
xpos -493
ypos 2340
}
set N234cc6c0 [stack 0]
Dot {
name Dot47
xpos 1321
ypos 2340
}
Dot {
name Dot32
xpos 1321
ypos 2462
}
set N234d6390 [stack 0]
Merge2 {
inputs 2
operation max
also_merge all
name Max3
xpos 1089
ypos 2593
}
set N234db1e0 [stack 0]
Merge2 {
inputs 2
operation min
also_merge all
name Merge6
xpos 965
ypos 2663
}
set N234ebb40 [stack 0]
Merge2 {
inputs 2
operation max
also_merge all
name Max6
xpos 911
ypos 2730
}
Merge2 {
inputs 2
operation min
also_merge all
name Merge7
xpos 816
ypos 2809
}
push $N234ebb40
push $N234db1e0
push $N233e6b90
push $N234d6390
Merge2 {
inputs 2
operation max
also_merge all
name Max4
xpos 1282
ypos 2593
}
Merge2 {
inputs 2
operation min
also_merge all
name Merge8
xpos 1146
ypos 2665
}
Merge2 {
inputs 2
operation max
also_merge all
name Max7
xpos 1056
ypos 2741
}
Merge2 {
inputs 2
operation min
also_merge all
name Merge9
label "5 Temporal\nMedian"
xpos 913
ypos 2874
}
push $N22d0b870
Dot {
name Dot33
xpos -125
ypos 2469
}
set N2355f150 [stack 0]
push $N22d2aae0
Dot {
name Dot34
xpos 74
ypos 2469
}
set N23563da0 [stack 0]
Merge2 {
inputs 2
operation max
also_merge all
name Max8
xpos -159
ypos 2584
}
push $N2355f150
push $N233dcef0
Dot {
name Dot35
xpos 271
ypos 2476
}
set N235795a0 [stack 0]
Merge2 {
inputs 2
operation max
also_merge all
name Max9
xpos 67
ypos 2589
}
Merge2 {
inputs 2
operation min
also_merge all
name Merge10
xpos -44
ypos 2692
}
push $N23563da0
push $N235795a0
Merge2 {
inputs 2
operation max
also_merge all
name Max10
xpos 237
ypos 2589
}
Merge2 {
inputs 2
operation min
also_merge all
name Merge11
label "3 Temporal\nMedian"
xpos 48
ypos 2763
}
push $N234cc6c0
Dot {
name Dot25
xpos -493
ypos 2608
}
push $N233d8070
Dot {
name Dot24
xpos -759
ypos 2565
}
set N235c4f40 [stack 0]
push $N22d06a10
Dot {
name Dot23
xpos -1188
ypos 2550
}
set N235c9de0 [stack 0]
push 0
push $N22aa1a00
Dot {
name Dot22
xpos -1508
ypos 2590
}
push $N22cdf0f0
Dot {
name Dot1
xpos -975
ypos 2545
}
set N235d3a80 [stack 0]
Merge2 {
inputs 5+1
operation average
output {rgba.red rgba.green rgba.blue -rgba.alpha}
also_merge {{{Average3Frames.also_merge}}}
name Average5Frames1
label "5 Avarege \nFrames"
xpos -793
ypos 2762
}
push $N235c9de0
push 0
push $N235c4f40
push $N235d3a80
Merge2 {
inputs 3+1
operation average
output {rgba.red rgba.green rgba.blue -rgba.alpha}
also_merge rgb
name Average3Frames
label "3 Avarege \nFrames"
xpos -1222
ypos 2756
}
Switch {
inputs 4
which {{type}}
name Switch1
xpos -369
ypos 3109
}
Dot {
name Dot48
xpos -335
ypos 3308
}
set N23601e60 [stack 0]
Dot {
name Dot49
xpos -125
ypos 3308
}
Shuffle {
in mask
in2 rgba
alpha red
name Shuffle7
xpos -159
ypos 3459
}
push $N22b6ed00
Shuffle {
red alpha
green black
blue black
name Shuffle1
xpos -697
ypos 3617
disable {{!showLimit}}
}
Unpremult {
channels {{{Average3Frames.also_merge}}}
name Unpremult4
xpos -547
ypos 3613
disable {{1-parent.PerformUnpremultiplied x1003 1}}
}
push $N23601e60
Shuffle {
red black
green alpha
blue black
name Shuffle6
xpos -369
ypos 3450
disable {{!showLimit}}
}
Unpremult {
channels {{{Average3Frames.also_merge}}}
name Unpremult1
xpos -369
ypos 3501
disable {{1-parent.PerformUnpremultiplied}}
}
Keymix {
inputs 3
name Keymix2
xpos -369
ypos 3613
disable {{1-limitOn x15 1}}
}
ShuffleCopy {
inputs 2
in {{{ShuffleMain.in}}}
in2 none
red red
green green
blue blue
out {{{ShuffleMain.in}}}
name ShuffleCopy1
xpos -369
ypos 3758
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy4
xpos -369
ypos 3823
disable {{"AffectAlpha || !\[exists parent.input0]" x22 1}}
}
Premult {
channels {{{Average3Frames.also_merge}}}
name Premult1
xpos -369
ypos 3855
disable {{1-parent.PerformUnpremultiplied}}
}
BlackOutside {
name BlackOutside1
xpos -369
ypos 3901
}
Copy {
inputs 2
channels motion
bbox B
name Copy8
xpos -369
ypos 3984
}
Copy {
inputs 2
channels all
bbox B
name Copy10
xpos -369
ypos 4043
disable {{"!\[exists parent.input1]"}}
}
CopyBBox {
inputs 2
name CopyBBox1
xpos -369
ypos 4122
}
Dissolve {
inputs 2
which {{1-parent.mix}}
name Dissolve1
xpos -369
ypos 4197
}
Dot {
name Dot15
xpos -335
ypos 4296
}
set N236b6970 [stack 0]
push $N22996360
Keymix {
inputs 3
invertMask {{parent.invertMask}}
name Keymix1
xpos -504
ypos 4289
}
push $N236b6970
Switch {
inputs 2
which {{"\[exists parent.input2]"}}
name Switch4
xpos -369
ypos 4395
}
Output {
name Output1
xpos -369
ypos 4785
}
push $N22b789a0
Dot {
name Dot18
xpos -3296
ypos 4572
}
Switch {
which {{"frame>parent.first_frame && frame<parent.last_frame"}}
name Switch2
xpos -444
ypos 4569
}
end_group
push $cut_paste_input
Group {
name CORAL1
tile_color 0x63869bff
label "VIGNETTE\n"
selected true
xpos 249
ypos -352
addUserKnob {20 User l "Vignette Controls"}
addUserKnob {7 VignetteExposure l Exposure R -8 2}
VignetteExposure -1
addUserKnob {26 ""}
addUserKnob {41 softness l Expansion T Radial1.softness}
addUserKnob {7 VignetteSoftness l Softness R 0 20}
VignetteSoftness 12.2
addUserKnob {7 VignetteAnamorphism l Anamorphism R 0.2 7}
VignetteAnamorphism 1
addUserKnob {7 VignetteVerticalMargin l "Vertical Margin" R 0.2 7}
VignetteVerticalMargin 1
addUserKnob {7 VignetteVoffset l "Vertical offset" R -20 20}
addUserKnob {7 VignetteHoffset l "Horizontal offset" R -30 30}
addUserKnob {6 VignettePreview l Preview +STARTLINE}
addUserKnob {20 VignetteVersion l Version}
addUserKnob {26 VignetteVersionText l Description T "\n\nKMK Vignette\n\nVignette tool independent of the resolution.\n(will give you the same result for the same aspect ratio for any given resolution)\n"}
addUserKnob {26 VignetteVersion2 l Version T "\n\nVersion Release: 1.0\n\nJuan A. Espigares Enriquez (jeenriquez)\n\nRelease Date: 07/02/22"}
}
Input {
inputs 0
name COMP
xpos -1310
ypos 461
}
Dot {
name Dot71
xpos -1276
ypos 627
}
set N9fe0000 [stack 0]
Dot {
name Dot72
xpos -1651
ypos 627
}
Shuffle {
red black
green black
blue black
alpha black
name Shuffle151
label "\[value in]-->\[value out]"
xpos -1685
ypos 677
}
Radial {
cliptype bbox
area {0 0 {format.width} {format.height}}
softness 0.475
name Radial1
xpos -1685
ypos 739
}
Invert {
name Invert8
xpos -1685
ypos 794
}
Blur {
channels rgba
size {{(parent.VignetteSoftness*format.width)/100}}
crop false
name Blur1
xpos -1685
ypos 887
}
Dot {
name Dot1
xpos -1651
ypos 939
}
Transform {
translate {{(parent.VignetteHoffset*format.width)/100} {(parent.VignetteVoffset*format.width)/100}}
scale {{((parent.VignetteAnamorphism*format.width)/100)/format.width*100} {((parent.VignetteVerticalMargin*format.width)/100)/format.width*100}}
center {{format.width/2} {format.height/2}}
black_outside false
shutteroffset centred
name Transform1
selected true
xpos -1553
ypos 936
}
set N7fdb900 [stack 0]
push $N7fdb900
push $N9fe0000
EXPTool {
inputs 1+1
mode Stops
red {{parent.VignetteExposure}}
green {{parent.VignetteExposure}}
blue {{parent.VignetteExposure}}
name Exposure1
xpos -1310
ypos 936
}
Switch {
inputs 2
which {{parent.VignettePreview}}
name Switch1
xpos -1310
ypos 1020
}
Output {
name Output1
xpos -1310
ypos 1089
}
end_group
push $cut_paste_input
Group {
name FaceCCMatch1
tile_color 0xd3a38aff
selected true
xpos -486
ypos -1007
addUserKnob {20 User l "Face ColorMatch"}
addUserKnob {7 Intensity l "Match Value" R 20 200}
Intensity 68
addUserKnob {7 Saturation}
Saturation 1
addUserKnob {4 MatchType l MatchingType M {"Blur/Detail Average" "Blur CC  (fastest)" "DetailReduction " "Replace Detail " "" ""}}
MatchType "Blur CC  (fastest)"
addUserKnob {26 ""}
addUserKnob {41 mix T MultiplyColor.mix}
addUserKnob {20 Instructions_1 l Instructions}
addUserKnob {26 Instructions l "" +STARTLINE T "Plug in the Face before comping it over the Plate one. \n\n-Use a Value between 20 and 200 \n(0 will give you return the plates face)\n\n-Desaturate if you only want to match luminance (Not on ReplaceDetail Mode)\n\n4 Types:  \n\n-Average: Matches Color using Blur and Reduce Detail Average,\n\n-Blur: (Fastest), \n\n-DetailReduction (Slow)\n\n-Replaces Face Detail onto plate ones \n\ndgonzalez"}
}
Input {
inputs 0
name Face
xpos 452
ypos 272
}
Dot {
name Dot12
xpos 486
ypos 358
}
set N2f04c2e0 [stack 0]
Input {
inputs 0
name Plate
xpos 1203
ypos 189
number 1
}
Shuffle {
alpha white
name Shuffle1
label "\[value in]-->\[value out]"
xpos 1203
ypos 231
}
Dot {
name Dot13
xpos 1237
ypos 304
}
set N2f3cb620 [stack 0]
Group {
name AA_RemoveRetail
tile_color 0xffffffff
xpos 1311
ypos 424
addUserKnob {20 AA}
addUserKnob {41 channels l "Layer Copy" T Copy1.channels}
addUserKnob {26 ""}
addUserKnob {3 size}
size {{parent.Intensity}}
addUserKnob {7 weight R -1 1}
}
Input {
inputs 0
name Input
xpos 510
ypos 38
}
Dot {
name Dot3
xpos 544
ypos 186
}
set N2f056600 [stack 0]
Dot {
name Dot5
xpos 214
ypos 186
}
set N2f018880 [stack 0]
Dot {
name Dot8
xpos -226
ypos 186
}
Transform {
rotate 67.5
center {1101 576}
name TransformA3
xpos -260
ypos 230
}
Dot {
name Dot7
xpos -226
ypos 282
}
set N2f06ab70 [stack 0]
FilterErode {
channels all
size {{-parent.size}}
name FilterErodeB6
xpos -150
ypos 321
}
FilterErode {
channels all
size {{parent.size}}
name FilterErodeA6
xpos -150
ypos 368
}
push $N2f06ab70
FilterErode {
channels all
size {{parent.size}}
name FilterErodeA7
xpos -370
ypos 319
}
FilterErode {
channels all
size {{-parent.size}}
name FilterErodeB7
xpos -370
ypos 367
}
Dissolve {
inputs 2
which {{parent.Dissolve2.which}}
name Dissolve4
xpos -260
ypos 416
}
Transform {
rotate {{-parent.TransformA3.rotate}}
center {1101 576}
name TransformB3
xpos -260
ypos 470
}
push $N2f018880
Transform {
rotate 22.5
center {1101 576}
name TransformA2
xpos 180
ypos 230
}
Dot {
name Dot6
xpos 214
ypos 282
}
set N2efd1eb0 [stack 0]
FilterErode {
channels all
size {{-parent.size}}
name FilterErodeB4
xpos 290
ypos 320
}
FilterErode {
channels all
size {{parent.size}}
name FilterErodeA4
xpos 290
ypos 367
}
push $N2efd1eb0
FilterErode {
channels all
size {{parent.size}}
name FilterErodeA5
xpos 70
ypos 321
}
FilterErode {
channels all
size {{-parent.size}}
name FilterErodeB5
xpos 70
ypos 368
}
Dissolve {
inputs 2
which {{parent.Dissolve2.which}}
name Dissolve3
xpos 180
ypos 416
}
Transform {
rotate {{-parent.TransformA2.rotate}}
center {1101 576}
name TransformB2
xpos 180
ypos 467
}
push 0
push $N2f056600
Dot {
name Dot9
xpos 874
ypos 186
}
set N2f0db180 [stack 0]
Dot {
name Dot4
xpos 1314
ypos 186
}
Transform {
rotate 45
center {1101 576}
name TransformA1
xpos 1280
ypos 230
}
Dot {
name Dot2
xpos 1314
ypos 282
}
set N2f0f30e0 [stack 0]
FilterErode {
channels all
size {{-parent.size}}
name FilterErodeB2
xpos 1390
ypos 320
}
FilterErode {
channels all
size {{parent.size}}
name FilterErodeA2
xpos 1390
ypos 368
}
push $N2f0f30e0
FilterErode {
channels all
size {{parent.size}}
name FilterErodeA3
xpos 1170
ypos 320
}
FilterErode {
channels all
size {{-parent.size}}
name FilterErodeB3
xpos 1170
ypos 368
}
Dissolve {
inputs 2
which {{(parent.weight+1)/2}}
name Dissolve2
xpos 1280
ypos 422
}
Transform {
rotate {{-parent.TransformA1.rotate}}
center {1101 576}
name TransformB1
xpos 1280
ypos 454
}
push $N2f0db180
Dot {
name Dot1
xpos 874
ypos 282
}
set N2f142670 [stack 0]
FilterErode {
channels all
size {{-parent.size}}
name FilterErodeB1
xpos 950
ypos 320
}
FilterErode {
channels all
size {{parent.size}}
name FilterErodeA1
xpos 950
ypos 368
}
push $N2f142670
FilterErode {
channels all
size {{parent.size}}
name FilterErodeA0
xpos 730
ypos 320
}
FilterErode {
channels all
size {{-parent.size}}
name FilterErodeB0
xpos 730
ypos 368
}
Dissolve {
inputs 2
which {{parent.Dissolve2.which}}
name Dissolve1
xpos 840
ypos 416
}
Merge2 {
inputs 4+1
operation average
also_merge all
name Merge1
xpos 510
ypos 540
}
push $N2f056600
Copy {
inputs 2
channels rgba
bbox B
name Copy1
xpos 510
ypos 608
}
Output {
name Output1
xpos 510
ypos 686
}
end_group
Blur {
channels rgba
size {{parent.Blur1.size}}
name Blur2
xpos 1311
ypos 448
}
set N2f1a7450 [stack 0]
push $N2f04c2e0
push $N2f3cb620
Merge2 {
inputs 2
name Merge6
xpos 998
ypos 355
}
set N2f1b5230 [stack 0]
Dot {
name Dot1
xpos 1517
ypos 358
}
push $N2f1b5230
Group {
name AA_RemoveDetail
tile_color 0xffffffff
selected true
xpos 1142
ypos 427
addUserKnob {20 AA}
addUserKnob {41 channels l "Layer Copy" T Copy1.channels}
addUserKnob {26 ""}
addUserKnob {3 size}
size {{parent.Intensity}}
addUserKnob {7 weight R -1 1}
}
Input {
inputs 0
name Input
xpos 510
ypos 38
}
Dot {
name Dot3
xpos 544
ypos 186
}
set N2f1d9120 [stack 0]
Dot {
name Dot5
xpos 214
ypos 186
}
set N2f1ddfc0 [stack 0]
Dot {
name Dot8
xpos -226
ypos 186
}
Transform {
rotate 67.5
center {1101 576}
name TransformA3
xpos -260
ypos 230
}
Dot {
name Dot7
xpos -226
ypos 282
}
set N2f1f5e80 [stack 0]
FilterErode {
channels all
size {{-parent.size}}
name FilterErodeB6
xpos -150
ypos 321
}
FilterErode {
channels all
size {{parent.size}}
name FilterErodeA6
xpos -150
ypos 368
}
push $N2f1f5e80
FilterErode {
channels all
size {{parent.size}}
name FilterErodeA7
xpos -370
ypos 319
}
FilterErode {
channels all
size {{-parent.size}}
name FilterErodeB7
xpos -370
ypos 367
}
Dissolve {
inputs 2
which {{parent.Dissolve2.which}}
name Dissolve4
xpos -260
ypos 416
}
Transform {
rotate {{-parent.TransformA3.rotate}}
center {1101 576}
name TransformB3
xpos -260
ypos 470
}
push $N2f1ddfc0
Transform {
rotate 22.5
center {1101 576}
name TransformA2
xpos 180
ypos 230
}
Dot {
name Dot6
xpos 214
ypos 282
}
set N2f253730 [stack 0]
FilterErode {
channels all
size {{-parent.size}}
name FilterErodeB4
xpos 290
ypos 320
}
FilterErode {
channels all
size {{parent.size}}
name FilterErodeA4
xpos 290
ypos 367
}
push $N2f253730
FilterErode {
channels all
size {{parent.size}}
name FilterErodeA5
xpos 70
ypos 321
}
FilterErode {
channels all
size {{-parent.size}}
name FilterErodeB5
xpos 70
ypos 368
}
Dissolve {
inputs 2
which {{parent.Dissolve2.which}}
name Dissolve3
xpos 180
ypos 416
}
Transform {
rotate {{-parent.TransformA2.rotate}}
center {1101 576}
name TransformB2
xpos 180
ypos 466
}
push 0
push $N2f1d9120
Dot {
name Dot9
xpos 874
ypos 186
}
set N2f2a2d50 [stack 0]
Dot {
name Dot4
xpos 1314
ypos 186
}
Transform {
rotate 45
center {1101 576}
name TransformA1
xpos 1280
ypos 230
}
Dot {
name Dot2
xpos 1314
ypos 282
}
set N2f2bacb0 [stack 0]
FilterErode {
channels all
size {{-parent.size}}
name FilterErodeB2
xpos 1390
ypos 320
}
FilterErode {
channels all
size {{parent.size}}
name FilterErodeA2
xpos 1390
ypos 368
}
push $N2f2bacb0
FilterErode {
channels all
size {{parent.size}}
name FilterErodeA3
xpos 1170
ypos 320
}
FilterErode {
channels all
size {{-parent.size}}
name FilterErodeB3
xpos 1170
ypos 368
}
Dissolve {
inputs 2
which {{(parent.weight+1)/2}}
name Dissolve2
xpos 1280
ypos 422
}
Transform {
rotate {{-parent.TransformA1.rotate}}
center {1101 576}
name TransformB1
xpos 1280
ypos 454
}
push $N2f2a2d50
Dot {
name Dot1
xpos 874
ypos 282
}
set N2f30a240 [stack 0]
FilterErode {
channels all
size {{-parent.size}}
name FilterErodeB1
xpos 950
ypos 320
}
FilterErode {
channels all
size {{parent.size}}
name FilterErodeA1
xpos 950
ypos 368
}
push $N2f30a240
FilterErode {
channels all
size {{parent.size}}
name FilterErodeA0
xpos 730
ypos 320
}
FilterErode {
channels all
size {{-parent.size}}
name FilterErodeB0
xpos 730
ypos 368
}
Dissolve {
inputs 2
which {{parent.Dissolve2.which}}
name Dissolve1
xpos 840
ypos 416
}
Merge2 {
inputs 4+1
operation average
also_merge all
name Merge1
xpos 510
ypos 540
}
push $N2f1d9120
Copy {
inputs 2
channels rgba
bbox B
name Copy1
xpos 510
ypos 606
}
Output {
name Output1
xpos 510
ypos 684
}
end_group
Blur {
channels rgba
size 30
name Blur1
xpos 1142
ypos 451
}
set N2f36f310 [stack 0]
Merge2 {
inputs 2
operation divide
name Merge2
xpos 1483
ypos 495
}
Merge2 {
inputs 2
operation multiply
Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
name MultiplyColor1
xpos 1311
ypos 682
}
push $N2f04c2e0
Unpremult {
name Unpremult1
xpos 607
ypos 428
}
set N2f438670 [stack 0]
Dissolve {
inputs 2
which {{parent.MultiplyColor.mix}}
name Dissolve1
xpos 769
ypos 676
}
push $N2f3cb620
Blur {
channels rgba
size {{parent.Intensity}}
name Blur6
xpos 995
ypos 435
}
push $N2f1b5230
Blur {
channels rgba
size {{parent.Intensity}}
name Blur5
xpos 851
ypos 434
}
Merge2 {
inputs 2
operation divide
name Merge5
xpos 995
ypos 536
}
set N2f467860 [stack 0]
push $N2f1a7450
push $N2f36f310
Merge2 {
inputs 2
operation divide
name Merge1
xpos 1238
ypos 519
}
set N2f478120 [stack 0]
push $N2f467860
push $N2f467860
push $N2f478120
Merge2 {
inputs 2
operation average
name Merge3
xpos 1238
ypos 573
}
Switch {
inputs 4
which {{parent.MatchType}}
name Switch1
xpos 995
ypos 627
}
Saturation {
saturation {{parent.Saturation}}
name Saturation1
xpos 844
ypos 627
}
push $N2f438670
Merge2 {
inputs 2
operation multiply
Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
mix 0.76
name MultiplyColor
xpos 607
ypos 627
}
set N2f4ad940 [stack 0]
push $N2f4ad940
push $N2f4ad940
Switch {
inputs 4
which {{parent.MatchType}}
name Switch2
xpos 607
ypos 682
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy1
xpos 452
ypos 676
}
Premult {
name Premult1
xpos 452
ypos 794
}
Output {
name Output1
xpos 452
ypos 901
}
end_group
push $cut_paste_input
Inpaint2 {
center {1920 804}
name Inpaint1
note_font "Bitstream Vera Sans"
selected true
xpos 1920
ypos -105
}
